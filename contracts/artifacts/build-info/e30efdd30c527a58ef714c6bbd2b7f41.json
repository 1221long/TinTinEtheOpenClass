{
	"id": "e30efdd30c527a58ef714c6bbd2b7f41",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/t3_waa.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\n\r\npragma solidity >=0.7.0 <0.9.0;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\n// import {IERC20} from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\n\r\n// 了解流动性的含义，即合约内可供交换的币对的存量。（样例只展示一个币对，2种代币）\r\n// lp是ss合约的代币，代表注入流动性的人，所注入的流动性代币的凭证。\r\n\r\ncontract SimpleSwap is ERC20 {\r\n    // 用于记录ss可接收的代币类型/编号？\r\n    IERC20 public token0;\r\n    IERC20 public token1;\r\n\r\n    // 收到的代币数量\r\n    uint public reserve0;\r\n    uint public reserve1;\r\n\r\n    constructor(IERC20 _token0, IERC20 _token1) ERC20(\"SimpleSwap\", \"SS\"){\r\n        token0 = _token0;\r\n        token1 = _token1;\r\n    }\r\n\r\n    event Mint(address indexed sender, uint amount0, uint amount1);\r\n\r\n    // 输入2种币， 得到合约代币lp\r\n    // 因命名了返回参数名，所以，不需要在函数体里面使用return. 节约gas?\r\n    function addLiquidity(uint amount0Input, uint amount1Input) public returns(uint liquidity) {\r\n        // 先拿授权，且转入代币\r\n        token0.transferFrom(msg.sender, address(this), amount0Input);\r\n        token1.transferFrom(msg.sender, address(this), amount1Input);\r\n\r\n        // 总供给\r\n        uint _totalSupply = totalSupply();\r\n\r\n        if(_totalSupply == 0) {\r\n            liquidity = sqrt(amount0Input * amount1Input);\r\n        } else {\r\n            liquidity = min(amount0Input * _totalSupply / reserve0, amount1Input * _totalSupply/reserve1);\r\n        }\r\n        \r\n        require(liquidity > 0, \"INSUFFICIENT_LIQUIDITY_MINTED\");\r\n\r\n        // 通过ss的代币余额更新 状态变量（ss的链上变量）\r\n        reserve0 = token0.balanceOf(address(this));\r\n        reserve1 = token1.balanceOf(address(this));\r\n\r\n        //\r\n        _mint(msg.sender, liquidity);\r\n\r\n        emit Mint(msg.sender, amount0Input, amount1Input);\r\n    }\r\n\r\n    event Burn(address indexed sender, uint amount0, uint amount1);\r\n\r\n    // 输入lp，返还2种代币\r\n    // 转出数量 = (liquidity / totalSupply_LP) * reserve\r\n    function removeLiquidity(uint liquidity) external  returns (uint amount0, uint amount1) {\r\n        // 获取ss里面2种代币的持有量\r\n        uint _balance0 = token0.balanceOf(address(this));\r\n        uint _balance1 = token1.balanceOf(address(this));\r\n\r\n        // 总供给\r\n        uint _totalSupply = totalSupply();\r\n        amount0 = liquidity * _balance0 / _totalSupply;\r\n        amount1 = liquidity * _balance1 / _totalSupply;\r\n\r\n        require(amount0 > 0 && amount1 > 0, \"INSUFFICIENT_LIQUIDITY_MINTED\");\r\n\r\n        // 销毁代币lp\r\n        _burn(msg.sender, liquidity);\r\n        // 转回给发起者\r\n        token0.transfer(msg.sender, amount0);\r\n        token1.transfer(msg.sender, amount1);\r\n\r\n        // 更新状态变量\r\n        reserve0 = token0.balanceOf(address(this));\r\n        reserve1 = token1.balanceOf(address(this));\r\n\r\n        emit Burn(msg.sender, amount0, amount1);\r\n    }\r\n    \r\n    // 交易换的量 \r\n    function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) public pure returns (uint amountOut) {\r\n        require(amountIn > 0, \"INSUFFICIENT_AMOUNT\");\r\n        require(reserveIn > 0 && reserveOut > 0 , \"INSUFFICIENT_LIQUIDITY\");\r\n\r\n        amountOut = amountIn * reserveOut / (reserveIn + amountIn);\r\n    }\r\n\r\n    event Swap(address indexed sender, uint amountIn, address tokenIn, uint amountOut, address tokenOut);\r\n    // \r\n    function swap(uint amountIn, IERC20 tokenIn, uint tokenOutMin) external returns (uint amountOut, IERC20 tokenOut) {\r\n        require(amountIn > 0, \"INSUFFICIENT_OUTPUT_AMOUNT\");\r\n        require(tokenIn == token0 || tokenIn == token1, \"INVALID_TOKEN\");\r\n\r\n        if (tokenIn == token0) {\r\n            tokenOut = token1;\r\n            amountOut = getAmountOut(amountIn, reserve0, reserve1);\r\n            require(amountOut > tokenOutMin, \"INSUFFICIENT_OUTPUT_AMOUNT\");\r\n            tokenIn.transferFrom(msg.sender, address(this), amountIn);\r\n            tokenOut.transfer(msg.sender, amountOut);\r\n        } else {\r\n            tokenOut = token0;\r\n            amountOut = getAmountOut(amountIn, reserve1, reserve0);\r\n            require(amountOut > tokenOutMin, \"INSUFFICIENT_OUTPUT_AMOUNT\");\r\n            tokenIn.transferFrom(msg.sender, address(this), amountIn);\r\n            tokenOut.transfer(msg.sender, amountOut);\r\n        }\r\n\r\n        // 更新储备量\r\n        reserve0 = token0.balanceOf(address(this));\r\n        reserve1 = token1.balanceOf(address(this));\r\n\r\n        emit Swap(msg.sender, amountIn, address(tokenIn), amountOut, address(tokenOut));\r\n    }\r\n\r\n    function sqrt(uint y) internal  pure returns (uint z) {\r\n        if (y > 3) {\r\n            z = y;\r\n            uint x = y / 2 + 1;\r\n            while (x < z) {\r\n                z = x;\r\n                x = (y / x + x) / 2;\r\n            }\r\n        } else if (y != 0) {\r\n            z = 1;\r\n        }\r\n    }\r\n\r\n    function min(uint x, uint y) internal  pure returns (uint z) {\r\n        z = x > y ? y : x ;\r\n    }\r\n\r\n    // function totalSupply() internal pure returns (uint total) {\r\n    //     total = reserve0 * reserve1;\r\n    // }\r\n}\r\n\r\n/*\r\ntoken0 0x38cB7800C3Fddb8dda074C1c650A155154924C73\r\ntoken1 0xC3Ba5050Ec45990f76474163c5bA673c244aaECA\r\n\r\nlp address 0x5B38Da6a701c568545dCfcB03FcB875f56beddC4\r\n\r\nswap address  0xE3Ca443c9fd7AF40A2B5a95d43207E763e56005F\r\n\r\n*/"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 159,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 165,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 167,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 169,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/t3_waa.sol": {
				"SimpleSwap": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "_token0",
									"type": "address"
								},
								{
									"internalType": "contract IERC20",
									"name": "_token1",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "tokenIn",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "tokenOut",
									"type": "address"
								}
							],
							"name": "Swap",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount0Input",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1Input",
									"type": "uint256"
								}
							],
							"name": "addLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountOut",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"name": "removeLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "reserve0",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "reserve1",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "contract IERC20",
									"name": "tokenIn",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenOutMin",
									"type": "uint256"
								}
							],
							"name": "swap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "contract IERC20",
									"name": "tokenOut",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/t3_waa.sol\":432:5254  contract SimpleSwap is ERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/t3_waa.sol\":667:798  constructor(IERC20 _token0, IERC20 _token1) ERC20(\"SimpleSwap\", \"SS\"){... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0a\n  dup2\n  mstore\n  0x20\n  add\n  0x53696d706c655377617000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x02\n  dup2\n  mstore\n  0x20\n  add\n  0x5353000000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1970:1975  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1967  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1975  _name = name_ */\n  swap1\n  dup2\n  tag_7\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1995:2002  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:1992  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:2002  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_9\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_9:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"contracts/t3_waa.sol\":756:763  _token0 */\n  dup2\n    /* \"contracts/t3_waa.sol\":747:753  token0 */\n  0x05\n  0x00\n    /* \"contracts/t3_waa.sol\":747:763  token0 = _token0 */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/t3_waa.sol\":783:790  _token1 */\n  dup1\n    /* \"contracts/t3_waa.sol\":774:780  token1 */\n  0x06\n  0x00\n    /* \"contracts/t3_waa.sol\":774:790  token1 = _token1 */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/t3_waa.sol\":667:798  constructor(IERC20 _token0, IERC20 _token1) ERC20(\"SimpleSwap\", \"SS\"){... */\n  pop\n  pop\n    /* \"contracts/t3_waa.sol\":432:5254  contract SimpleSwap is ERC20 {... */\n  jump(tag_11)\n    /* \"#utility.yul\":88:205   */\ntag_13:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_15:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_16:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_46\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_15\n  jump\t// in\ntag_46:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:678   */\ntag_17:\n    /* \"#utility.yul\":619:626   */\n  0x00\n    /* \"#utility.yul\":648:672   */\n  tag_48\n    /* \"#utility.yul\":666:671   */\n  dup3\n    /* \"#utility.yul\":648:672   */\n  tag_16\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":637:672   */\n  swap1\n  pop\n    /* \"#utility.yul\":568:678   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":684:834   */\ntag_18:\n    /* \"#utility.yul\":771:809   */\n  tag_50\n    /* \"#utility.yul\":803:808   */\n  dup2\n    /* \"#utility.yul\":771:809   */\n  tag_17\n  jump\t// in\ntag_50:\n    /* \"#utility.yul\":764:769   */\n  dup2\n    /* \"#utility.yul\":761:810   */\n  eq\n    /* \"#utility.yul\":751:828   */\n  tag_51\n  jumpi\n    /* \"#utility.yul\":824:825   */\n  0x00\n    /* \"#utility.yul\":821:822   */\n  dup1\n    /* \"#utility.yul\":814:826   */\n  revert\n    /* \"#utility.yul\":751:828   */\ntag_51:\n    /* \"#utility.yul\":684:834   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":840:1011   */\ntag_19:\n    /* \"#utility.yul\":911:916   */\n  0x00\n    /* \"#utility.yul\":942:948   */\n  dup2\n    /* \"#utility.yul\":936:949   */\n  mload\n    /* \"#utility.yul\":927:949   */\n  swap1\n  pop\n    /* \"#utility.yul\":958:1005   */\n  tag_53\n    /* \"#utility.yul\":999:1004   */\n  dup2\n    /* \"#utility.yul\":958:1005   */\n  tag_18\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":840:1011   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1017:1580   */\ntag_3:\n    /* \"#utility.yul\":1124:1130   */\n  0x00\n    /* \"#utility.yul\":1132:1138   */\n  dup1\n    /* \"#utility.yul\":1181:1183   */\n  0x40\n    /* \"#utility.yul\":1169:1178   */\n  dup4\n    /* \"#utility.yul\":1160:1167   */\n  dup6\n    /* \"#utility.yul\":1156:1179   */\n  sub\n    /* \"#utility.yul\":1152:1184   */\n  slt\n    /* \"#utility.yul\":1149:1268   */\n  iszero\n  tag_55\n  jumpi\n    /* \"#utility.yul\":1187:1266   */\n  tag_56\n  tag_13\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":1149:1268   */\ntag_55:\n    /* \"#utility.yul\":1307:1308   */\n  0x00\n    /* \"#utility.yul\":1332:1410   */\n  tag_57\n    /* \"#utility.yul\":1402:1409   */\n  dup6\n    /* \"#utility.yul\":1393:1399   */\n  dup3\n    /* \"#utility.yul\":1382:1391   */\n  dup7\n    /* \"#utility.yul\":1378:1400   */\n  add\n    /* \"#utility.yul\":1332:1410   */\n  tag_19\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":1322:1410   */\n  swap3\n  pop\n    /* \"#utility.yul\":1278:1420   */\n  pop\n    /* \"#utility.yul\":1459:1461   */\n  0x20\n    /* \"#utility.yul\":1485:1563   */\n  tag_58\n    /* \"#utility.yul\":1555:1562   */\n  dup6\n    /* \"#utility.yul\":1546:1552   */\n  dup3\n    /* \"#utility.yul\":1535:1544   */\n  dup7\n    /* \"#utility.yul\":1531:1553   */\n  add\n    /* \"#utility.yul\":1485:1563   */\n  tag_19\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":1475:1563   */\n  swap2\n  pop\n    /* \"#utility.yul\":1430:1573   */\n  pop\n    /* \"#utility.yul\":1017:1580   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1586:1685   */\ntag_20:\n    /* \"#utility.yul\":1638:1644   */\n  0x00\n    /* \"#utility.yul\":1672:1677   */\n  dup2\n    /* \"#utility.yul\":1666:1678   */\n  mload\n    /* \"#utility.yul\":1656:1678   */\n  swap1\n  pop\n    /* \"#utility.yul\":1586:1685   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1691:1871   */\ntag_21:\n    /* \"#utility.yul\":1739:1816   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1736:1737   */\n  0x00\n    /* \"#utility.yul\":1729:1817   */\n  mstore\n    /* \"#utility.yul\":1836:1840   */\n  0x41\n    /* \"#utility.yul\":1833:1834   */\n  0x04\n    /* \"#utility.yul\":1826:1841   */\n  mstore\n    /* \"#utility.yul\":1860:1864   */\n  0x24\n    /* \"#utility.yul\":1857:1858   */\n  0x00\n    /* \"#utility.yul\":1850:1865   */\n  revert\n    /* \"#utility.yul\":1877:2057   */\ntag_22:\n    /* \"#utility.yul\":1925:2002   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1922:1923   */\n  0x00\n    /* \"#utility.yul\":1915:2003   */\n  mstore\n    /* \"#utility.yul\":2022:2026   */\n  0x22\n    /* \"#utility.yul\":2019:2020   */\n  0x04\n    /* \"#utility.yul\":2012:2027   */\n  mstore\n    /* \"#utility.yul\":2046:2050   */\n  0x24\n    /* \"#utility.yul\":2043:2044   */\n  0x00\n    /* \"#utility.yul\":2036:2051   */\n  revert\n    /* \"#utility.yul\":2063:2383   */\ntag_23:\n    /* \"#utility.yul\":2107:2113   */\n  0x00\n    /* \"#utility.yul\":2144:2145   */\n  0x02\n    /* \"#utility.yul\":2138:2142   */\n  dup3\n    /* \"#utility.yul\":2134:2146   */\n  div\n    /* \"#utility.yul\":2124:2146   */\n  swap1\n  pop\n    /* \"#utility.yul\":2191:2192   */\n  0x01\n    /* \"#utility.yul\":2185:2189   */\n  dup3\n    /* \"#utility.yul\":2181:2193   */\n  and\n    /* \"#utility.yul\":2212:2230   */\n  dup1\n    /* \"#utility.yul\":2202:2283   */\n  tag_63\n  jumpi\n    /* \"#utility.yul\":2268:2272   */\n  0x7f\n    /* \"#utility.yul\":2260:2266   */\n  dup3\n    /* \"#utility.yul\":2256:2273   */\n  and\n    /* \"#utility.yul\":2246:2273   */\n  swap2\n  pop\n    /* \"#utility.yul\":2202:2283   */\ntag_63:\n    /* \"#utility.yul\":2330:2332   */\n  0x20\n    /* \"#utility.yul\":2322:2328   */\n  dup3\n    /* \"#utility.yul\":2319:2333   */\n  lt\n    /* \"#utility.yul\":2299:2317   */\n  dup2\n    /* \"#utility.yul\":2296:2334   */\n  sub\n    /* \"#utility.yul\":2293:2377   */\n  tag_64\n  jumpi\n    /* \"#utility.yul\":2349:2367   */\n  tag_65\n  tag_22\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":2293:2377   */\ntag_64:\n    /* \"#utility.yul\":2114:2383   */\n  pop\n    /* \"#utility.yul\":2063:2383   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2389:2530   */\ntag_24:\n    /* \"#utility.yul\":2438:2442   */\n  0x00\n    /* \"#utility.yul\":2461:2464   */\n  dup2\n    /* \"#utility.yul\":2453:2464   */\n  swap1\n  pop\n    /* \"#utility.yul\":2484:2487   */\n  dup2\n    /* \"#utility.yul\":2481:2482   */\n  0x00\n    /* \"#utility.yul\":2474:2488   */\n  mstore\n    /* \"#utility.yul\":2518:2522   */\n  0x20\n    /* \"#utility.yul\":2515:2516   */\n  0x00\n    /* \"#utility.yul\":2505:2523   */\n  keccak256\n    /* \"#utility.yul\":2497:2523   */\n  swap1\n  pop\n    /* \"#utility.yul\":2389:2530   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2536:2629   */\ntag_25:\n    /* \"#utility.yul\":2573:2579   */\n  0x00\n    /* \"#utility.yul\":2620:2622   */\n  0x20\n    /* \"#utility.yul\":2615:2617   */\n  0x1f\n    /* \"#utility.yul\":2608:2613   */\n  dup4\n    /* \"#utility.yul\":2604:2618   */\n  add\n    /* \"#utility.yul\":2600:2623   */\n  div\n    /* \"#utility.yul\":2590:2623   */\n  swap1\n  pop\n    /* \"#utility.yul\":2536:2629   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2635:2742   */\ntag_26:\n    /* \"#utility.yul\":2679:2687   */\n  0x00\n    /* \"#utility.yul\":2729:2734   */\n  dup3\n    /* \"#utility.yul\":2723:2727   */\n  dup3\n    /* \"#utility.yul\":2719:2735   */\n  shl\n    /* \"#utility.yul\":2698:2735   */\n  swap1\n  pop\n    /* \"#utility.yul\":2635:2742   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2748:3141   */\ntag_27:\n    /* \"#utility.yul\":2817:2823   */\n  0x00\n    /* \"#utility.yul\":2867:2868   */\n  0x08\n    /* \"#utility.yul\":2855:2865   */\n  dup4\n    /* \"#utility.yul\":2851:2869   */\n  mul\n    /* \"#utility.yul\":2890:2987   */\n  tag_70\n    /* \"#utility.yul\":2920:2986   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":2909:2918   */\n  dup3\n    /* \"#utility.yul\":2890:2987   */\n  tag_26\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":3008:3047   */\n  tag_71\n    /* \"#utility.yul\":3038:3046   */\n  dup7\n    /* \"#utility.yul\":3027:3036   */\n  dup4\n    /* \"#utility.yul\":3008:3047   */\n  tag_26\n  jump\t// in\ntag_71:\n    /* \"#utility.yul\":2996:3047   */\n  swap6\n  pop\n    /* \"#utility.yul\":3080:3084   */\n  dup1\n    /* \"#utility.yul\":3076:3085   */\n  not\n    /* \"#utility.yul\":3069:3074   */\n  dup5\n    /* \"#utility.yul\":3065:3086   */\n  and\n    /* \"#utility.yul\":3056:3086   */\n  swap4\n  pop\n    /* \"#utility.yul\":3129:3133   */\n  dup1\n    /* \"#utility.yul\":3119:3127   */\n  dup7\n    /* \"#utility.yul\":3115:3134   */\n  and\n    /* \"#utility.yul\":3108:3113   */\n  dup5\n    /* \"#utility.yul\":3105:3135   */\n  or\n    /* \"#utility.yul\":3095:3135   */\n  swap3\n  pop\n    /* \"#utility.yul\":2824:3141   */\n  pop\n  pop\n    /* \"#utility.yul\":2748:3141   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3147:3224   */\ntag_28:\n    /* \"#utility.yul\":3184:3191   */\n  0x00\n    /* \"#utility.yul\":3213:3218   */\n  dup2\n    /* \"#utility.yul\":3202:3218   */\n  swap1\n  pop\n    /* \"#utility.yul\":3147:3224   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3230:3290   */\ntag_29:\n    /* \"#utility.yul\":3258:3261   */\n  0x00\n    /* \"#utility.yul\":3279:3284   */\n  dup2\n    /* \"#utility.yul\":3272:3284   */\n  swap1\n  pop\n    /* \"#utility.yul\":3230:3290   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3296:3438   */\ntag_30:\n    /* \"#utility.yul\":3346:3355   */\n  0x00\n    /* \"#utility.yul\":3379:3432   */\n  tag_75\n    /* \"#utility.yul\":3397:3431   */\n  tag_76\n    /* \"#utility.yul\":3406:3430   */\n  tag_77\n    /* \"#utility.yul\":3424:3429   */\n  dup5\n    /* \"#utility.yul\":3406:3430   */\n  tag_28\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":3397:3431   */\n  tag_29\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":3379:3432   */\n  tag_28\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":3366:3432   */\n  swap1\n  pop\n    /* \"#utility.yul\":3296:3438   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3444:3519   */\ntag_31:\n    /* \"#utility.yul\":3487:3490   */\n  0x00\n    /* \"#utility.yul\":3508:3513   */\n  dup2\n    /* \"#utility.yul\":3501:3513   */\n  swap1\n  pop\n    /* \"#utility.yul\":3444:3519   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3525:3794   */\ntag_32:\n    /* \"#utility.yul\":3635:3674   */\n  tag_80\n    /* \"#utility.yul\":3666:3673   */\n  dup4\n    /* \"#utility.yul\":3635:3674   */\n  tag_30\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":3696:3787   */\n  tag_81\n    /* \"#utility.yul\":3745:3786   */\n  tag_82\n    /* \"#utility.yul\":3769:3785   */\n  dup3\n    /* \"#utility.yul\":3745:3786   */\n  tag_31\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":3737:3743   */\n  dup5\n    /* \"#utility.yul\":3730:3734   */\n  dup5\n    /* \"#utility.yul\":3724:3735   */\n  sload\n    /* \"#utility.yul\":3696:3787   */\n  tag_27\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":3690:3694   */\n  dup3\n    /* \"#utility.yul\":3683:3788   */\n  sstore\n    /* \"#utility.yul\":3601:3794   */\n  pop\n    /* \"#utility.yul\":3525:3794   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3800:3873   */\ntag_33:\n    /* \"#utility.yul\":3845:3848   */\n  0x00\n    /* \"#utility.yul\":3800:3873   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":3879:4068   */\ntag_34:\n    /* \"#utility.yul\":3956:3988   */\n  tag_85\n  tag_33\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":3997:4062   */\n  tag_86\n    /* \"#utility.yul\":4055:4061   */\n  dup2\n    /* \"#utility.yul\":4047:4053   */\n  dup5\n    /* \"#utility.yul\":4041:4045   */\n  dup5\n    /* \"#utility.yul\":3997:4062   */\n  tag_32\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":3932:4068   */\n  pop\n    /* \"#utility.yul\":3879:4068   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4074:4260   */\ntag_35:\n    /* \"#utility.yul\":4134:4254   */\ntag_88:\n    /* \"#utility.yul\":4151:4154   */\n  dup2\n    /* \"#utility.yul\":4144:4149   */\n  dup2\n    /* \"#utility.yul\":4141:4155   */\n  lt\n    /* \"#utility.yul\":4134:4254   */\n  iszero\n  tag_90\n  jumpi\n    /* \"#utility.yul\":4205:4244   */\n  tag_91\n    /* \"#utility.yul\":4242:4243   */\n  0x00\n    /* \"#utility.yul\":4235:4240   */\n  dup3\n    /* \"#utility.yul\":4205:4244   */\n  tag_34\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":4178:4179   */\n  0x01\n    /* \"#utility.yul\":4171:4176   */\n  dup2\n    /* \"#utility.yul\":4167:4180   */\n  add\n    /* \"#utility.yul\":4158:4180   */\n  swap1\n  pop\n    /* \"#utility.yul\":4134:4254   */\n  jump(tag_88)\ntag_90:\n    /* \"#utility.yul\":4074:4260   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4266:4809   */\ntag_36:\n    /* \"#utility.yul\":4367:4369   */\n  0x1f\n    /* \"#utility.yul\":4362:4365   */\n  dup3\n    /* \"#utility.yul\":4359:4370   */\n  gt\n    /* \"#utility.yul\":4356:4802   */\n  iszero\n  tag_93\n  jumpi\n    /* \"#utility.yul\":4401:4439   */\n  tag_94\n    /* \"#utility.yul\":4433:4438   */\n  dup2\n    /* \"#utility.yul\":4401:4439   */\n  tag_24\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":4485:4514   */\n  tag_95\n    /* \"#utility.yul\":4503:4513   */\n  dup5\n    /* \"#utility.yul\":4485:4514   */\n  tag_25\n  jump\t// in\ntag_95:\n    /* \"#utility.yul\":4475:4483   */\n  dup2\n    /* \"#utility.yul\":4471:4515   */\n  add\n    /* \"#utility.yul\":4668:4670   */\n  0x20\n    /* \"#utility.yul\":4656:4666   */\n  dup6\n    /* \"#utility.yul\":4653:4671   */\n  lt\n    /* \"#utility.yul\":4650:4699   */\n  iszero\n  tag_96\n  jumpi\n    /* \"#utility.yul\":4689:4697   */\n  dup2\n    /* \"#utility.yul\":4674:4697   */\n  swap1\n  pop\n    /* \"#utility.yul\":4650:4699   */\ntag_96:\n    /* \"#utility.yul\":4712:4792   */\n  tag_97\n    /* \"#utility.yul\":4768:4790   */\n  tag_98\n    /* \"#utility.yul\":4786:4789   */\n  dup6\n    /* \"#utility.yul\":4768:4790   */\n  tag_25\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":4758:4766   */\n  dup4\n    /* \"#utility.yul\":4754:4791   */\n  add\n    /* \"#utility.yul\":4741:4752   */\n  dup3\n    /* \"#utility.yul\":4712:4792   */\n  tag_35\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":4371:4802   */\n  pop\n  pop\n    /* \"#utility.yul\":4356:4802   */\ntag_93:\n    /* \"#utility.yul\":4266:4809   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4815:4932   */\ntag_37:\n    /* \"#utility.yul\":4869:4877   */\n  0x00\n    /* \"#utility.yul\":4919:4924   */\n  dup3\n    /* \"#utility.yul\":4913:4917   */\n  dup3\n    /* \"#utility.yul\":4909:4925   */\n  shr\n    /* \"#utility.yul\":4888:4925   */\n  swap1\n  pop\n    /* \"#utility.yul\":4815:4932   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4938:5107   */\ntag_38:\n    /* \"#utility.yul\":4982:4988   */\n  0x00\n    /* \"#utility.yul\":5015:5066   */\n  tag_101\n    /* \"#utility.yul\":5063:5064   */\n  0x00\n    /* \"#utility.yul\":5059:5065   */\n  not\n    /* \"#utility.yul\":5051:5056   */\n  dup5\n    /* \"#utility.yul\":5048:5049   */\n  0x08\n    /* \"#utility.yul\":5044:5057   */\n  mul\n    /* \"#utility.yul\":5015:5066   */\n  tag_37\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":5011:5067   */\n  not\n    /* \"#utility.yul\":5096:5100   */\n  dup1\n    /* \"#utility.yul\":5090:5094   */\n  dup4\n    /* \"#utility.yul\":5086:5101   */\n  and\n    /* \"#utility.yul\":5076:5101   */\n  swap2\n  pop\n    /* \"#utility.yul\":4989:5107   */\n  pop\n    /* \"#utility.yul\":4938:5107   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5112:5407   */\ntag_39:\n    /* \"#utility.yul\":5188:5192   */\n  0x00\n    /* \"#utility.yul\":5334:5363   */\n  tag_103\n    /* \"#utility.yul\":5359:5362   */\n  dup4\n    /* \"#utility.yul\":5353:5357   */\n  dup4\n    /* \"#utility.yul\":5334:5363   */\n  tag_38\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":5326:5363   */\n  swap2\n  pop\n    /* \"#utility.yul\":5396:5399   */\n  dup3\n    /* \"#utility.yul\":5393:5394   */\n  0x02\n    /* \"#utility.yul\":5389:5400   */\n  mul\n    /* \"#utility.yul\":5383:5387   */\n  dup3\n    /* \"#utility.yul\":5380:5401   */\n  or\n    /* \"#utility.yul\":5372:5401   */\n  swap1\n  pop\n    /* \"#utility.yul\":5112:5407   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5412:6807   */\ntag_8:\n    /* \"#utility.yul\":5529:5566   */\n  tag_105\n    /* \"#utility.yul\":5562:5565   */\n  dup3\n    /* \"#utility.yul\":5529:5566   */\n  tag_20\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":5631:5649   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":5623:5629   */\n  dup2\n    /* \"#utility.yul\":5620:5650   */\n  gt\n    /* \"#utility.yul\":5617:5673   */\n  iszero\n  tag_106\n  jumpi\n    /* \"#utility.yul\":5653:5671   */\n  tag_107\n  tag_21\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":5617:5673   */\ntag_106:\n    /* \"#utility.yul\":5697:5735   */\n  tag_108\n    /* \"#utility.yul\":5729:5733   */\n  dup3\n    /* \"#utility.yul\":5723:5734   */\n  sload\n    /* \"#utility.yul\":5697:5735   */\n  tag_23\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":5782:5849   */\n  tag_109\n    /* \"#utility.yul\":5842:5848   */\n  dup3\n    /* \"#utility.yul\":5834:5840   */\n  dup3\n    /* \"#utility.yul\":5828:5832   */\n  dup6\n    /* \"#utility.yul\":5782:5849   */\n  tag_36\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":5876:5877   */\n  0x00\n    /* \"#utility.yul\":5900:5904   */\n  0x20\n    /* \"#utility.yul\":5887:5904   */\n  swap1\n  pop\n    /* \"#utility.yul\":5932:5934   */\n  0x1f\n    /* \"#utility.yul\":5924:5930   */\n  dup4\n    /* \"#utility.yul\":5921:5935   */\n  gt\n    /* \"#utility.yul\":5949:5950   */\n  0x01\n    /* \"#utility.yul\":5944:6562   */\n  dup2\n  eq\n  tag_111\n  jumpi\n    /* \"#utility.yul\":6606:6607   */\n  0x00\n    /* \"#utility.yul\":6623:6629   */\n  dup5\n    /* \"#utility.yul\":6620:6697   */\n  iszero\n  tag_112\n  jumpi\n    /* \"#utility.yul\":6672:6681   */\n  dup3\n    /* \"#utility.yul\":6667:6670   */\n  dup8\n    /* \"#utility.yul\":6663:6682   */\n  add\n    /* \"#utility.yul\":6657:6683   */\n  mload\n    /* \"#utility.yul\":6648:6683   */\n  swap1\n  pop\n    /* \"#utility.yul\":6620:6697   */\ntag_112:\n    /* \"#utility.yul\":6723:6790   */\n  tag_113\n    /* \"#utility.yul\":6783:6789   */\n  dup6\n    /* \"#utility.yul\":6776:6781   */\n  dup3\n    /* \"#utility.yul\":6723:6790   */\n  tag_39\n  jump\t// in\ntag_113:\n    /* \"#utility.yul\":6717:6721   */\n  dup7\n    /* \"#utility.yul\":6710:6791   */\n  sstore\n    /* \"#utility.yul\":6579:6801   */\n  pop\n    /* \"#utility.yul\":5914:6801   */\n  jump(tag_110)\n    /* \"#utility.yul\":5944:6562   */\ntag_111:\n    /* \"#utility.yul\":5996:6000   */\n  0x1f\n    /* \"#utility.yul\":5992:6001   */\n  not\n    /* \"#utility.yul\":5984:5990   */\n  dup5\n    /* \"#utility.yul\":5980:6002   */\n  and\n    /* \"#utility.yul\":6030:6067   */\n  tag_114\n    /* \"#utility.yul\":6062:6066   */\n  dup7\n    /* \"#utility.yul\":6030:6067   */\n  tag_24\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":6089:6090   */\n  0x00\n    /* \"#utility.yul\":6103:6311   */\ntag_115:\n    /* \"#utility.yul\":6117:6124   */\n  dup3\n    /* \"#utility.yul\":6114:6115   */\n  dup2\n    /* \"#utility.yul\":6111:6125   */\n  lt\n    /* \"#utility.yul\":6103:6311   */\n  iszero\n  tag_117\n  jumpi\n    /* \"#utility.yul\":6196:6205   */\n  dup5\n    /* \"#utility.yul\":6191:6194   */\n  dup10\n    /* \"#utility.yul\":6187:6206   */\n  add\n    /* \"#utility.yul\":6181:6207   */\n  mload\n    /* \"#utility.yul\":6173:6179   */\n  dup3\n    /* \"#utility.yul\":6166:6208   */\n  sstore\n    /* \"#utility.yul\":6247:6248   */\n  0x01\n    /* \"#utility.yul\":6239:6245   */\n  dup3\n    /* \"#utility.yul\":6235:6249   */\n  add\n    /* \"#utility.yul\":6225:6249   */\n  swap2\n  pop\n    /* \"#utility.yul\":6294:6296   */\n  0x20\n    /* \"#utility.yul\":6283:6292   */\n  dup6\n    /* \"#utility.yul\":6279:6297   */\n  add\n    /* \"#utility.yul\":6266:6297   */\n  swap5\n  pop\n    /* \"#utility.yul\":6140:6144   */\n  0x20\n    /* \"#utility.yul\":6137:6138   */\n  dup2\n    /* \"#utility.yul\":6133:6145   */\n  add\n    /* \"#utility.yul\":6128:6145   */\n  swap1\n  pop\n    /* \"#utility.yul\":6103:6311   */\n  jump(tag_115)\ntag_117:\n    /* \"#utility.yul\":6339:6345   */\n  dup7\n    /* \"#utility.yul\":6330:6337   */\n  dup4\n    /* \"#utility.yul\":6327:6346   */\n  lt\n    /* \"#utility.yul\":6324:6503   */\n  iszero\n  tag_118\n  jumpi\n    /* \"#utility.yul\":6397:6406   */\n  dup5\n    /* \"#utility.yul\":6392:6395   */\n  dup10\n    /* \"#utility.yul\":6388:6407   */\n  add\n    /* \"#utility.yul\":6382:6408   */\n  mload\n    /* \"#utility.yul\":6440:6488   */\n  tag_119\n    /* \"#utility.yul\":6482:6486   */\n  0x1f\n    /* \"#utility.yul\":6474:6480   */\n  dup10\n    /* \"#utility.yul\":6470:6487   */\n  and\n    /* \"#utility.yul\":6459:6468   */\n  dup3\n    /* \"#utility.yul\":6440:6488   */\n  tag_38\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":6432:6438   */\n  dup4\n    /* \"#utility.yul\":6425:6489   */\n  sstore\n    /* \"#utility.yul\":6347:6503   */\n  pop\n    /* \"#utility.yul\":6324:6503   */\ntag_118:\n    /* \"#utility.yul\":6549:6550   */\n  0x01\n    /* \"#utility.yul\":6545:6546   */\n  0x02\n    /* \"#utility.yul\":6537:6543   */\n  dup9\n    /* \"#utility.yul\":6533:6547   */\n  mul\n    /* \"#utility.yul\":6529:6551   */\n  add\n    /* \"#utility.yul\":6523:6527   */\n  dup9\n    /* \"#utility.yul\":6516:6552   */\n  sstore\n    /* \"#utility.yul\":5951:6562   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5914:6801   */\ntag_110:\n  pop\n    /* \"#utility.yul\":5504:6807   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5412:6807   */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/t3_waa.sol\":432:5254  contract SimpleSwap is ERC20 {... */\ntag_11:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/t3_waa.sol\":432:5254  contract SimpleSwap is ERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x443cb4bc\n      gt\n      tag_20\n      jumpi\n      dup1\n      0x9c8f9f23\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x9c8f9f23\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x9cd441da\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xd21220a7\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_19\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x443cb4bc\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x5a76f25e\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x18160ddd\n      gt\n      tag_22\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x43264349\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_22:\n      dup1\n      0x054d50d4\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x0dfe1681\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/t3_waa.sol\":3107:3426  function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) public pure returns (uint amountOut) {... */\n    tag_3:\n      tag_23\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      tag_26\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_4:\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_5:\n      tag_33\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      tag_36\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/t3_waa.sol\":525:545  IERC20 public token0 */\n    tag_6:\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_7:\n      tag_43\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      tag_45\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_8:\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      tag_49\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n    tag_9:\n      tag_51\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/t3_waa.sol\":3550:4712  function swap(uint amountIn, IERC20 tokenIn, uint tokenOutMin) external returns (uint amountOut, IERC20 tokenOut) {... */\n    tag_10:\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_56\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      tag_58\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_59\n      swap3\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/t3_waa.sol\":611:631  uint public reserve0 */\n    tag_11:\n      tag_61\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      tag_63\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/t3_waa.sol\":638:658  uint public reserve1 */\n    tag_12:\n      tag_64\n      tag_65\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      tag_66\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_13:\n      tag_67\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_68\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_68:\n      tag_70\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      tag_71\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_14:\n      tag_72\n      tag_73\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      tag_74\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/t3_waa.sol\":2160:3070  function removeLiquidity(uint liquidity) external  returns (uint amount0, uint amount1) {... */\n    tag_15:\n      tag_75\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_76\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n      tag_78\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      tag_79\n      swap3\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/t3_waa.sol\":1022:1983  function addLiquidity(uint amount0Input, uint amount1Input) public returns(uint liquidity) {... */\n    tag_16:\n      tag_81\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_82\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_82:\n      tag_84\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      tag_85\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_17:\n      tag_86\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_87\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_87:\n      tag_88\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      tag_89\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/t3_waa.sol\":552:572  IERC20 public token1 */\n    tag_18:\n      tag_90\n      tag_91\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      tag_92\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_19:\n      tag_93\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_94\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_94:\n      tag_96\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      tag_97\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/t3_waa.sol\":3107:3426  function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) public pure returns (uint amountOut) {... */\n    tag_26:\n        /* \"contracts/t3_waa.sol\":3198:3212  uint amountOut */\n      0x00\n        /* \"contracts/t3_waa.sol\":3244:3245  0 */\n      dup1\n        /* \"contracts/t3_waa.sol\":3233:3241  amountIn */\n      dup5\n        /* \"contracts/t3_waa.sol\":3233:3245  amountIn > 0 */\n      gt\n        /* \"contracts/t3_waa.sol\":3225:3269  require(amountIn > 0, \"INSUFFICIENT_AMOUNT\") */\n      tag_99\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_100\n      swap1\n      tag_101\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_99:\n        /* \"contracts/t3_waa.sol\":3300:3301  0 */\n      0x00\n        /* \"contracts/t3_waa.sol\":3288:3297  reserveIn */\n      dup4\n        /* \"contracts/t3_waa.sol\":3288:3301  reserveIn > 0 */\n      gt\n        /* \"contracts/t3_waa.sol\":3288:3319  reserveIn > 0 && reserveOut > 0 */\n      dup1\n      iszero\n      tag_102\n      jumpi\n      pop\n        /* \"contracts/t3_waa.sol\":3318:3319  0 */\n      0x00\n        /* \"contracts/t3_waa.sol\":3305:3315  reserveOut */\n      dup3\n        /* \"contracts/t3_waa.sol\":3305:3319  reserveOut > 0 */\n      gt\n        /* \"contracts/t3_waa.sol\":3288:3319  reserveIn > 0 && reserveOut > 0 */\n    tag_102:\n        /* \"contracts/t3_waa.sol\":3280:3347  require(reserveIn > 0 && reserveOut > 0 , \"INSUFFICIENT_LIQUIDITY\") */\n      tag_103\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_104\n      swap1\n      tag_105\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_103:\n        /* \"contracts/t3_waa.sol\":3409:3417  amountIn */\n      dup4\n        /* \"contracts/t3_waa.sol\":3397:3406  reserveIn */\n      dup4\n        /* \"contracts/t3_waa.sol\":3397:3417  reserveIn + amountIn */\n      tag_106\n      swap2\n      swap1\n      tag_107\n      jump\t// in\n    tag_106:\n        /* \"contracts/t3_waa.sol\":3383:3393  reserveOut */\n      dup3\n        /* \"contracts/t3_waa.sol\":3372:3380  amountIn */\n      dup6\n        /* \"contracts/t3_waa.sol\":3372:3393  amountIn * reserveOut */\n      tag_108\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_108:\n        /* \"contracts/t3_waa.sol\":3372:3418  amountIn * reserveOut / (reserveIn + amountIn) */\n      tag_110\n      swap2\n      swap1\n      tag_111\n      jump\t// in\n    tag_110:\n        /* \"contracts/t3_waa.sol\":3360:3418  amountOut = amountIn * reserveOut / (reserveIn + amountIn) */\n      swap1\n      pop\n        /* \"contracts/t3_waa.sol\":3107:3426  function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) public pure returns (uint amountOut) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_30:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2119:2132  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2151:2156  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2144:2156  return _name */\n      dup1\n      sload\n      tag_113\n      swap1\n      tag_114\n      jump\t// in\n    tag_113:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_115\n      swap1\n      tag_114\n      jump\t// in\n    tag_115:\n      dup1\n      iszero\n      tag_116\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_117\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_116)\n    tag_117:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_118:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_118\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_116:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_36:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4366:4370  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4382:4395  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4410  _msgSender() */\n      tag_120\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4408  _msgSender */\n      tag_121\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4410  _msgSender() */\n      jump\t// in\n    tag_120:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4382:4410  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      tag_122\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4429:4434  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4436:4443  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4445:4450  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4428  _approve */\n      tag_123\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      jump\t// in\n    tag_122:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4468:4472  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4461:4472  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/t3_waa.sol\":525:545  IERC20 public token0 */\n    tag_40:\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_44:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3196:3203  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3222:3234  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3215:3234  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_49:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5126:5130  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5142:5157  address spender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5172  _msgSender() */\n      tag_126\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5170  _msgSender */\n      tag_121\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5172  _msgSender() */\n      jump\t// in\n    tag_126:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5142:5172  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      tag_127\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5198:5202  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5204:5211  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5213:5218  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5197  _spendAllowance */\n      tag_128\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_127:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      tag_129\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5239:5243  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5245:5247  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5249:5254  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5238  _transfer */\n      tag_130\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      jump\t// in\n    tag_129:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5272:5276  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5265:5276  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3051:3056  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3075:3077  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3068:3077  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/t3_waa.sol\":3550:4712  function swap(uint amountIn, IERC20 tokenIn, uint tokenOutMin) external returns (uint amountOut, IERC20 tokenOut) {... */\n    tag_58:\n        /* \"contracts/t3_waa.sol\":3631:3645  uint amountOut */\n      0x00\n        /* \"contracts/t3_waa.sol\":3647:3662  IERC20 tokenOut */\n      dup1\n        /* \"contracts/t3_waa.sol\":3694:3695  0 */\n      0x00\n        /* \"contracts/t3_waa.sol\":3683:3691  amountIn */\n      dup6\n        /* \"contracts/t3_waa.sol\":3683:3695  amountIn > 0 */\n      gt\n        /* \"contracts/t3_waa.sol\":3675:3726  require(amountIn > 0, \"INSUFFICIENT_OUTPUT_AMOUNT\") */\n      tag_133\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_134\n      swap1\n      tag_135\n      jump\t// in\n    tag_134:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_133:\n        /* \"contracts/t3_waa.sol\":3756:3762  token0 */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/t3_waa.sol\":3745:3762  tokenIn == token0 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/t3_waa.sol\":3745:3752  tokenIn */\n      dup5\n        /* \"contracts/t3_waa.sol\":3745:3762  tokenIn == token0 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/t3_waa.sol\":3745:3783  tokenIn == token0 || tokenIn == token1 */\n      dup1\n      tag_136\n      jumpi\n      pop\n        /* \"contracts/t3_waa.sol\":3777:3783  token1 */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/t3_waa.sol\":3766:3783  tokenIn == token1 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/t3_waa.sol\":3766:3773  tokenIn */\n      dup5\n        /* \"contracts/t3_waa.sol\":3766:3783  tokenIn == token1 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/t3_waa.sol\":3745:3783  tokenIn == token0 || tokenIn == token1 */\n    tag_136:\n        /* \"contracts/t3_waa.sol\":3737:3801  require(tokenIn == token0 || tokenIn == token1, \"INVALID_TOKEN\") */\n      tag_137\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_138\n      swap1\n      tag_139\n      jump\t// in\n    tag_138:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_137:\n        /* \"contracts/t3_waa.sol\":3829:3835  token0 */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/t3_waa.sol\":3818:3835  tokenIn == token0 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/t3_waa.sol\":3818:3825  tokenIn */\n      dup5\n        /* \"contracts/t3_waa.sol\":3818:3835  tokenIn == token0 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/t3_waa.sol\":3814:4477  if (tokenIn == token0) {... */\n      tag_140\n      jumpi\n        /* \"contracts/t3_waa.sol\":3863:3869  token1 */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/t3_waa.sol\":3852:3869  tokenOut = token1 */\n      swap1\n      pop\n        /* \"contracts/t3_waa.sol\":3896:3938  getAmountOut(amountIn, reserve0, reserve1) */\n      tag_141\n        /* \"contracts/t3_waa.sol\":3909:3917  amountIn */\n      dup6\n        /* \"contracts/t3_waa.sol\":3919:3927  reserve0 */\n      sload(0x07)\n        /* \"contracts/t3_waa.sol\":3929:3937  reserve1 */\n      sload(0x08)\n        /* \"contracts/t3_waa.sol\":3896:3908  getAmountOut */\n      tag_26\n        /* \"contracts/t3_waa.sol\":3896:3938  getAmountOut(amountIn, reserve0, reserve1) */\n      jump\t// in\n    tag_141:\n        /* \"contracts/t3_waa.sol\":3884:3938  amountOut = getAmountOut(amountIn, reserve0, reserve1) */\n      swap2\n      pop\n        /* \"contracts/t3_waa.sol\":3973:3984  tokenOutMin */\n      dup3\n        /* \"contracts/t3_waa.sol\":3961:3970  amountOut */\n      dup3\n        /* \"contracts/t3_waa.sol\":3961:3984  amountOut > tokenOutMin */\n      gt\n        /* \"contracts/t3_waa.sol\":3953:4015  require(amountOut > tokenOutMin, \"INSUFFICIENT_OUTPUT_AMOUNT\") */\n      tag_142\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_143\n      swap1\n      tag_135\n      jump\t// in\n    tag_143:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_142:\n        /* \"contracts/t3_waa.sol\":4030:4037  tokenIn */\n      dup4\n        /* \"contracts/t3_waa.sol\":4030:4050  tokenIn.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/t3_waa.sol\":4051:4061  msg.sender */\n      caller\n        /* \"contracts/t3_waa.sol\":4071:4075  this */\n      address\n        /* \"contracts/t3_waa.sol\":4078:4086  amountIn */\n      dup9\n        /* \"contracts/t3_waa.sol\":4030:4087  tokenIn.transferFrom(msg.sender, address(this), amountIn) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_144\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_145\n      jump\t// in\n    tag_144:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_147\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_147:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_148\n      swap2\n      swap1\n      tag_149\n      jump\t// in\n    tag_148:\n      pop\n        /* \"contracts/t3_waa.sol\":4102:4110  tokenOut */\n      dup1\n        /* \"contracts/t3_waa.sol\":4102:4119  tokenOut.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/t3_waa.sol\":4120:4130  msg.sender */\n      caller\n        /* \"contracts/t3_waa.sol\":4132:4141  amountOut */\n      dup5\n        /* \"contracts/t3_waa.sol\":4102:4142  tokenOut.transfer(msg.sender, amountOut) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_150\n      swap3\n      swap2\n      swap1\n      tag_151\n      jump\t// in\n    tag_150:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_153\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_153:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_154\n      swap2\n      swap1\n      tag_149\n      jump\t// in\n    tag_154:\n      pop\n        /* \"contracts/t3_waa.sol\":3814:4477  if (tokenIn == token0) {... */\n      jump(tag_155)\n    tag_140:\n        /* \"contracts/t3_waa.sol\":4186:4192  token0 */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/t3_waa.sol\":4175:4192  tokenOut = token0 */\n      swap1\n      pop\n        /* \"contracts/t3_waa.sol\":4219:4261  getAmountOut(amountIn, reserve1, reserve0) */\n      tag_156\n        /* \"contracts/t3_waa.sol\":4232:4240  amountIn */\n      dup6\n        /* \"contracts/t3_waa.sol\":4242:4250  reserve1 */\n      sload(0x08)\n        /* \"contracts/t3_waa.sol\":4252:4260  reserve0 */\n      sload(0x07)\n        /* \"contracts/t3_waa.sol\":4219:4231  getAmountOut */\n      tag_26\n        /* \"contracts/t3_waa.sol\":4219:4261  getAmountOut(amountIn, reserve1, reserve0) */\n      jump\t// in\n    tag_156:\n        /* \"contracts/t3_waa.sol\":4207:4261  amountOut = getAmountOut(amountIn, reserve1, reserve0) */\n      swap2\n      pop\n        /* \"contracts/t3_waa.sol\":4296:4307  tokenOutMin */\n      dup3\n        /* \"contracts/t3_waa.sol\":4284:4293  amountOut */\n      dup3\n        /* \"contracts/t3_waa.sol\":4284:4307  amountOut > tokenOutMin */\n      gt\n        /* \"contracts/t3_waa.sol\":4276:4338  require(amountOut > tokenOutMin, \"INSUFFICIENT_OUTPUT_AMOUNT\") */\n      tag_157\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_158\n      swap1\n      tag_135\n      jump\t// in\n    tag_158:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_157:\n        /* \"contracts/t3_waa.sol\":4353:4360  tokenIn */\n      dup4\n        /* \"contracts/t3_waa.sol\":4353:4373  tokenIn.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/t3_waa.sol\":4374:4384  msg.sender */\n      caller\n        /* \"contracts/t3_waa.sol\":4394:4398  this */\n      address\n        /* \"contracts/t3_waa.sol\":4401:4409  amountIn */\n      dup9\n        /* \"contracts/t3_waa.sol\":4353:4410  tokenIn.transferFrom(msg.sender, address(this), amountIn) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_159\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_145\n      jump\t// in\n    tag_159:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_161\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_161:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_162\n      swap2\n      swap1\n      tag_149\n      jump\t// in\n    tag_162:\n      pop\n        /* \"contracts/t3_waa.sol\":4425:4433  tokenOut */\n      dup1\n        /* \"contracts/t3_waa.sol\":4425:4442  tokenOut.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/t3_waa.sol\":4443:4453  msg.sender */\n      caller\n        /* \"contracts/t3_waa.sol\":4455:4464  amountOut */\n      dup5\n        /* \"contracts/t3_waa.sol\":4425:4465  tokenOut.transfer(msg.sender, amountOut) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_163\n      swap3\n      swap2\n      swap1\n      tag_151\n      jump\t// in\n    tag_163:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_165\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_165:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_166\n      swap2\n      swap1\n      tag_149\n      jump\t// in\n    tag_166:\n      pop\n        /* \"contracts/t3_waa.sol\":3814:4477  if (tokenIn == token0) {... */\n    tag_155:\n        /* \"contracts/t3_waa.sol\":4528:4534  token0 */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/t3_waa.sol\":4528:4544  token0.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/t3_waa.sol\":4553:4557  this */\n      address\n        /* \"contracts/t3_waa.sol\":4528:4559  token0.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_167\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_167:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_170\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_170:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_171\n      swap2\n      swap1\n      tag_172\n      jump\t// in\n    tag_171:\n        /* \"contracts/t3_waa.sol\":4517:4525  reserve0 */\n      0x07\n        /* \"contracts/t3_waa.sol\":4517:4559  reserve0 = token0.balanceOf(address(this)) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/t3_waa.sol\":4581:4587  token1 */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/t3_waa.sol\":4581:4597  token1.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/t3_waa.sol\":4606:4610  this */\n      address\n        /* \"contracts/t3_waa.sol\":4581:4612  token1.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_173\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_173:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_175\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_175:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_176\n      swap2\n      swap1\n      tag_172\n      jump\t// in\n    tag_176:\n        /* \"contracts/t3_waa.sol\":4570:4578  reserve1 */\n      0x08\n        /* \"contracts/t3_waa.sol\":4570:4612  reserve1 = token1.balanceOf(address(this)) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/t3_waa.sol\":4635:4645  msg.sender */\n      caller\n        /* \"contracts/t3_waa.sol\":4630:4704  Swap(msg.sender, amountIn, address(tokenIn), amountOut, address(tokenOut)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x24043855bfbfea0ccea141e5a73d7116bf0bfe083ea900a791f4b407ff03e525\n        /* \"contracts/t3_waa.sol\":4647:4655  amountIn */\n      dup7\n        /* \"contracts/t3_waa.sol\":4665:4672  tokenIn */\n      dup7\n        /* \"contracts/t3_waa.sol\":4675:4684  amountOut */\n      dup6\n        /* \"contracts/t3_waa.sol\":4694:4702  tokenOut */\n      dup6\n        /* \"contracts/t3_waa.sol\":4630:4704  Swap(msg.sender, amountIn, address(tokenIn), amountOut, address(tokenOut)) */\n      mload(0x40)\n      tag_177\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n    tag_177:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/t3_waa.sol\":3550:4712  function swap(uint amountIn, IERC20 tokenIn, uint tokenOutMin) external returns (uint amountOut, IERC20 tokenOut) {... */\n      swap4\n      pop\n      swap4\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/t3_waa.sol\":611:631  uint public reserve0 */\n    tag_62:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"contracts/t3_waa.sol\":638:658  uint public reserve1 */\n    tag_65:\n      sload(0x08)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_70:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3364:3371  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3399  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3407  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3383:3408  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_73:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2323:2336  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2355:2362  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2348:2362  return _symbol */\n      dup1\n      sload\n      tag_181\n      swap1\n      tag_114\n      jump\t// in\n    tag_181:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_182\n      swap1\n      tag_114\n      jump\t// in\n    tag_182:\n      dup1\n      iszero\n      tag_183\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_184\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_183)\n    tag_184:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_185:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_185\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_183:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/t3_waa.sol\":2160:3070  function removeLiquidity(uint liquidity) external  returns (uint amount0, uint amount1) {... */\n    tag_78:\n        /* \"contracts/t3_waa.sol\":2220:2232  uint amount0 */\n      0x00\n        /* \"contracts/t3_waa.sol\":2234:2246  uint amount1 */\n      dup1\n        /* \"contracts/t3_waa.sol\":2308:2322  uint _balance0 */\n      0x00\n        /* \"contracts/t3_waa.sol\":2325:2331  token0 */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/t3_waa.sol\":2325:2341  token0.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/t3_waa.sol\":2350:2354  this */\n      address\n        /* \"contracts/t3_waa.sol\":2325:2356  token0.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_187\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_187:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_189\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_189:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_190\n      swap2\n      swap1\n      tag_172\n      jump\t// in\n    tag_190:\n        /* \"contracts/t3_waa.sol\":2308:2356  uint _balance0 = token0.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/t3_waa.sol\":2367:2381  uint _balance1 */\n      0x00\n        /* \"contracts/t3_waa.sol\":2384:2390  token1 */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/t3_waa.sol\":2384:2400  token1.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/t3_waa.sol\":2409:2413  this */\n      address\n        /* \"contracts/t3_waa.sol\":2384:2415  token1.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_191\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_191:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_193\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_193:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_194\n      swap2\n      swap1\n      tag_172\n      jump\t// in\n    tag_194:\n        /* \"contracts/t3_waa.sol\":2367:2415  uint _balance1 = token1.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/t3_waa.sol\":2450:2467  uint _totalSupply */\n      0x00\n        /* \"contracts/t3_waa.sol\":2470:2483  totalSupply() */\n      tag_195\n        /* \"contracts/t3_waa.sol\":2470:2481  totalSupply */\n      tag_44\n        /* \"contracts/t3_waa.sol\":2470:2483  totalSupply() */\n      jump\t// in\n    tag_195:\n        /* \"contracts/t3_waa.sol\":2450:2483  uint _totalSupply = totalSupply() */\n      swap1\n      pop\n        /* \"contracts/t3_waa.sol\":2528:2540  _totalSupply */\n      dup1\n        /* \"contracts/t3_waa.sol\":2516:2525  _balance0 */\n      dup4\n        /* \"contracts/t3_waa.sol\":2504:2513  liquidity */\n      dup8\n        /* \"contracts/t3_waa.sol\":2504:2525  liquidity * _balance0 */\n      tag_196\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_196:\n        /* \"contracts/t3_waa.sol\":2504:2540  liquidity * _balance0 / _totalSupply */\n      tag_197\n      swap2\n      swap1\n      tag_111\n      jump\t// in\n    tag_197:\n        /* \"contracts/t3_waa.sol\":2494:2540  amount0 = liquidity * _balance0 / _totalSupply */\n      swap5\n      pop\n        /* \"contracts/t3_waa.sol\":2585:2597  _totalSupply */\n      dup1\n        /* \"contracts/t3_waa.sol\":2573:2582  _balance1 */\n      dup3\n        /* \"contracts/t3_waa.sol\":2561:2570  liquidity */\n      dup8\n        /* \"contracts/t3_waa.sol\":2561:2582  liquidity * _balance1 */\n      tag_198\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_198:\n        /* \"contracts/t3_waa.sol\":2561:2597  liquidity * _balance1 / _totalSupply */\n      tag_199\n      swap2\n      swap1\n      tag_111\n      jump\t// in\n    tag_199:\n        /* \"contracts/t3_waa.sol\":2551:2597  amount1 = liquidity * _balance1 / _totalSupply */\n      swap4\n      pop\n        /* \"contracts/t3_waa.sol\":2628:2629  0 */\n      0x00\n        /* \"contracts/t3_waa.sol\":2618:2625  amount0 */\n      dup6\n        /* \"contracts/t3_waa.sol\":2618:2629  amount0 > 0 */\n      gt\n        /* \"contracts/t3_waa.sol\":2618:2644  amount0 > 0 && amount1 > 0 */\n      dup1\n      iszero\n      tag_200\n      jumpi\n      pop\n        /* \"contracts/t3_waa.sol\":2643:2644  0 */\n      0x00\n        /* \"contracts/t3_waa.sol\":2633:2640  amount1 */\n      dup5\n        /* \"contracts/t3_waa.sol\":2633:2644  amount1 > 0 */\n      gt\n        /* \"contracts/t3_waa.sol\":2618:2644  amount0 > 0 && amount1 > 0 */\n    tag_200:\n        /* \"contracts/t3_waa.sol\":2610:2678  require(amount0 > 0 && amount1 > 0, \"INSUFFICIENT_LIQUIDITY_MINTED\") */\n      tag_201\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_202\n      swap1\n      tag_203\n      jump\t// in\n    tag_202:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_201:\n        /* \"contracts/t3_waa.sol\":2718:2746  _burn(msg.sender, liquidity) */\n      tag_204\n        /* \"contracts/t3_waa.sol\":2724:2734  msg.sender */\n      caller\n        /* \"contracts/t3_waa.sol\":2736:2745  liquidity */\n      dup8\n        /* \"contracts/t3_waa.sol\":2718:2723  _burn */\n      tag_205\n        /* \"contracts/t3_waa.sol\":2718:2746  _burn(msg.sender, liquidity) */\n      jump\t// in\n    tag_204:\n        /* \"contracts/t3_waa.sol\":2788:2794  token0 */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/t3_waa.sol\":2788:2803  token0.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/t3_waa.sol\":2804:2814  msg.sender */\n      caller\n        /* \"contracts/t3_waa.sol\":2816:2823  amount0 */\n      dup8\n        /* \"contracts/t3_waa.sol\":2788:2824  token0.transfer(msg.sender, amount0) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_206\n      swap3\n      swap2\n      swap1\n      tag_151\n      jump\t// in\n    tag_206:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_208\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_208:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_209\n      swap2\n      swap1\n      tag_149\n      jump\t// in\n    tag_209:\n      pop\n        /* \"contracts/t3_waa.sol\":2835:2841  token1 */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/t3_waa.sol\":2835:2850  token1.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/t3_waa.sol\":2851:2861  msg.sender */\n      caller\n        /* \"contracts/t3_waa.sol\":2863:2870  amount1 */\n      dup7\n        /* \"contracts/t3_waa.sol\":2835:2871  token1.transfer(msg.sender, amount1) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_210\n      swap3\n      swap2\n      swap1\n      tag_151\n      jump\t// in\n    tag_210:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_212\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_212:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_213\n      swap2\n      swap1\n      tag_149\n      jump\t// in\n    tag_213:\n      pop\n        /* \"contracts/t3_waa.sol\":2926:2932  token0 */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/t3_waa.sol\":2926:2942  token0.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/t3_waa.sol\":2951:2955  this */\n      address\n        /* \"contracts/t3_waa.sol\":2926:2957  token0.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_214\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_214:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_216\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_216:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_217\n      swap2\n      swap1\n      tag_172\n      jump\t// in\n    tag_217:\n        /* \"contracts/t3_waa.sol\":2915:2923  reserve0 */\n      0x07\n        /* \"contracts/t3_waa.sol\":2915:2957  reserve0 = token0.balanceOf(address(this)) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/t3_waa.sol\":2979:2985  token1 */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/t3_waa.sol\":2979:2995  token1.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/t3_waa.sol\":3004:3008  this */\n      address\n        /* \"contracts/t3_waa.sol\":2979:3010  token1.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_218\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_218:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_220\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_220:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_221\n      swap2\n      swap1\n      tag_172\n      jump\t// in\n    tag_221:\n        /* \"contracts/t3_waa.sol\":2968:2976  reserve1 */\n      0x08\n        /* \"contracts/t3_waa.sol\":2968:3010  reserve1 = token1.balanceOf(address(this)) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/t3_waa.sol\":3033:3043  msg.sender */\n      caller\n        /* \"contracts/t3_waa.sol\":3028:3062  Burn(msg.sender, amount0, amount1) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x49995e5dd6158cf69ad3e9777c46755a1a826a446c6416992167462dad033b2a\n        /* \"contracts/t3_waa.sol\":3045:3052  amount0 */\n      dup7\n        /* \"contracts/t3_waa.sol\":3054:3061  amount1 */\n      dup7\n        /* \"contracts/t3_waa.sol\":3028:3062  Burn(msg.sender, amount0, amount1) */\n      mload(0x40)\n      tag_222\n      swap3\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_222:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/t3_waa.sol\":2248:3070  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/t3_waa.sol\":2160:3070  function removeLiquidity(uint liquidity) external  returns (uint amount0, uint amount1) {... */\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"contracts/t3_waa.sol\":1022:1983  function addLiquidity(uint amount0Input, uint amount1Input) public returns(uint liquidity) {... */\n    tag_84:\n        /* \"contracts/t3_waa.sol\":1097:1111  uint liquidity */\n      0x00\n        /* \"contracts/t3_waa.sol\":1167:1173  token0 */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/t3_waa.sol\":1167:1186  token0.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/t3_waa.sol\":1187:1197  msg.sender */\n      caller\n        /* \"contracts/t3_waa.sol\":1207:1211  this */\n      address\n        /* \"contracts/t3_waa.sol\":1214:1226  amount0Input */\n      dup7\n        /* \"contracts/t3_waa.sol\":1167:1227  token0.transferFrom(msg.sender, address(this), amount0Input) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_224\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_145\n      jump\t// in\n    tag_224:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_226\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_226:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_227\n      swap2\n      swap1\n      tag_149\n      jump\t// in\n    tag_227:\n      pop\n        /* \"contracts/t3_waa.sol\":1238:1244  token1 */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/t3_waa.sol\":1238:1257  token1.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/t3_waa.sol\":1258:1268  msg.sender */\n      caller\n        /* \"contracts/t3_waa.sol\":1278:1282  this */\n      address\n        /* \"contracts/t3_waa.sol\":1285:1297  amount1Input */\n      dup6\n        /* \"contracts/t3_waa.sol\":1238:1298  token1.transferFrom(msg.sender, address(this), amount1Input) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_228\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_145\n      jump\t// in\n    tag_228:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_230\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_230:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_231\n      swap2\n      swap1\n      tag_149\n      jump\t// in\n    tag_231:\n      pop\n        /* \"contracts/t3_waa.sol\":1333:1350  uint _totalSupply */\n      0x00\n        /* \"contracts/t3_waa.sol\":1353:1366  totalSupply() */\n      tag_232\n        /* \"contracts/t3_waa.sol\":1353:1364  totalSupply */\n      tag_44\n        /* \"contracts/t3_waa.sol\":1353:1366  totalSupply() */\n      jump\t// in\n    tag_232:\n        /* \"contracts/t3_waa.sol\":1333:1366  uint _totalSupply = totalSupply() */\n      swap1\n      pop\n        /* \"contracts/t3_waa.sol\":1398:1399  0 */\n      0x00\n        /* \"contracts/t3_waa.sol\":1382:1394  _totalSupply */\n      dup2\n        /* \"contracts/t3_waa.sol\":1382:1399  _totalSupply == 0 */\n      sub\n        /* \"contracts/t3_waa.sol\":1379:1599  if(_totalSupply == 0) {... */\n      tag_233\n      jumpi\n        /* \"contracts/t3_waa.sol\":1428:1461  sqrt(amount0Input * amount1Input) */\n      tag_234\n        /* \"contracts/t3_waa.sol\":1448:1460  amount1Input */\n      dup4\n        /* \"contracts/t3_waa.sol\":1433:1445  amount0Input */\n      dup6\n        /* \"contracts/t3_waa.sol\":1433:1460  amount0Input * amount1Input */\n      tag_235\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_235:\n        /* \"contracts/t3_waa.sol\":1428:1432  sqrt */\n      tag_236\n        /* \"contracts/t3_waa.sol\":1428:1461  sqrt(amount0Input * amount1Input) */\n      jump\t// in\n    tag_234:\n        /* \"contracts/t3_waa.sol\":1416:1461  liquidity = sqrt(amount0Input * amount1Input) */\n      swap2\n      pop\n        /* \"contracts/t3_waa.sol\":1379:1599  if(_totalSupply == 0) {... */\n      jump(tag_237)\n    tag_233:\n        /* \"contracts/t3_waa.sol\":1506:1587  min(amount0Input * _totalSupply / reserve0, amount1Input * _totalSupply/reserve1) */\n      tag_238\n        /* \"contracts/t3_waa.sol\":1540:1548  reserve0 */\n      sload(0x07)\n        /* \"contracts/t3_waa.sol\":1525:1537  _totalSupply */\n      dup3\n        /* \"contracts/t3_waa.sol\":1510:1522  amount0Input */\n      dup7\n        /* \"contracts/t3_waa.sol\":1510:1537  amount0Input * _totalSupply */\n      tag_239\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_239:\n        /* \"contracts/t3_waa.sol\":1510:1548  amount0Input * _totalSupply / reserve0 */\n      tag_240\n      swap2\n      swap1\n      tag_111\n      jump\t// in\n    tag_240:\n        /* \"contracts/t3_waa.sol\":1578:1586  reserve1 */\n      sload(0x08)\n        /* \"contracts/t3_waa.sol\":1565:1577  _totalSupply */\n      dup4\n        /* \"contracts/t3_waa.sol\":1550:1562  amount1Input */\n      dup7\n        /* \"contracts/t3_waa.sol\":1550:1577  amount1Input * _totalSupply */\n      tag_241\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_241:\n        /* \"contracts/t3_waa.sol\":1550:1586  amount1Input * _totalSupply/reserve1 */\n      tag_242\n      swap2\n      swap1\n      tag_111\n      jump\t// in\n    tag_242:\n        /* \"contracts/t3_waa.sol\":1506:1509  min */\n      tag_243\n        /* \"contracts/t3_waa.sol\":1506:1587  min(amount0Input * _totalSupply / reserve0, amount1Input * _totalSupply/reserve1) */\n      jump\t// in\n    tag_238:\n        /* \"contracts/t3_waa.sol\":1494:1587  liquidity = min(amount0Input * _totalSupply / reserve0, amount1Input * _totalSupply/reserve1) */\n      swap2\n      pop\n        /* \"contracts/t3_waa.sol\":1379:1599  if(_totalSupply == 0) {... */\n    tag_237:\n        /* \"contracts/t3_waa.sol\":1639:1640  0 */\n      0x00\n        /* \"contracts/t3_waa.sol\":1627:1636  liquidity */\n      dup3\n        /* \"contracts/t3_waa.sol\":1627:1640  liquidity > 0 */\n      gt\n        /* \"contracts/t3_waa.sol\":1619:1674  require(liquidity > 0, \"INSUFFICIENT_LIQUIDITY_MINTED\") */\n      tag_244\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_245\n      swap1\n      tag_203\n      jump\t// in\n    tag_245:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_244:\n        /* \"contracts/t3_waa.sol\":1776:1782  token0 */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/t3_waa.sol\":1776:1792  token0.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/t3_waa.sol\":1801:1805  this */\n      address\n        /* \"contracts/t3_waa.sol\":1776:1807  token0.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_246\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_246:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_248\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_248:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_249\n      swap2\n      swap1\n      tag_172\n      jump\t// in\n    tag_249:\n        /* \"contracts/t3_waa.sol\":1765:1773  reserve0 */\n      0x07\n        /* \"contracts/t3_waa.sol\":1765:1807  reserve0 = token0.balanceOf(address(this)) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/t3_waa.sol\":1829:1835  token1 */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/t3_waa.sol\":1829:1845  token1.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/t3_waa.sol\":1854:1858  this */\n      address\n        /* \"contracts/t3_waa.sol\":1829:1860  token1.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_250\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_250:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_252\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_252:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_253\n      swap2\n      swap1\n      tag_172\n      jump\t// in\n    tag_253:\n        /* \"contracts/t3_waa.sol\":1818:1826  reserve1 */\n      0x08\n        /* \"contracts/t3_waa.sol\":1818:1860  reserve1 = token1.balanceOf(address(this)) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/t3_waa.sol\":1885:1913  _mint(msg.sender, liquidity) */\n      tag_254\n        /* \"contracts/t3_waa.sol\":1891:1901  msg.sender */\n      caller\n        /* \"contracts/t3_waa.sol\":1903:1912  liquidity */\n      dup4\n        /* \"contracts/t3_waa.sol\":1885:1890  _mint */\n      tag_255\n        /* \"contracts/t3_waa.sol\":1885:1913  _mint(msg.sender, liquidity) */\n      jump\t// in\n    tag_254:\n        /* \"contracts/t3_waa.sol\":1936:1946  msg.sender */\n      caller\n        /* \"contracts/t3_waa.sol\":1931:1975  Mint(msg.sender, amount0Input, amount1Input) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f\n        /* \"contracts/t3_waa.sol\":1948:1960  amount0Input */\n      dup6\n        /* \"contracts/t3_waa.sol\":1962:1974  amount1Input */\n      dup6\n        /* \"contracts/t3_waa.sol\":1931:1975  Mint(msg.sender, amount0Input, amount1Input) */\n      mload(0x40)\n      tag_256\n      swap3\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_256:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/t3_waa.sol\":1113:1983  {... */\n      pop\n        /* \"contracts/t3_waa.sol\":1022:1983  function addLiquidity(uint amount0Input, uint amount1Input) public returns(uint liquidity) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_88:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3679:3683  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3695:3708  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3723  _msgSender() */\n      tag_258\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3721  _msgSender */\n      tag_121\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3723  _msgSender() */\n      jump\t// in\n    tag_258:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3695:3723  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      tag_259\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3743:3748  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3750:3752  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3754:3759  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3742  _transfer */\n      tag_130\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      jump\t// in\n    tag_259:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3777:3781  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3770:3781  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/t3_waa.sol\":552:572  IERC20 public token1 */\n    tag_91:\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_96:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3926:3933  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3963  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3964:3969  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3971:3978  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3945:3979  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_121:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_123:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      tag_263\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9082:9087  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9089:9096  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9098:9103  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9105:9109  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9081  _approve */\n      tag_264\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_263:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_128:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10786  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10814  allowance(owner, spender) */\n      tag_266\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10799:10804  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10806:10813  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10798  allowance */\n      tag_96\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10814  allowance(owner, spender) */\n      jump\t// in\n    tag_266:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10814  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10848:10865  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10844  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10865  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n      tag_267\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10904:10909  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10901  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10909  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n      iszero\n      tag_268\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10963:10970  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10972:10988  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10990:10995  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10936:10996  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_269\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_270\n      jump\t// in\n    tag_269:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n    tag_268:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      tag_271\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11061:11066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11068:11075  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11096:11101  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11093  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11101  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11103:11108  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11060  _approve */\n      tag_264\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_271:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n    tag_267:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10752:11140  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_130:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5755:5756  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5743  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n      tag_273\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5807:5808  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5780:5810  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_274\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_274:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n    tag_273:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5848:5849  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5836  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n      tag_275\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5902:5903  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:5905  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_276\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_276:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n    tag_275:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      tag_277\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5933:5937  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5939:5941  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5943:5948  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5932  _update */\n      tag_278\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      jump\t// in\n    tag_277:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8247:8453  function _burn(address account, uint256 value) internal {... */\n    tag_205:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8336:8337  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8317:8338  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8317:8324  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8317:8338  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8313:8402  if (account == address(0)) {... */\n      tag_280\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8388:8389  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8361:8391  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_281\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_281:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8313:8402  if (account == address(0)) {... */\n    tag_280:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8411:8446  _update(account, address(0), value) */\n      tag_282\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8419:8426  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8436:8437  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8440:8445  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8411:8418  _update */\n      tag_278\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8411:8446  _update(account, address(0), value) */\n      jump\t// in\n    tag_282:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8247:8453  function _burn(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/t3_waa.sol\":4720:5024  function sqrt(uint y) internal  pure returns (uint z) {... */\n    tag_236:\n        /* \"contracts/t3_waa.sol\":4766:4772  uint z */\n      0x00\n        /* \"contracts/t3_waa.sol\":4793:4794  3 */\n      0x03\n        /* \"contracts/t3_waa.sol\":4789:4790  y */\n      dup3\n        /* \"contracts/t3_waa.sol\":4789:4794  y > 3 */\n      gt\n        /* \"contracts/t3_waa.sol\":4785:5017  if (y > 3) {... */\n      iszero\n      tag_284\n      jumpi\n        /* \"contracts/t3_waa.sol\":4815:4816  y */\n      dup2\n        /* \"contracts/t3_waa.sol\":4811:4816  z = y */\n      swap1\n      pop\n        /* \"contracts/t3_waa.sol\":4831:4837  uint x */\n      0x00\n        /* \"contracts/t3_waa.sol\":4848:4849  1 */\n      0x01\n        /* \"contracts/t3_waa.sol\":4844:4845  2 */\n      0x02\n        /* \"contracts/t3_waa.sol\":4840:4841  y */\n      dup5\n        /* \"contracts/t3_waa.sol\":4840:4845  y / 2 */\n      tag_285\n      swap2\n      swap1\n      tag_111\n      jump\t// in\n    tag_285:\n        /* \"contracts/t3_waa.sol\":4840:4849  y / 2 + 1 */\n      tag_286\n      swap2\n      swap1\n      tag_107\n      jump\t// in\n    tag_286:\n        /* \"contracts/t3_waa.sol\":4831:4849  uint x = y / 2 + 1 */\n      swap1\n      pop\n        /* \"contracts/t3_waa.sol\":4864:4956  while (x < z) {... */\n    tag_287:\n        /* \"contracts/t3_waa.sol\":4875:4876  z */\n      dup2\n        /* \"contracts/t3_waa.sol\":4871:4872  x */\n      dup2\n        /* \"contracts/t3_waa.sol\":4871:4876  x < z */\n      lt\n        /* \"contracts/t3_waa.sol\":4864:4956  while (x < z) {... */\n      iszero\n      tag_288\n      jumpi\n        /* \"contracts/t3_waa.sol\":4901:4902  x */\n      dup1\n        /* \"contracts/t3_waa.sol\":4897:4902  z = x */\n      swap2\n      pop\n        /* \"contracts/t3_waa.sol\":4939:4940  2 */\n      0x02\n        /* \"contracts/t3_waa.sol\":4934:4935  x */\n      dup2\n        /* \"contracts/t3_waa.sol\":4930:4931  x */\n      dup3\n        /* \"contracts/t3_waa.sol\":4926:4927  y */\n      dup6\n        /* \"contracts/t3_waa.sol\":4926:4931  y / x */\n      tag_289\n      swap2\n      swap1\n      tag_111\n      jump\t// in\n    tag_289:\n        /* \"contracts/t3_waa.sol\":4926:4935  y / x + x */\n      tag_290\n      swap2\n      swap1\n      tag_107\n      jump\t// in\n    tag_290:\n        /* \"contracts/t3_waa.sol\":4925:4940  (y / x + x) / 2 */\n      tag_291\n      swap2\n      swap1\n      tag_111\n      jump\t// in\n    tag_291:\n        /* \"contracts/t3_waa.sol\":4921:4940  x = (y / x + x) / 2 */\n      swap1\n      pop\n        /* \"contracts/t3_waa.sol\":4864:4956  while (x < z) {... */\n      jump(tag_287)\n    tag_288:\n        /* \"contracts/t3_waa.sol\":4796:4967  {... */\n      pop\n        /* \"contracts/t3_waa.sol\":4785:5017  if (y > 3) {... */\n      jump(tag_292)\n    tag_284:\n        /* \"contracts/t3_waa.sol\":4982:4983  0 */\n      0x00\n        /* \"contracts/t3_waa.sol\":4977:4978  y */\n      dup3\n        /* \"contracts/t3_waa.sol\":4977:4983  y != 0 */\n      eq\n        /* \"contracts/t3_waa.sol\":4973:5017  if (y != 0) {... */\n      tag_293\n      jumpi\n        /* \"contracts/t3_waa.sol\":5004:5005  1 */\n      0x01\n        /* \"contracts/t3_waa.sol\":5000:5005  z = 1 */\n      swap1\n      pop\n        /* \"contracts/t3_waa.sol\":4973:5017  if (y != 0) {... */\n    tag_293:\n        /* \"contracts/t3_waa.sol\":4785:5017  if (y > 3) {... */\n    tag_292:\n        /* \"contracts/t3_waa.sol\":4720:5024  function sqrt(uint y) internal  pure returns (uint z) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/t3_waa.sol\":5032:5130  function min(uint x, uint y) internal  pure returns (uint z) {... */\n    tag_243:\n        /* \"contracts/t3_waa.sol\":5085:5091  uint z */\n      0x00\n        /* \"contracts/t3_waa.sol\":5112:5113  y */\n      dup2\n        /* \"contracts/t3_waa.sol\":5108:5109  x */\n      dup4\n        /* \"contracts/t3_waa.sol\":5108:5113  x > y */\n      gt\n        /* \"contracts/t3_waa.sol\":5108:5121  x > y ? y : x */\n      tag_295\n      jumpi\n        /* \"contracts/t3_waa.sol\":5120:5121  x */\n      dup3\n        /* \"contracts/t3_waa.sol\":5108:5121  x > y ? y : x */\n      jump(tag_296)\n    tag_295:\n        /* \"contracts/t3_waa.sol\":5116:5117  y */\n      dup2\n        /* \"contracts/t3_waa.sol\":5108:5121  x > y ? y : x */\n    tag_296:\n        /* \"contracts/t3_waa.sol\":5104:5121  z = x > y ? y : x */\n      swap1\n      pop\n        /* \"contracts/t3_waa.sol\":5032:5130  function min(uint x, uint y) internal  pure returns (uint z) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n    tag_255:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7810:7811  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7798  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n      tag_298\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7864:7865  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_299\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_299:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n    tag_298:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n      tag_300\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7903:7904  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7907:7914  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7916:7921  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7894  _update */\n      tag_278\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n      jump\t// in\n    tag_300:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_264:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10078:10079  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n      tag_302\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10132:10133  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10103:10135  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_303\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_303:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n    tag_302:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10178:10179  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10166  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n      tag_304\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10231:10232  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10203:10234  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_305\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_305:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n    tag_304:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10284:10289  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10265  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10266:10271  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10273:10280  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10289  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10303:10312  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n      iszero\n      tag_306\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10349:10356  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10342:10347  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10358:10363  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_307\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_307:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n    tag_306:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_278:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6376:6377  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6364  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      tag_309\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6517  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6508  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6517  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_310\n      swap2\n      swap1\n      tag_107\n      jump\t// in\n    tag_310:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      jump(tag_311)\n    tag_309:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6567  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6579  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6580:6584  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6585  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6617:6622  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6614  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6622  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n      iszero\n      tag_312\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6674:6678  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6680:6691  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6693:6698  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_313\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_270\n      jump\t// in\n    tag_313:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n    tag_312:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6866:6871  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6863  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6871  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6843  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6844:6848  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6871  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6534:6896  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n    tag_311:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6924:6925  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6912  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      tag_314\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7089:7094  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7085  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7094  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      jump(tag_315)\n    tag_314:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7301:7306  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7293  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7294:7296  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7306  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n    tag_315:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7361:7363  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7359  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7365:7370  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      mload(0x40)\n      tag_316\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_316:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_318:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_320:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_321:\n        /* \"#utility.yul\":490:514   */\n      tag_368\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_320\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_369\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_369:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_322:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_371\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_321\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1309   */\n    tag_25:\n        /* \"#utility.yul\":767:773   */\n      0x00\n        /* \"#utility.yul\":775:781   */\n      dup1\n        /* \"#utility.yul\":783:789   */\n      0x00\n        /* \"#utility.yul\":832:834   */\n      0x60\n        /* \"#utility.yul\":820:829   */\n      dup5\n        /* \"#utility.yul\":811:818   */\n      dup7\n        /* \"#utility.yul\":807:830   */\n      sub\n        /* \"#utility.yul\":803:835   */\n      slt\n        /* \"#utility.yul\":800:919   */\n      iszero\n      tag_373\n      jumpi\n        /* \"#utility.yul\":838:917   */\n      tag_374\n      tag_318\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":800:919   */\n    tag_373:\n        /* \"#utility.yul\":958:959   */\n      0x00\n        /* \"#utility.yul\":983:1036   */\n      tag_375\n        /* \"#utility.yul\":1028:1035   */\n      dup7\n        /* \"#utility.yul\":1019:1025   */\n      dup3\n        /* \"#utility.yul\":1008:1017   */\n      dup8\n        /* \"#utility.yul\":1004:1026   */\n      add\n        /* \"#utility.yul\":983:1036   */\n      tag_322\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":973:1036   */\n      swap4\n      pop\n        /* \"#utility.yul\":929:1046   */\n      pop\n        /* \"#utility.yul\":1085:1087   */\n      0x20\n        /* \"#utility.yul\":1111:1164   */\n      tag_376\n        /* \"#utility.yul\":1156:1163   */\n      dup7\n        /* \"#utility.yul\":1147:1153   */\n      dup3\n        /* \"#utility.yul\":1136:1145   */\n      dup8\n        /* \"#utility.yul\":1132:1154   */\n      add\n        /* \"#utility.yul\":1111:1164   */\n      tag_322\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":1101:1164   */\n      swap3\n      pop\n        /* \"#utility.yul\":1056:1174   */\n      pop\n        /* \"#utility.yul\":1213:1215   */\n      0x40\n        /* \"#utility.yul\":1239:1292   */\n      tag_377\n        /* \"#utility.yul\":1284:1291   */\n      dup7\n        /* \"#utility.yul\":1275:1281   */\n      dup3\n        /* \"#utility.yul\":1264:1273   */\n      dup8\n        /* \"#utility.yul\":1260:1282   */\n      add\n        /* \"#utility.yul\":1239:1292   */\n      tag_322\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":1229:1292   */\n      swap2\n      pop\n        /* \"#utility.yul\":1184:1302   */\n      pop\n        /* \"#utility.yul\":690:1309   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1315:1433   */\n    tag_323:\n        /* \"#utility.yul\":1402:1426   */\n      tag_379\n        /* \"#utility.yul\":1420:1425   */\n      dup2\n        /* \"#utility.yul\":1402:1426   */\n      tag_320\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":1397:1400   */\n      dup3\n        /* \"#utility.yul\":1390:1427   */\n      mstore\n        /* \"#utility.yul\":1315:1433   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1439:1661   */\n    tag_28:\n        /* \"#utility.yul\":1532:1536   */\n      0x00\n        /* \"#utility.yul\":1570:1572   */\n      0x20\n        /* \"#utility.yul\":1559:1568   */\n      dup3\n        /* \"#utility.yul\":1555:1573   */\n      add\n        /* \"#utility.yul\":1547:1573   */\n      swap1\n      pop\n        /* \"#utility.yul\":1583:1654   */\n      tag_381\n        /* \"#utility.yul\":1651:1652   */\n      0x00\n        /* \"#utility.yul\":1640:1649   */\n      dup4\n        /* \"#utility.yul\":1636:1653   */\n      add\n        /* \"#utility.yul\":1627:1633   */\n      dup5\n        /* \"#utility.yul\":1583:1654   */\n      tag_323\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":1439:1661   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1667:1766   */\n    tag_324:\n        /* \"#utility.yul\":1719:1725   */\n      0x00\n        /* \"#utility.yul\":1753:1758   */\n      dup2\n        /* \"#utility.yul\":1747:1759   */\n      mload\n        /* \"#utility.yul\":1737:1759   */\n      swap1\n      pop\n        /* \"#utility.yul\":1667:1766   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1772:1941   */\n    tag_325:\n        /* \"#utility.yul\":1856:1867   */\n      0x00\n        /* \"#utility.yul\":1890:1896   */\n      dup3\n        /* \"#utility.yul\":1885:1888   */\n      dup3\n        /* \"#utility.yul\":1878:1897   */\n      mstore\n        /* \"#utility.yul\":1930:1934   */\n      0x20\n        /* \"#utility.yul\":1925:1928   */\n      dup3\n        /* \"#utility.yul\":1921:1935   */\n      add\n        /* \"#utility.yul\":1906:1935   */\n      swap1\n      pop\n        /* \"#utility.yul\":1772:1941   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1947:2086   */\n    tag_326:\n        /* \"#utility.yul\":2036:2042   */\n      dup3\n        /* \"#utility.yul\":2031:2034   */\n      dup2\n        /* \"#utility.yul\":2026:2029   */\n      dup4\n        /* \"#utility.yul\":2020:2043   */\n      mcopy\n        /* \"#utility.yul\":2077:2078   */\n      0x00\n        /* \"#utility.yul\":2068:2074   */\n      dup4\n        /* \"#utility.yul\":2063:2066   */\n      dup4\n        /* \"#utility.yul\":2059:2075   */\n      add\n        /* \"#utility.yul\":2052:2079   */\n      mstore\n        /* \"#utility.yul\":1947:2086   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2092:2194   */\n    tag_327:\n        /* \"#utility.yul\":2133:2139   */\n      0x00\n        /* \"#utility.yul\":2184:2186   */\n      0x1f\n        /* \"#utility.yul\":2180:2187   */\n      not\n        /* \"#utility.yul\":2175:2177   */\n      0x1f\n        /* \"#utility.yul\":2168:2173   */\n      dup4\n        /* \"#utility.yul\":2164:2178   */\n      add\n        /* \"#utility.yul\":2160:2188   */\n      and\n        /* \"#utility.yul\":2150:2188   */\n      swap1\n      pop\n        /* \"#utility.yul\":2092:2194   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2200:2577   */\n    tag_328:\n        /* \"#utility.yul\":2288:2291   */\n      0x00\n        /* \"#utility.yul\":2316:2355   */\n      tag_387\n        /* \"#utility.yul\":2349:2354   */\n      dup3\n        /* \"#utility.yul\":2316:2355   */\n      tag_324\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":2371:2442   */\n      tag_388\n        /* \"#utility.yul\":2435:2441   */\n      dup2\n        /* \"#utility.yul\":2430:2433   */\n      dup6\n        /* \"#utility.yul\":2371:2442   */\n      tag_325\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":2364:2442   */\n      swap4\n      pop\n        /* \"#utility.yul\":2451:2516   */\n      tag_389\n        /* \"#utility.yul\":2509:2515   */\n      dup2\n        /* \"#utility.yul\":2504:2507   */\n      dup6\n        /* \"#utility.yul\":2497:2501   */\n      0x20\n        /* \"#utility.yul\":2490:2495   */\n      dup7\n        /* \"#utility.yul\":2486:2502   */\n      add\n        /* \"#utility.yul\":2451:2516   */\n      tag_326\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":2541:2570   */\n      tag_390\n        /* \"#utility.yul\":2563:2569   */\n      dup2\n        /* \"#utility.yul\":2541:2570   */\n      tag_327\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":2536:2539   */\n      dup5\n        /* \"#utility.yul\":2532:2571   */\n      add\n        /* \"#utility.yul\":2525:2571   */\n      swap2\n      pop\n        /* \"#utility.yul\":2292:2577   */\n      pop\n        /* \"#utility.yul\":2200:2577   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2583:2896   */\n    tag_32:\n        /* \"#utility.yul\":2696:2700   */\n      0x00\n        /* \"#utility.yul\":2734:2736   */\n      0x20\n        /* \"#utility.yul\":2723:2732   */\n      dup3\n        /* \"#utility.yul\":2719:2737   */\n      add\n        /* \"#utility.yul\":2711:2737   */\n      swap1\n      pop\n        /* \"#utility.yul\":2783:2792   */\n      dup2\n        /* \"#utility.yul\":2777:2781   */\n      dup2\n        /* \"#utility.yul\":2773:2793   */\n      sub\n        /* \"#utility.yul\":2769:2770   */\n      0x00\n        /* \"#utility.yul\":2758:2767   */\n      dup4\n        /* \"#utility.yul\":2754:2771   */\n      add\n        /* \"#utility.yul\":2747:2794   */\n      mstore\n        /* \"#utility.yul\":2811:2889   */\n      tag_392\n        /* \"#utility.yul\":2884:2888   */\n      dup2\n        /* \"#utility.yul\":2875:2881   */\n      dup5\n        /* \"#utility.yul\":2811:2889   */\n      tag_328\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":2803:2889   */\n      swap1\n      pop\n        /* \"#utility.yul\":2583:2896   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2902:3028   */\n    tag_329:\n        /* \"#utility.yul\":2939:2946   */\n      0x00\n        /* \"#utility.yul\":2979:3021   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2972:2977   */\n      dup3\n        /* \"#utility.yul\":2968:3022   */\n      and\n        /* \"#utility.yul\":2957:3022   */\n      swap1\n      pop\n        /* \"#utility.yul\":2902:3028   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3034:3130   */\n    tag_330:\n        /* \"#utility.yul\":3071:3078   */\n      0x00\n        /* \"#utility.yul\":3100:3124   */\n      tag_395\n        /* \"#utility.yul\":3118:3123   */\n      dup3\n        /* \"#utility.yul\":3100:3124   */\n      tag_329\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":3089:3124   */\n      swap1\n      pop\n        /* \"#utility.yul\":3034:3130   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3136:3258   */\n    tag_331:\n        /* \"#utility.yul\":3209:3233   */\n      tag_397\n        /* \"#utility.yul\":3227:3232   */\n      dup2\n        /* \"#utility.yul\":3209:3233   */\n      tag_330\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":3202:3207   */\n      dup2\n        /* \"#utility.yul\":3199:3234   */\n      eq\n        /* \"#utility.yul\":3189:3252   */\n      tag_398\n      jumpi\n        /* \"#utility.yul\":3248:3249   */\n      0x00\n        /* \"#utility.yul\":3245:3246   */\n      dup1\n        /* \"#utility.yul\":3238:3250   */\n      revert\n        /* \"#utility.yul\":3189:3252   */\n    tag_398:\n        /* \"#utility.yul\":3136:3258   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3264:3403   */\n    tag_332:\n        /* \"#utility.yul\":3310:3315   */\n      0x00\n        /* \"#utility.yul\":3348:3354   */\n      dup2\n        /* \"#utility.yul\":3335:3355   */\n      calldataload\n        /* \"#utility.yul\":3326:3355   */\n      swap1\n      pop\n        /* \"#utility.yul\":3364:3397   */\n      tag_400\n        /* \"#utility.yul\":3391:3396   */\n      dup2\n        /* \"#utility.yul\":3364:3397   */\n      tag_331\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":3264:3403   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3409:3883   */\n    tag_35:\n        /* \"#utility.yul\":3477:3483   */\n      0x00\n        /* \"#utility.yul\":3485:3491   */\n      dup1\n        /* \"#utility.yul\":3534:3536   */\n      0x40\n        /* \"#utility.yul\":3522:3531   */\n      dup4\n        /* \"#utility.yul\":3513:3520   */\n      dup6\n        /* \"#utility.yul\":3509:3532   */\n      sub\n        /* \"#utility.yul\":3505:3537   */\n      slt\n        /* \"#utility.yul\":3502:3621   */\n      iszero\n      tag_402\n      jumpi\n        /* \"#utility.yul\":3540:3619   */\n      tag_403\n      tag_318\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":3502:3621   */\n    tag_402:\n        /* \"#utility.yul\":3660:3661   */\n      0x00\n        /* \"#utility.yul\":3685:3738   */\n      tag_404\n        /* \"#utility.yul\":3730:3737   */\n      dup6\n        /* \"#utility.yul\":3721:3727   */\n      dup3\n        /* \"#utility.yul\":3710:3719   */\n      dup7\n        /* \"#utility.yul\":3706:3728   */\n      add\n        /* \"#utility.yul\":3685:3738   */\n      tag_332\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":3675:3738   */\n      swap3\n      pop\n        /* \"#utility.yul\":3631:3748   */\n      pop\n        /* \"#utility.yul\":3787:3789   */\n      0x20\n        /* \"#utility.yul\":3813:3866   */\n      tag_405\n        /* \"#utility.yul\":3858:3865   */\n      dup6\n        /* \"#utility.yul\":3849:3855   */\n      dup3\n        /* \"#utility.yul\":3838:3847   */\n      dup7\n        /* \"#utility.yul\":3834:3856   */\n      add\n        /* \"#utility.yul\":3813:3866   */\n      tag_322\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":3803:3866   */\n      swap2\n      pop\n        /* \"#utility.yul\":3758:3876   */\n      pop\n        /* \"#utility.yul\":3409:3883   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3889:3979   */\n    tag_333:\n        /* \"#utility.yul\":3923:3930   */\n      0x00\n        /* \"#utility.yul\":3966:3971   */\n      dup2\n        /* \"#utility.yul\":3959:3972   */\n      iszero\n        /* \"#utility.yul\":3952:3973   */\n      iszero\n        /* \"#utility.yul\":3941:3973   */\n      swap1\n      pop\n        /* \"#utility.yul\":3889:3979   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3985:4094   */\n    tag_334:\n        /* \"#utility.yul\":4066:4087   */\n      tag_408\n        /* \"#utility.yul\":4081:4086   */\n      dup2\n        /* \"#utility.yul\":4066:4087   */\n      tag_333\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":4061:4064   */\n      dup3\n        /* \"#utility.yul\":4054:4088   */\n      mstore\n        /* \"#utility.yul\":3985:4094   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4100:4310   */\n    tag_38:\n        /* \"#utility.yul\":4187:4191   */\n      0x00\n        /* \"#utility.yul\":4225:4227   */\n      0x20\n        /* \"#utility.yul\":4214:4223   */\n      dup3\n        /* \"#utility.yul\":4210:4228   */\n      add\n        /* \"#utility.yul\":4202:4228   */\n      swap1\n      pop\n        /* \"#utility.yul\":4238:4303   */\n      tag_410\n        /* \"#utility.yul\":4300:4301   */\n      0x00\n        /* \"#utility.yul\":4289:4298   */\n      dup4\n        /* \"#utility.yul\":4285:4302   */\n      add\n        /* \"#utility.yul\":4276:4282   */\n      dup5\n        /* \"#utility.yul\":4238:4303   */\n      tag_334\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":4100:4310   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4316:4376   */\n    tag_335:\n        /* \"#utility.yul\":4344:4347   */\n      0x00\n        /* \"#utility.yul\":4365:4370   */\n      dup2\n        /* \"#utility.yul\":4358:4370   */\n      swap1\n      pop\n        /* \"#utility.yul\":4316:4376   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4382:4524   */\n    tag_336:\n        /* \"#utility.yul\":4432:4441   */\n      0x00\n        /* \"#utility.yul\":4465:4518   */\n      tag_413\n        /* \"#utility.yul\":4483:4517   */\n      tag_414\n        /* \"#utility.yul\":4492:4516   */\n      tag_415\n        /* \"#utility.yul\":4510:4515   */\n      dup5\n        /* \"#utility.yul\":4492:4516   */\n      tag_329\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":4483:4517   */\n      tag_335\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":4465:4518   */\n      tag_329\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":4452:4518   */\n      swap1\n      pop\n        /* \"#utility.yul\":4382:4524   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4530:4656   */\n    tag_337:\n        /* \"#utility.yul\":4580:4589   */\n      0x00\n        /* \"#utility.yul\":4613:4650   */\n      tag_417\n        /* \"#utility.yul\":4644:4649   */\n      dup3\n        /* \"#utility.yul\":4613:4650   */\n      tag_336\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":4600:4650   */\n      swap1\n      pop\n        /* \"#utility.yul\":4530:4656   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4662:4802   */\n    tag_338:\n        /* \"#utility.yul\":4726:4735   */\n      0x00\n        /* \"#utility.yul\":4759:4796   */\n      tag_419\n        /* \"#utility.yul\":4790:4795   */\n      dup3\n        /* \"#utility.yul\":4759:4796   */\n      tag_337\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":4746:4796   */\n      swap1\n      pop\n        /* \"#utility.yul\":4662:4802   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4808:4967   */\n    tag_339:\n        /* \"#utility.yul\":4909:4960   */\n      tag_421\n        /* \"#utility.yul\":4954:4959   */\n      dup2\n        /* \"#utility.yul\":4909:4960   */\n      tag_338\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":4904:4907   */\n      dup3\n        /* \"#utility.yul\":4897:4961   */\n      mstore\n        /* \"#utility.yul\":4808:4967   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4973:5223   */\n    tag_42:\n        /* \"#utility.yul\":5080:5084   */\n      0x00\n        /* \"#utility.yul\":5118:5120   */\n      0x20\n        /* \"#utility.yul\":5107:5116   */\n      dup3\n        /* \"#utility.yul\":5103:5121   */\n      add\n        /* \"#utility.yul\":5095:5121   */\n      swap1\n      pop\n        /* \"#utility.yul\":5131:5216   */\n      tag_423\n        /* \"#utility.yul\":5213:5214   */\n      0x00\n        /* \"#utility.yul\":5202:5211   */\n      dup4\n        /* \"#utility.yul\":5198:5215   */\n      add\n        /* \"#utility.yul\":5189:5195   */\n      dup5\n        /* \"#utility.yul\":5131:5216   */\n      tag_339\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":4973:5223   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5229:5848   */\n    tag_48:\n        /* \"#utility.yul\":5306:5312   */\n      0x00\n        /* \"#utility.yul\":5314:5320   */\n      dup1\n        /* \"#utility.yul\":5322:5328   */\n      0x00\n        /* \"#utility.yul\":5371:5373   */\n      0x60\n        /* \"#utility.yul\":5359:5368   */\n      dup5\n        /* \"#utility.yul\":5350:5357   */\n      dup7\n        /* \"#utility.yul\":5346:5369   */\n      sub\n        /* \"#utility.yul\":5342:5374   */\n      slt\n        /* \"#utility.yul\":5339:5458   */\n      iszero\n      tag_425\n      jumpi\n        /* \"#utility.yul\":5377:5456   */\n      tag_426\n      tag_318\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":5339:5458   */\n    tag_425:\n        /* \"#utility.yul\":5497:5498   */\n      0x00\n        /* \"#utility.yul\":5522:5575   */\n      tag_427\n        /* \"#utility.yul\":5567:5574   */\n      dup7\n        /* \"#utility.yul\":5558:5564   */\n      dup3\n        /* \"#utility.yul\":5547:5556   */\n      dup8\n        /* \"#utility.yul\":5543:5565   */\n      add\n        /* \"#utility.yul\":5522:5575   */\n      tag_332\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":5512:5575   */\n      swap4\n      pop\n        /* \"#utility.yul\":5468:5585   */\n      pop\n        /* \"#utility.yul\":5624:5626   */\n      0x20\n        /* \"#utility.yul\":5650:5703   */\n      tag_428\n        /* \"#utility.yul\":5695:5702   */\n      dup7\n        /* \"#utility.yul\":5686:5692   */\n      dup3\n        /* \"#utility.yul\":5675:5684   */\n      dup8\n        /* \"#utility.yul\":5671:5693   */\n      add\n        /* \"#utility.yul\":5650:5703   */\n      tag_332\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":5640:5703   */\n      swap3\n      pop\n        /* \"#utility.yul\":5595:5713   */\n      pop\n        /* \"#utility.yul\":5752:5754   */\n      0x40\n        /* \"#utility.yul\":5778:5831   */\n      tag_429\n        /* \"#utility.yul\":5823:5830   */\n      dup7\n        /* \"#utility.yul\":5814:5820   */\n      dup3\n        /* \"#utility.yul\":5803:5812   */\n      dup8\n        /* \"#utility.yul\":5799:5821   */\n      add\n        /* \"#utility.yul\":5778:5831   */\n      tag_322\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":5768:5831   */\n      swap2\n      pop\n        /* \"#utility.yul\":5723:5841   */\n      pop\n        /* \"#utility.yul\":5229:5848   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5854:5940   */\n    tag_340:\n        /* \"#utility.yul\":5889:5896   */\n      0x00\n        /* \"#utility.yul\":5929:5933   */\n      0xff\n        /* \"#utility.yul\":5922:5927   */\n      dup3\n        /* \"#utility.yul\":5918:5934   */\n      and\n        /* \"#utility.yul\":5907:5934   */\n      swap1\n      pop\n        /* \"#utility.yul\":5854:5940   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5946:6058   */\n    tag_341:\n        /* \"#utility.yul\":6029:6051   */\n      tag_432\n        /* \"#utility.yul\":6045:6050   */\n      dup2\n        /* \"#utility.yul\":6029:6051   */\n      tag_340\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":6024:6027   */\n      dup3\n        /* \"#utility.yul\":6017:6052   */\n      mstore\n        /* \"#utility.yul\":5946:6058   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6064:6278   */\n    tag_54:\n        /* \"#utility.yul\":6153:6157   */\n      0x00\n        /* \"#utility.yul\":6191:6193   */\n      0x20\n        /* \"#utility.yul\":6180:6189   */\n      dup3\n        /* \"#utility.yul\":6176:6194   */\n      add\n        /* \"#utility.yul\":6168:6194   */\n      swap1\n      pop\n        /* \"#utility.yul\":6204:6271   */\n      tag_434\n        /* \"#utility.yul\":6268:6269   */\n      0x00\n        /* \"#utility.yul\":6257:6266   */\n      dup4\n        /* \"#utility.yul\":6253:6270   */\n      add\n        /* \"#utility.yul\":6244:6250   */\n      dup5\n        /* \"#utility.yul\":6204:6271   */\n      tag_341\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":6064:6278   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6284:6394   */\n    tag_342:\n        /* \"#utility.yul\":6335:6342   */\n      0x00\n        /* \"#utility.yul\":6364:6388   */\n      tag_436\n        /* \"#utility.yul\":6382:6387   */\n      dup3\n        /* \"#utility.yul\":6364:6388   */\n      tag_330\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":6353:6388   */\n      swap1\n      pop\n        /* \"#utility.yul\":6284:6394   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6400:6550   */\n    tag_343:\n        /* \"#utility.yul\":6487:6525   */\n      tag_438\n        /* \"#utility.yul\":6519:6524   */\n      dup2\n        /* \"#utility.yul\":6487:6525   */\n      tag_342\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":6480:6485   */\n      dup2\n        /* \"#utility.yul\":6477:6526   */\n      eq\n        /* \"#utility.yul\":6467:6544   */\n      tag_439\n      jumpi\n        /* \"#utility.yul\":6540:6541   */\n      0x00\n        /* \"#utility.yul\":6537:6538   */\n      dup1\n        /* \"#utility.yul\":6530:6542   */\n      revert\n        /* \"#utility.yul\":6467:6544   */\n    tag_439:\n        /* \"#utility.yul\":6400:6550   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6556:6723   */\n    tag_344:\n        /* \"#utility.yul\":6616:6621   */\n      0x00\n        /* \"#utility.yul\":6654:6660   */\n      dup2\n        /* \"#utility.yul\":6641:6661   */\n      calldataload\n        /* \"#utility.yul\":6632:6661   */\n      swap1\n      pop\n        /* \"#utility.yul\":6670:6717   */\n      tag_441\n        /* \"#utility.yul\":6711:6716   */\n      dup2\n        /* \"#utility.yul\":6670:6717   */\n      tag_343\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":6556:6723   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6729:7376   */\n    tag_57:\n        /* \"#utility.yul\":6820:6826   */\n      0x00\n        /* \"#utility.yul\":6828:6834   */\n      dup1\n        /* \"#utility.yul\":6836:6842   */\n      0x00\n        /* \"#utility.yul\":6885:6887   */\n      0x60\n        /* \"#utility.yul\":6873:6882   */\n      dup5\n        /* \"#utility.yul\":6864:6871   */\n      dup7\n        /* \"#utility.yul\":6860:6883   */\n      sub\n        /* \"#utility.yul\":6856:6888   */\n      slt\n        /* \"#utility.yul\":6853:6972   */\n      iszero\n      tag_443\n      jumpi\n        /* \"#utility.yul\":6891:6970   */\n      tag_444\n      tag_318\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":6853:6972   */\n    tag_443:\n        /* \"#utility.yul\":7011:7012   */\n      0x00\n        /* \"#utility.yul\":7036:7089   */\n      tag_445\n        /* \"#utility.yul\":7081:7088   */\n      dup7\n        /* \"#utility.yul\":7072:7078   */\n      dup3\n        /* \"#utility.yul\":7061:7070   */\n      dup8\n        /* \"#utility.yul\":7057:7079   */\n      add\n        /* \"#utility.yul\":7036:7089   */\n      tag_322\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":7026:7089   */\n      swap4\n      pop\n        /* \"#utility.yul\":6982:7099   */\n      pop\n        /* \"#utility.yul\":7138:7140   */\n      0x20\n        /* \"#utility.yul\":7164:7231   */\n      tag_446\n        /* \"#utility.yul\":7223:7230   */\n      dup7\n        /* \"#utility.yul\":7214:7220   */\n      dup3\n        /* \"#utility.yul\":7203:7212   */\n      dup8\n        /* \"#utility.yul\":7199:7221   */\n      add\n        /* \"#utility.yul\":7164:7231   */\n      tag_344\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":7154:7231   */\n      swap3\n      pop\n        /* \"#utility.yul\":7109:7241   */\n      pop\n        /* \"#utility.yul\":7280:7282   */\n      0x40\n        /* \"#utility.yul\":7306:7359   */\n      tag_447\n        /* \"#utility.yul\":7351:7358   */\n      dup7\n        /* \"#utility.yul\":7342:7348   */\n      dup3\n        /* \"#utility.yul\":7331:7340   */\n      dup8\n        /* \"#utility.yul\":7327:7349   */\n      add\n        /* \"#utility.yul\":7306:7359   */\n      tag_322\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":7296:7359   */\n      swap2\n      pop\n        /* \"#utility.yul\":7251:7369   */\n      pop\n        /* \"#utility.yul\":6729:7376   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":7382:7742   */\n    tag_60:\n        /* \"#utility.yul\":7517:7521   */\n      0x00\n        /* \"#utility.yul\":7555:7557   */\n      0x40\n        /* \"#utility.yul\":7544:7553   */\n      dup3\n        /* \"#utility.yul\":7540:7558   */\n      add\n        /* \"#utility.yul\":7532:7558   */\n      swap1\n      pop\n        /* \"#utility.yul\":7568:7639   */\n      tag_449\n        /* \"#utility.yul\":7636:7637   */\n      0x00\n        /* \"#utility.yul\":7625:7634   */\n      dup4\n        /* \"#utility.yul\":7621:7638   */\n      add\n        /* \"#utility.yul\":7612:7618   */\n      dup6\n        /* \"#utility.yul\":7568:7639   */\n      tag_323\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":7649:7735   */\n      tag_450\n        /* \"#utility.yul\":7731:7733   */\n      0x20\n        /* \"#utility.yul\":7720:7729   */\n      dup4\n        /* \"#utility.yul\":7716:7734   */\n      add\n        /* \"#utility.yul\":7707:7713   */\n      dup5\n        /* \"#utility.yul\":7649:7735   */\n      tag_339\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":7382:7742   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7748:8077   */\n    tag_69:\n        /* \"#utility.yul\":7807:7813   */\n      0x00\n        /* \"#utility.yul\":7856:7858   */\n      0x20\n        /* \"#utility.yul\":7844:7853   */\n      dup3\n        /* \"#utility.yul\":7835:7842   */\n      dup5\n        /* \"#utility.yul\":7831:7854   */\n      sub\n        /* \"#utility.yul\":7827:7859   */\n      slt\n        /* \"#utility.yul\":7824:7943   */\n      iszero\n      tag_452\n      jumpi\n        /* \"#utility.yul\":7862:7941   */\n      tag_453\n      tag_318\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":7824:7943   */\n    tag_452:\n        /* \"#utility.yul\":7982:7983   */\n      0x00\n        /* \"#utility.yul\":8007:8060   */\n      tag_454\n        /* \"#utility.yul\":8052:8059   */\n      dup5\n        /* \"#utility.yul\":8043:8049   */\n      dup3\n        /* \"#utility.yul\":8032:8041   */\n      dup6\n        /* \"#utility.yul\":8028:8050   */\n      add\n        /* \"#utility.yul\":8007:8060   */\n      tag_332\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":7997:8060   */\n      swap2\n      pop\n        /* \"#utility.yul\":7953:8070   */\n      pop\n        /* \"#utility.yul\":7748:8077   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8083:8412   */\n    tag_77:\n        /* \"#utility.yul\":8142:8148   */\n      0x00\n        /* \"#utility.yul\":8191:8193   */\n      0x20\n        /* \"#utility.yul\":8179:8188   */\n      dup3\n        /* \"#utility.yul\":8170:8177   */\n      dup5\n        /* \"#utility.yul\":8166:8189   */\n      sub\n        /* \"#utility.yul\":8162:8194   */\n      slt\n        /* \"#utility.yul\":8159:8278   */\n      iszero\n      tag_456\n      jumpi\n        /* \"#utility.yul\":8197:8276   */\n      tag_457\n      tag_318\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":8159:8278   */\n    tag_456:\n        /* \"#utility.yul\":8317:8318   */\n      0x00\n        /* \"#utility.yul\":8342:8395   */\n      tag_458\n        /* \"#utility.yul\":8387:8394   */\n      dup5\n        /* \"#utility.yul\":8378:8384   */\n      dup3\n        /* \"#utility.yul\":8367:8376   */\n      dup6\n        /* \"#utility.yul\":8363:8385   */\n      add\n        /* \"#utility.yul\":8342:8395   */\n      tag_322\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":8332:8395   */\n      swap2\n      pop\n        /* \"#utility.yul\":8288:8405   */\n      pop\n        /* \"#utility.yul\":8083:8412   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8418:8750   */\n    tag_80:\n        /* \"#utility.yul\":8539:8543   */\n      0x00\n        /* \"#utility.yul\":8577:8579   */\n      0x40\n        /* \"#utility.yul\":8566:8575   */\n      dup3\n        /* \"#utility.yul\":8562:8580   */\n      add\n        /* \"#utility.yul\":8554:8580   */\n      swap1\n      pop\n        /* \"#utility.yul\":8590:8661   */\n      tag_460\n        /* \"#utility.yul\":8658:8659   */\n      0x00\n        /* \"#utility.yul\":8647:8656   */\n      dup4\n        /* \"#utility.yul\":8643:8660   */\n      add\n        /* \"#utility.yul\":8634:8640   */\n      dup6\n        /* \"#utility.yul\":8590:8661   */\n      tag_323\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":8671:8743   */\n      tag_461\n        /* \"#utility.yul\":8739:8741   */\n      0x20\n        /* \"#utility.yul\":8728:8737   */\n      dup4\n        /* \"#utility.yul\":8724:8742   */\n      add\n        /* \"#utility.yul\":8715:8721   */\n      dup5\n        /* \"#utility.yul\":8671:8743   */\n      tag_323\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":8418:8750   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8756:9230   */\n    tag_83:\n        /* \"#utility.yul\":8824:8830   */\n      0x00\n        /* \"#utility.yul\":8832:8838   */\n      dup1\n        /* \"#utility.yul\":8881:8883   */\n      0x40\n        /* \"#utility.yul\":8869:8878   */\n      dup4\n        /* \"#utility.yul\":8860:8867   */\n      dup6\n        /* \"#utility.yul\":8856:8879   */\n      sub\n        /* \"#utility.yul\":8852:8884   */\n      slt\n        /* \"#utility.yul\":8849:8968   */\n      iszero\n      tag_463\n      jumpi\n        /* \"#utility.yul\":8887:8966   */\n      tag_464\n      tag_318\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":8849:8968   */\n    tag_463:\n        /* \"#utility.yul\":9007:9008   */\n      0x00\n        /* \"#utility.yul\":9032:9085   */\n      tag_465\n        /* \"#utility.yul\":9077:9084   */\n      dup6\n        /* \"#utility.yul\":9068:9074   */\n      dup3\n        /* \"#utility.yul\":9057:9066   */\n      dup7\n        /* \"#utility.yul\":9053:9075   */\n      add\n        /* \"#utility.yul\":9032:9085   */\n      tag_322\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":9022:9085   */\n      swap3\n      pop\n        /* \"#utility.yul\":8978:9095   */\n      pop\n        /* \"#utility.yul\":9134:9136   */\n      0x20\n        /* \"#utility.yul\":9160:9213   */\n      tag_466\n        /* \"#utility.yul\":9205:9212   */\n      dup6\n        /* \"#utility.yul\":9196:9202   */\n      dup3\n        /* \"#utility.yul\":9185:9194   */\n      dup7\n        /* \"#utility.yul\":9181:9203   */\n      add\n        /* \"#utility.yul\":9160:9213   */\n      tag_322\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":9150:9213   */\n      swap2\n      pop\n        /* \"#utility.yul\":9105:9223   */\n      pop\n        /* \"#utility.yul\":8756:9230   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9236:9710   */\n    tag_95:\n        /* \"#utility.yul\":9304:9310   */\n      0x00\n        /* \"#utility.yul\":9312:9318   */\n      dup1\n        /* \"#utility.yul\":9361:9363   */\n      0x40\n        /* \"#utility.yul\":9349:9358   */\n      dup4\n        /* \"#utility.yul\":9340:9347   */\n      dup6\n        /* \"#utility.yul\":9336:9359   */\n      sub\n        /* \"#utility.yul\":9332:9364   */\n      slt\n        /* \"#utility.yul\":9329:9448   */\n      iszero\n      tag_468\n      jumpi\n        /* \"#utility.yul\":9367:9446   */\n      tag_469\n      tag_318\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":9329:9448   */\n    tag_468:\n        /* \"#utility.yul\":9487:9488   */\n      0x00\n        /* \"#utility.yul\":9512:9565   */\n      tag_470\n        /* \"#utility.yul\":9557:9564   */\n      dup6\n        /* \"#utility.yul\":9548:9554   */\n      dup3\n        /* \"#utility.yul\":9537:9546   */\n      dup7\n        /* \"#utility.yul\":9533:9555   */\n      add\n        /* \"#utility.yul\":9512:9565   */\n      tag_332\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":9502:9565   */\n      swap3\n      pop\n        /* \"#utility.yul\":9458:9575   */\n      pop\n        /* \"#utility.yul\":9614:9616   */\n      0x20\n        /* \"#utility.yul\":9640:9693   */\n      tag_471\n        /* \"#utility.yul\":9685:9692   */\n      dup6\n        /* \"#utility.yul\":9676:9682   */\n      dup3\n        /* \"#utility.yul\":9665:9674   */\n      dup7\n        /* \"#utility.yul\":9661:9683   */\n      add\n        /* \"#utility.yul\":9640:9693   */\n      tag_332\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":9630:9693   */\n      swap2\n      pop\n        /* \"#utility.yul\":9585:9703   */\n      pop\n        /* \"#utility.yul\":9236:9710   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9716:9885   */\n    tag_345:\n        /* \"#utility.yul\":9856:9877   */\n      0x494e53554646494349454e545f414d4f554e5400000000000000000000000000\n        /* \"#utility.yul\":9852:9853   */\n      0x00\n        /* \"#utility.yul\":9844:9850   */\n      dup3\n        /* \"#utility.yul\":9840:9854   */\n      add\n        /* \"#utility.yul\":9833:9878   */\n      mstore\n        /* \"#utility.yul\":9716:9885   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9891:10257   */\n    tag_346:\n        /* \"#utility.yul\":10033:10036   */\n      0x00\n        /* \"#utility.yul\":10054:10121   */\n      tag_474\n        /* \"#utility.yul\":10118:10120   */\n      0x13\n        /* \"#utility.yul\":10113:10116   */\n      dup4\n        /* \"#utility.yul\":10054:10121   */\n      tag_325\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":10047:10121   */\n      swap2\n      pop\n        /* \"#utility.yul\":10130:10223   */\n      tag_475\n        /* \"#utility.yul\":10219:10222   */\n      dup3\n        /* \"#utility.yul\":10130:10223   */\n      tag_345\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":10248:10250   */\n      0x20\n        /* \"#utility.yul\":10243:10246   */\n      dup3\n        /* \"#utility.yul\":10239:10251   */\n      add\n        /* \"#utility.yul\":10232:10251   */\n      swap1\n      pop\n        /* \"#utility.yul\":9891:10257   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10263:10682   */\n    tag_101:\n        /* \"#utility.yul\":10429:10433   */\n      0x00\n        /* \"#utility.yul\":10467:10469   */\n      0x20\n        /* \"#utility.yul\":10456:10465   */\n      dup3\n        /* \"#utility.yul\":10452:10470   */\n      add\n        /* \"#utility.yul\":10444:10470   */\n      swap1\n      pop\n        /* \"#utility.yul\":10516:10525   */\n      dup2\n        /* \"#utility.yul\":10510:10514   */\n      dup2\n        /* \"#utility.yul\":10506:10526   */\n      sub\n        /* \"#utility.yul\":10502:10503   */\n      0x00\n        /* \"#utility.yul\":10491:10500   */\n      dup4\n        /* \"#utility.yul\":10487:10504   */\n      add\n        /* \"#utility.yul\":10480:10527   */\n      mstore\n        /* \"#utility.yul\":10544:10675   */\n      tag_477\n        /* \"#utility.yul\":10670:10674   */\n      dup2\n        /* \"#utility.yul\":10544:10675   */\n      tag_346\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":10536:10675   */\n      swap1\n      pop\n        /* \"#utility.yul\":10263:10682   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10688:10860   */\n    tag_347:\n        /* \"#utility.yul\":10828:10852   */\n      0x494e53554646494349454e545f4c495155494449545900000000000000000000\n        /* \"#utility.yul\":10824:10825   */\n      0x00\n        /* \"#utility.yul\":10816:10822   */\n      dup3\n        /* \"#utility.yul\":10812:10826   */\n      add\n        /* \"#utility.yul\":10805:10853   */\n      mstore\n        /* \"#utility.yul\":10688:10860   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10866:11232   */\n    tag_348:\n        /* \"#utility.yul\":11008:11011   */\n      0x00\n        /* \"#utility.yul\":11029:11096   */\n      tag_480\n        /* \"#utility.yul\":11093:11095   */\n      0x16\n        /* \"#utility.yul\":11088:11091   */\n      dup4\n        /* \"#utility.yul\":11029:11096   */\n      tag_325\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":11022:11096   */\n      swap2\n      pop\n        /* \"#utility.yul\":11105:11198   */\n      tag_481\n        /* \"#utility.yul\":11194:11197   */\n      dup3\n        /* \"#utility.yul\":11105:11198   */\n      tag_347\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":11223:11225   */\n      0x20\n        /* \"#utility.yul\":11218:11221   */\n      dup3\n        /* \"#utility.yul\":11214:11226   */\n      add\n        /* \"#utility.yul\":11207:11226   */\n      swap1\n      pop\n        /* \"#utility.yul\":10866:11232   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11238:11657   */\n    tag_105:\n        /* \"#utility.yul\":11404:11408   */\n      0x00\n        /* \"#utility.yul\":11442:11444   */\n      0x20\n        /* \"#utility.yul\":11431:11440   */\n      dup3\n        /* \"#utility.yul\":11427:11445   */\n      add\n        /* \"#utility.yul\":11419:11445   */\n      swap1\n      pop\n        /* \"#utility.yul\":11491:11500   */\n      dup2\n        /* \"#utility.yul\":11485:11489   */\n      dup2\n        /* \"#utility.yul\":11481:11501   */\n      sub\n        /* \"#utility.yul\":11477:11478   */\n      0x00\n        /* \"#utility.yul\":11466:11475   */\n      dup4\n        /* \"#utility.yul\":11462:11479   */\n      add\n        /* \"#utility.yul\":11455:11502   */\n      mstore\n        /* \"#utility.yul\":11519:11650   */\n      tag_483\n        /* \"#utility.yul\":11645:11649   */\n      dup2\n        /* \"#utility.yul\":11519:11650   */\n      tag_348\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":11511:11650   */\n      swap1\n      pop\n        /* \"#utility.yul\":11238:11657   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11663:11843   */\n    tag_349:\n        /* \"#utility.yul\":11711:11788   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11708:11709   */\n      0x00\n        /* \"#utility.yul\":11701:11789   */\n      mstore\n        /* \"#utility.yul\":11808:11812   */\n      0x11\n        /* \"#utility.yul\":11805:11806   */\n      0x04\n        /* \"#utility.yul\":11798:11813   */\n      mstore\n        /* \"#utility.yul\":11832:11836   */\n      0x24\n        /* \"#utility.yul\":11829:11830   */\n      0x00\n        /* \"#utility.yul\":11822:11837   */\n      revert\n        /* \"#utility.yul\":11849:12040   */\n    tag_107:\n        /* \"#utility.yul\":11889:11892   */\n      0x00\n        /* \"#utility.yul\":11908:11928   */\n      tag_486\n        /* \"#utility.yul\":11926:11927   */\n      dup3\n        /* \"#utility.yul\":11908:11928   */\n      tag_320\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":11903:11928   */\n      swap2\n      pop\n        /* \"#utility.yul\":11942:11962   */\n      tag_487\n        /* \"#utility.yul\":11960:11961   */\n      dup4\n        /* \"#utility.yul\":11942:11962   */\n      tag_320\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":11937:11962   */\n      swap3\n      pop\n        /* \"#utility.yul\":11985:11986   */\n      dup3\n        /* \"#utility.yul\":11982:11983   */\n      dup3\n        /* \"#utility.yul\":11978:11987   */\n      add\n        /* \"#utility.yul\":11971:11987   */\n      swap1\n      pop\n        /* \"#utility.yul\":12006:12009   */\n      dup1\n        /* \"#utility.yul\":12003:12004   */\n      dup3\n        /* \"#utility.yul\":12000:12010   */\n      gt\n        /* \"#utility.yul\":11997:12033   */\n      iszero\n      tag_488\n      jumpi\n        /* \"#utility.yul\":12013:12031   */\n      tag_489\n      tag_349\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":11997:12033   */\n    tag_488:\n        /* \"#utility.yul\":11849:12040   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12046:12456   */\n    tag_109:\n        /* \"#utility.yul\":12086:12093   */\n      0x00\n        /* \"#utility.yul\":12109:12129   */\n      tag_491\n        /* \"#utility.yul\":12127:12128   */\n      dup3\n        /* \"#utility.yul\":12109:12129   */\n      tag_320\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":12104:12129   */\n      swap2\n      pop\n        /* \"#utility.yul\":12143:12163   */\n      tag_492\n        /* \"#utility.yul\":12161:12162   */\n      dup4\n        /* \"#utility.yul\":12143:12163   */\n      tag_320\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":12138:12163   */\n      swap3\n      pop\n        /* \"#utility.yul\":12198:12199   */\n      dup3\n        /* \"#utility.yul\":12195:12196   */\n      dup3\n        /* \"#utility.yul\":12191:12200   */\n      mul\n        /* \"#utility.yul\":12220:12250   */\n      tag_493\n        /* \"#utility.yul\":12238:12249   */\n      dup2\n        /* \"#utility.yul\":12220:12250   */\n      tag_320\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":12209:12250   */\n      swap2\n      pop\n        /* \"#utility.yul\":12399:12400   */\n      dup3\n        /* \"#utility.yul\":12390:12397   */\n      dup3\n        /* \"#utility.yul\":12386:12401   */\n      div\n        /* \"#utility.yul\":12383:12384   */\n      dup5\n        /* \"#utility.yul\":12380:12402   */\n      eq\n        /* \"#utility.yul\":12360:12361   */\n      dup4\n        /* \"#utility.yul\":12353:12362   */\n      iszero\n        /* \"#utility.yul\":12333:12416   */\n      or\n        /* \"#utility.yul\":12310:12449   */\n      tag_494\n      jumpi\n        /* \"#utility.yul\":12429:12447   */\n      tag_495\n      tag_349\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":12310:12449   */\n    tag_494:\n        /* \"#utility.yul\":12094:12456   */\n      pop\n        /* \"#utility.yul\":12046:12456   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12462:12642   */\n    tag_350:\n        /* \"#utility.yul\":12510:12587   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12507:12508   */\n      0x00\n        /* \"#utility.yul\":12500:12588   */\n      mstore\n        /* \"#utility.yul\":12607:12611   */\n      0x12\n        /* \"#utility.yul\":12604:12605   */\n      0x04\n        /* \"#utility.yul\":12597:12612   */\n      mstore\n        /* \"#utility.yul\":12631:12635   */\n      0x24\n        /* \"#utility.yul\":12628:12629   */\n      0x00\n        /* \"#utility.yul\":12621:12636   */\n      revert\n        /* \"#utility.yul\":12648:12833   */\n    tag_111:\n        /* \"#utility.yul\":12688:12689   */\n      0x00\n        /* \"#utility.yul\":12705:12725   */\n      tag_498\n        /* \"#utility.yul\":12723:12724   */\n      dup3\n        /* \"#utility.yul\":12705:12725   */\n      tag_320\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":12700:12725   */\n      swap2\n      pop\n        /* \"#utility.yul\":12739:12759   */\n      tag_499\n        /* \"#utility.yul\":12757:12758   */\n      dup4\n        /* \"#utility.yul\":12739:12759   */\n      tag_320\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":12734:12759   */\n      swap3\n      pop\n        /* \"#utility.yul\":12778:12779   */\n      dup3\n        /* \"#utility.yul\":12768:12803   */\n      tag_500\n      jumpi\n        /* \"#utility.yul\":12783:12801   */\n      tag_501\n      tag_350\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":12768:12803   */\n    tag_500:\n        /* \"#utility.yul\":12825:12826   */\n      dup3\n        /* \"#utility.yul\":12822:12823   */\n      dup3\n        /* \"#utility.yul\":12818:12827   */\n      div\n        /* \"#utility.yul\":12813:12827   */\n      swap1\n      pop\n        /* \"#utility.yul\":12648:12833   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12839:13019   */\n    tag_351:\n        /* \"#utility.yul\":12887:12964   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12884:12885   */\n      0x00\n        /* \"#utility.yul\":12877:12965   */\n      mstore\n        /* \"#utility.yul\":12984:12988   */\n      0x22\n        /* \"#utility.yul\":12981:12982   */\n      0x04\n        /* \"#utility.yul\":12974:12989   */\n      mstore\n        /* \"#utility.yul\":13008:13012   */\n      0x24\n        /* \"#utility.yul\":13005:13006   */\n      0x00\n        /* \"#utility.yul\":12998:13013   */\n      revert\n        /* \"#utility.yul\":13025:13345   */\n    tag_114:\n        /* \"#utility.yul\":13069:13075   */\n      0x00\n        /* \"#utility.yul\":13106:13107   */\n      0x02\n        /* \"#utility.yul\":13100:13104   */\n      dup3\n        /* \"#utility.yul\":13096:13108   */\n      div\n        /* \"#utility.yul\":13086:13108   */\n      swap1\n      pop\n        /* \"#utility.yul\":13153:13154   */\n      0x01\n        /* \"#utility.yul\":13147:13151   */\n      dup3\n        /* \"#utility.yul\":13143:13155   */\n      and\n        /* \"#utility.yul\":13174:13192   */\n      dup1\n        /* \"#utility.yul\":13164:13245   */\n      tag_504\n      jumpi\n        /* \"#utility.yul\":13230:13234   */\n      0x7f\n        /* \"#utility.yul\":13222:13228   */\n      dup3\n        /* \"#utility.yul\":13218:13235   */\n      and\n        /* \"#utility.yul\":13208:13235   */\n      swap2\n      pop\n        /* \"#utility.yul\":13164:13245   */\n    tag_504:\n        /* \"#utility.yul\":13292:13294   */\n      0x20\n        /* \"#utility.yul\":13284:13290   */\n      dup3\n        /* \"#utility.yul\":13281:13295   */\n      lt\n        /* \"#utility.yul\":13261:13279   */\n      dup2\n        /* \"#utility.yul\":13258:13296   */\n      sub\n        /* \"#utility.yul\":13255:13339   */\n      tag_505\n      jumpi\n        /* \"#utility.yul\":13311:13329   */\n      tag_506\n      tag_351\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":13255:13339   */\n    tag_505:\n        /* \"#utility.yul\":13076:13345   */\n      pop\n        /* \"#utility.yul\":13025:13345   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13351:13527   */\n    tag_352:\n        /* \"#utility.yul\":13491:13519   */\n      0x494e53554646494349454e545f4f55545055545f414d4f554e54000000000000\n        /* \"#utility.yul\":13487:13488   */\n      0x00\n        /* \"#utility.yul\":13479:13485   */\n      dup3\n        /* \"#utility.yul\":13475:13489   */\n      add\n        /* \"#utility.yul\":13468:13520   */\n      mstore\n        /* \"#utility.yul\":13351:13527   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13533:13899   */\n    tag_353:\n        /* \"#utility.yul\":13675:13678   */\n      0x00\n        /* \"#utility.yul\":13696:13763   */\n      tag_509\n        /* \"#utility.yul\":13760:13762   */\n      0x1a\n        /* \"#utility.yul\":13755:13758   */\n      dup4\n        /* \"#utility.yul\":13696:13763   */\n      tag_325\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":13689:13763   */\n      swap2\n      pop\n        /* \"#utility.yul\":13772:13865   */\n      tag_510\n        /* \"#utility.yul\":13861:13864   */\n      dup3\n        /* \"#utility.yul\":13772:13865   */\n      tag_352\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":13890:13892   */\n      0x20\n        /* \"#utility.yul\":13885:13888   */\n      dup3\n        /* \"#utility.yul\":13881:13893   */\n      add\n        /* \"#utility.yul\":13874:13893   */\n      swap1\n      pop\n        /* \"#utility.yul\":13533:13899   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13905:14324   */\n    tag_135:\n        /* \"#utility.yul\":14071:14075   */\n      0x00\n        /* \"#utility.yul\":14109:14111   */\n      0x20\n        /* \"#utility.yul\":14098:14107   */\n      dup3\n        /* \"#utility.yul\":14094:14112   */\n      add\n        /* \"#utility.yul\":14086:14112   */\n      swap1\n      pop\n        /* \"#utility.yul\":14158:14167   */\n      dup2\n        /* \"#utility.yul\":14152:14156   */\n      dup2\n        /* \"#utility.yul\":14148:14168   */\n      sub\n        /* \"#utility.yul\":14144:14145   */\n      0x00\n        /* \"#utility.yul\":14133:14142   */\n      dup4\n        /* \"#utility.yul\":14129:14146   */\n      add\n        /* \"#utility.yul\":14122:14169   */\n      mstore\n        /* \"#utility.yul\":14186:14317   */\n      tag_512\n        /* \"#utility.yul\":14312:14316   */\n      dup2\n        /* \"#utility.yul\":14186:14317   */\n      tag_353\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":14178:14317   */\n      swap1\n      pop\n        /* \"#utility.yul\":13905:14324   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14330:14493   */\n    tag_354:\n        /* \"#utility.yul\":14470:14485   */\n      0x494e56414c49445f544f4b454e00000000000000000000000000000000000000\n        /* \"#utility.yul\":14466:14467   */\n      0x00\n        /* \"#utility.yul\":14458:14464   */\n      dup3\n        /* \"#utility.yul\":14454:14468   */\n      add\n        /* \"#utility.yul\":14447:14486   */\n      mstore\n        /* \"#utility.yul\":14330:14493   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14499:14865   */\n    tag_355:\n        /* \"#utility.yul\":14641:14644   */\n      0x00\n        /* \"#utility.yul\":14662:14729   */\n      tag_515\n        /* \"#utility.yul\":14726:14728   */\n      0x0d\n        /* \"#utility.yul\":14721:14724   */\n      dup4\n        /* \"#utility.yul\":14662:14729   */\n      tag_325\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":14655:14729   */\n      swap2\n      pop\n        /* \"#utility.yul\":14738:14831   */\n      tag_516\n        /* \"#utility.yul\":14827:14830   */\n      dup3\n        /* \"#utility.yul\":14738:14831   */\n      tag_354\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":14856:14858   */\n      0x20\n        /* \"#utility.yul\":14851:14854   */\n      dup3\n        /* \"#utility.yul\":14847:14859   */\n      add\n        /* \"#utility.yul\":14840:14859   */\n      swap1\n      pop\n        /* \"#utility.yul\":14499:14865   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14871:15290   */\n    tag_139:\n        /* \"#utility.yul\":15037:15041   */\n      0x00\n        /* \"#utility.yul\":15075:15077   */\n      0x20\n        /* \"#utility.yul\":15064:15073   */\n      dup3\n        /* \"#utility.yul\":15060:15078   */\n      add\n        /* \"#utility.yul\":15052:15078   */\n      swap1\n      pop\n        /* \"#utility.yul\":15124:15133   */\n      dup2\n        /* \"#utility.yul\":15118:15122   */\n      dup2\n        /* \"#utility.yul\":15114:15134   */\n      sub\n        /* \"#utility.yul\":15110:15111   */\n      0x00\n        /* \"#utility.yul\":15099:15108   */\n      dup4\n        /* \"#utility.yul\":15095:15112   */\n      add\n        /* \"#utility.yul\":15088:15135   */\n      mstore\n        /* \"#utility.yul\":15152:15283   */\n      tag_518\n        /* \"#utility.yul\":15278:15282   */\n      dup2\n        /* \"#utility.yul\":15152:15283   */\n      tag_355\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":15144:15283   */\n      swap1\n      pop\n        /* \"#utility.yul\":14871:15290   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15296:15414   */\n    tag_356:\n        /* \"#utility.yul\":15383:15407   */\n      tag_520\n        /* \"#utility.yul\":15401:15406   */\n      dup2\n        /* \"#utility.yul\":15383:15407   */\n      tag_330\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":15378:15381   */\n      dup3\n        /* \"#utility.yul\":15371:15408   */\n      mstore\n        /* \"#utility.yul\":15296:15414   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15420:15862   */\n    tag_145:\n        /* \"#utility.yul\":15569:15573   */\n      0x00\n        /* \"#utility.yul\":15607:15609   */\n      0x60\n        /* \"#utility.yul\":15596:15605   */\n      dup3\n        /* \"#utility.yul\":15592:15610   */\n      add\n        /* \"#utility.yul\":15584:15610   */\n      swap1\n      pop\n        /* \"#utility.yul\":15620:15691   */\n      tag_522\n        /* \"#utility.yul\":15688:15689   */\n      0x00\n        /* \"#utility.yul\":15677:15686   */\n      dup4\n        /* \"#utility.yul\":15673:15690   */\n      add\n        /* \"#utility.yul\":15664:15670   */\n      dup7\n        /* \"#utility.yul\":15620:15691   */\n      tag_356\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":15701:15773   */\n      tag_523\n        /* \"#utility.yul\":15769:15771   */\n      0x20\n        /* \"#utility.yul\":15758:15767   */\n      dup4\n        /* \"#utility.yul\":15754:15772   */\n      add\n        /* \"#utility.yul\":15745:15751   */\n      dup6\n        /* \"#utility.yul\":15701:15773   */\n      tag_356\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":15783:15855   */\n      tag_524\n        /* \"#utility.yul\":15851:15853   */\n      0x40\n        /* \"#utility.yul\":15840:15849   */\n      dup4\n        /* \"#utility.yul\":15836:15854   */\n      add\n        /* \"#utility.yul\":15827:15833   */\n      dup5\n        /* \"#utility.yul\":15783:15855   */\n      tag_323\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":15420:15862   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15868:15984   */\n    tag_357:\n        /* \"#utility.yul\":15938:15959   */\n      tag_526\n        /* \"#utility.yul\":15953:15958   */\n      dup2\n        /* \"#utility.yul\":15938:15959   */\n      tag_333\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":15931:15936   */\n      dup2\n        /* \"#utility.yul\":15928:15960   */\n      eq\n        /* \"#utility.yul\":15918:15978   */\n      tag_527\n      jumpi\n        /* \"#utility.yul\":15974:15975   */\n      0x00\n        /* \"#utility.yul\":15971:15972   */\n      dup1\n        /* \"#utility.yul\":15964:15976   */\n      revert\n        /* \"#utility.yul\":15918:15978   */\n    tag_527:\n        /* \"#utility.yul\":15868:15984   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15990:16127   */\n    tag_358:\n        /* \"#utility.yul\":16044:16049   */\n      0x00\n        /* \"#utility.yul\":16075:16081   */\n      dup2\n        /* \"#utility.yul\":16069:16082   */\n      mload\n        /* \"#utility.yul\":16060:16082   */\n      swap1\n      pop\n        /* \"#utility.yul\":16091:16121   */\n      tag_529\n        /* \"#utility.yul\":16115:16120   */\n      dup2\n        /* \"#utility.yul\":16091:16121   */\n      tag_357\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":15990:16127   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16133:16478   */\n    tag_149:\n        /* \"#utility.yul\":16200:16206   */\n      0x00\n        /* \"#utility.yul\":16249:16251   */\n      0x20\n        /* \"#utility.yul\":16237:16246   */\n      dup3\n        /* \"#utility.yul\":16228:16235   */\n      dup5\n        /* \"#utility.yul\":16224:16247   */\n      sub\n        /* \"#utility.yul\":16220:16252   */\n      slt\n        /* \"#utility.yul\":16217:16336   */\n      iszero\n      tag_531\n      jumpi\n        /* \"#utility.yul\":16255:16334   */\n      tag_532\n      tag_318\n      jump\t// in\n    tag_532:\n        /* \"#utility.yul\":16217:16336   */\n    tag_531:\n        /* \"#utility.yul\":16375:16376   */\n      0x00\n        /* \"#utility.yul\":16400:16461   */\n      tag_533\n        /* \"#utility.yul\":16453:16460   */\n      dup5\n        /* \"#utility.yul\":16444:16450   */\n      dup3\n        /* \"#utility.yul\":16433:16442   */\n      dup6\n        /* \"#utility.yul\":16429:16451   */\n      add\n        /* \"#utility.yul\":16400:16461   */\n      tag_358\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":16390:16461   */\n      swap2\n      pop\n        /* \"#utility.yul\":16346:16471   */\n      pop\n        /* \"#utility.yul\":16133:16478   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16484:16816   */\n    tag_151:\n        /* \"#utility.yul\":16605:16609   */\n      0x00\n        /* \"#utility.yul\":16643:16645   */\n      0x40\n        /* \"#utility.yul\":16632:16641   */\n      dup3\n        /* \"#utility.yul\":16628:16646   */\n      add\n        /* \"#utility.yul\":16620:16646   */\n      swap1\n      pop\n        /* \"#utility.yul\":16656:16727   */\n      tag_535\n        /* \"#utility.yul\":16724:16725   */\n      0x00\n        /* \"#utility.yul\":16713:16722   */\n      dup4\n        /* \"#utility.yul\":16709:16726   */\n      add\n        /* \"#utility.yul\":16700:16706   */\n      dup6\n        /* \"#utility.yul\":16656:16727   */\n      tag_356\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":16737:16809   */\n      tag_536\n        /* \"#utility.yul\":16805:16807   */\n      0x20\n        /* \"#utility.yul\":16794:16803   */\n      dup4\n        /* \"#utility.yul\":16790:16808   */\n      add\n        /* \"#utility.yul\":16781:16787   */\n      dup5\n        /* \"#utility.yul\":16737:16809   */\n      tag_323\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":16484:16816   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16822:17044   */\n    tag_168:\n        /* \"#utility.yul\":16915:16919   */\n      0x00\n        /* \"#utility.yul\":16953:16955   */\n      0x20\n        /* \"#utility.yul\":16942:16951   */\n      dup3\n        /* \"#utility.yul\":16938:16956   */\n      add\n        /* \"#utility.yul\":16930:16956   */\n      swap1\n      pop\n        /* \"#utility.yul\":16966:17037   */\n      tag_538\n        /* \"#utility.yul\":17034:17035   */\n      0x00\n        /* \"#utility.yul\":17023:17032   */\n      dup4\n        /* \"#utility.yul\":17019:17036   */\n      add\n        /* \"#utility.yul\":17010:17016   */\n      dup5\n        /* \"#utility.yul\":16966:17037   */\n      tag_356\n      jump\t// in\n    tag_538:\n        /* \"#utility.yul\":16822:17044   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17050:17193   */\n    tag_359:\n        /* \"#utility.yul\":17107:17112   */\n      0x00\n        /* \"#utility.yul\":17138:17144   */\n      dup2\n        /* \"#utility.yul\":17132:17145   */\n      mload\n        /* \"#utility.yul\":17123:17145   */\n      swap1\n      pop\n        /* \"#utility.yul\":17154:17187   */\n      tag_540\n        /* \"#utility.yul\":17181:17186   */\n      dup2\n        /* \"#utility.yul\":17154:17187   */\n      tag_321\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":17050:17193   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17199:17550   */\n    tag_172:\n        /* \"#utility.yul\":17269:17275   */\n      0x00\n        /* \"#utility.yul\":17318:17320   */\n      0x20\n        /* \"#utility.yul\":17306:17315   */\n      dup3\n        /* \"#utility.yul\":17297:17304   */\n      dup5\n        /* \"#utility.yul\":17293:17316   */\n      sub\n        /* \"#utility.yul\":17289:17321   */\n      slt\n        /* \"#utility.yul\":17286:17405   */\n      iszero\n      tag_542\n      jumpi\n        /* \"#utility.yul\":17324:17403   */\n      tag_543\n      tag_318\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":17286:17405   */\n    tag_542:\n        /* \"#utility.yul\":17444:17445   */\n      0x00\n        /* \"#utility.yul\":17469:17533   */\n      tag_544\n        /* \"#utility.yul\":17525:17532   */\n      dup5\n        /* \"#utility.yul\":17516:17522   */\n      dup3\n        /* \"#utility.yul\":17505:17514   */\n      dup6\n        /* \"#utility.yul\":17501:17523   */\n      add\n        /* \"#utility.yul\":17469:17533   */\n      tag_359\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":17459:17533   */\n      swap2\n      pop\n        /* \"#utility.yul\":17415:17543   */\n      pop\n        /* \"#utility.yul\":17199:17550   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17556:18109   */\n    tag_178:\n        /* \"#utility.yul\":17733:17737   */\n      0x00\n        /* \"#utility.yul\":17771:17774   */\n      0x80\n        /* \"#utility.yul\":17760:17769   */\n      dup3\n        /* \"#utility.yul\":17756:17775   */\n      add\n        /* \"#utility.yul\":17748:17775   */\n      swap1\n      pop\n        /* \"#utility.yul\":17785:17856   */\n      tag_546\n        /* \"#utility.yul\":17853:17854   */\n      0x00\n        /* \"#utility.yul\":17842:17851   */\n      dup4\n        /* \"#utility.yul\":17838:17855   */\n      add\n        /* \"#utility.yul\":17829:17835   */\n      dup8\n        /* \"#utility.yul\":17785:17856   */\n      tag_323\n      jump\t// in\n    tag_546:\n        /* \"#utility.yul\":17866:17938   */\n      tag_547\n        /* \"#utility.yul\":17934:17936   */\n      0x20\n        /* \"#utility.yul\":17923:17932   */\n      dup4\n        /* \"#utility.yul\":17919:17937   */\n      add\n        /* \"#utility.yul\":17910:17916   */\n      dup7\n        /* \"#utility.yul\":17866:17938   */\n      tag_356\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":17948:18020   */\n      tag_548\n        /* \"#utility.yul\":18016:18018   */\n      0x40\n        /* \"#utility.yul\":18005:18014   */\n      dup4\n        /* \"#utility.yul\":18001:18019   */\n      add\n        /* \"#utility.yul\":17992:17998   */\n      dup6\n        /* \"#utility.yul\":17948:18020   */\n      tag_323\n      jump\t// in\n    tag_548:\n        /* \"#utility.yul\":18030:18102   */\n      tag_549\n        /* \"#utility.yul\":18098:18100   */\n      0x60\n        /* \"#utility.yul\":18087:18096   */\n      dup4\n        /* \"#utility.yul\":18083:18101   */\n      add\n        /* \"#utility.yul\":18074:18080   */\n      dup5\n        /* \"#utility.yul\":18030:18102   */\n      tag_356\n      jump\t// in\n    tag_549:\n        /* \"#utility.yul\":17556:18109   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18115:18294   */\n    tag_360:\n        /* \"#utility.yul\":18255:18286   */\n      0x494e53554646494349454e545f4c49515549444954595f4d494e544544000000\n        /* \"#utility.yul\":18251:18252   */\n      0x00\n        /* \"#utility.yul\":18243:18249   */\n      dup3\n        /* \"#utility.yul\":18239:18253   */\n      add\n        /* \"#utility.yul\":18232:18287   */\n      mstore\n        /* \"#utility.yul\":18115:18294   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18300:18666   */\n    tag_361:\n        /* \"#utility.yul\":18442:18445   */\n      0x00\n        /* \"#utility.yul\":18463:18530   */\n      tag_552\n        /* \"#utility.yul\":18527:18529   */\n      0x1d\n        /* \"#utility.yul\":18522:18525   */\n      dup4\n        /* \"#utility.yul\":18463:18530   */\n      tag_325\n      jump\t// in\n    tag_552:\n        /* \"#utility.yul\":18456:18530   */\n      swap2\n      pop\n        /* \"#utility.yul\":18539:18632   */\n      tag_553\n        /* \"#utility.yul\":18628:18631   */\n      dup3\n        /* \"#utility.yul\":18539:18632   */\n      tag_360\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":18657:18659   */\n      0x20\n        /* \"#utility.yul\":18652:18655   */\n      dup3\n        /* \"#utility.yul\":18648:18660   */\n      add\n        /* \"#utility.yul\":18641:18660   */\n      swap1\n      pop\n        /* \"#utility.yul\":18300:18666   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18672:19091   */\n    tag_203:\n        /* \"#utility.yul\":18838:18842   */\n      0x00\n        /* \"#utility.yul\":18876:18878   */\n      0x20\n        /* \"#utility.yul\":18865:18874   */\n      dup3\n        /* \"#utility.yul\":18861:18879   */\n      add\n        /* \"#utility.yul\":18853:18879   */\n      swap1\n      pop\n        /* \"#utility.yul\":18925:18934   */\n      dup2\n        /* \"#utility.yul\":18919:18923   */\n      dup2\n        /* \"#utility.yul\":18915:18935   */\n      sub\n        /* \"#utility.yul\":18911:18912   */\n      0x00\n        /* \"#utility.yul\":18900:18909   */\n      dup4\n        /* \"#utility.yul\":18896:18913   */\n      add\n        /* \"#utility.yul\":18889:18936   */\n      mstore\n        /* \"#utility.yul\":18953:19084   */\n      tag_555\n        /* \"#utility.yul\":19079:19083   */\n      dup2\n        /* \"#utility.yul\":18953:19084   */\n      tag_361\n      jump\t// in\n    tag_555:\n        /* \"#utility.yul\":18945:19084   */\n      swap1\n      pop\n        /* \"#utility.yul\":18672:19091   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19097:19539   */\n    tag_270:\n        /* \"#utility.yul\":19246:19250   */\n      0x00\n        /* \"#utility.yul\":19284:19286   */\n      0x60\n        /* \"#utility.yul\":19273:19282   */\n      dup3\n        /* \"#utility.yul\":19269:19287   */\n      add\n        /* \"#utility.yul\":19261:19287   */\n      swap1\n      pop\n        /* \"#utility.yul\":19297:19368   */\n      tag_557\n        /* \"#utility.yul\":19365:19366   */\n      0x00\n        /* \"#utility.yul\":19354:19363   */\n      dup4\n        /* \"#utility.yul\":19350:19367   */\n      add\n        /* \"#utility.yul\":19341:19347   */\n      dup7\n        /* \"#utility.yul\":19297:19368   */\n      tag_356\n      jump\t// in\n    tag_557:\n        /* \"#utility.yul\":19378:19450   */\n      tag_558\n        /* \"#utility.yul\":19446:19448   */\n      0x20\n        /* \"#utility.yul\":19435:19444   */\n      dup4\n        /* \"#utility.yul\":19431:19449   */\n      add\n        /* \"#utility.yul\":19422:19428   */\n      dup6\n        /* \"#utility.yul\":19378:19450   */\n      tag_323\n      jump\t// in\n    tag_558:\n        /* \"#utility.yul\":19460:19532   */\n      tag_559\n        /* \"#utility.yul\":19528:19530   */\n      0x40\n        /* \"#utility.yul\":19517:19526   */\n      dup4\n        /* \"#utility.yul\":19513:19531   */\n      add\n        /* \"#utility.yul\":19504:19510   */\n      dup5\n        /* \"#utility.yul\":19460:19532   */\n      tag_323\n      jump\t// in\n    tag_559:\n        /* \"#utility.yul\":19097:19539   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220abbda7e48efd3fcde71769aac16418257904e482010f78e51ac5cfa70cce265964736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_188": {
									"entryPoint": null,
									"id": 188,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_822": {
									"entryPoint": null,
									"id": 822,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_contract$_IERC20_$729_fromMemory": {
									"entryPoint": 417,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IERC20_$729t_contract$_IERC20_$729_fromMemory": {
									"entryPoint": 437,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 647,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 499,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 932,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 361,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IERC20_$729": {
									"entryPoint": 378,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 330,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 773,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 898,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 791,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1069,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 665,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 599,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1042,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 782,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1014,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 554,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 509,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 824,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 326,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_dynamic": {
									"entryPoint": 680,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1002,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 874,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 692,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 833,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IERC20_$729": {
									"entryPoint": 395,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 870,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:6810:6",
										"nodeType": "YulBlock",
										"src": "0:6810:6",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:6",
													"nodeType": "YulBlock",
													"src": "47:35:6",
													"statements": [
														{
															"nativeSrc": "57:19:6",
															"nodeType": "YulAssignment",
															"src": "57:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:6",
																		"nodeType": "YulLiteral",
																		"src": "73:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:6"
																},
																"nativeSrc": "67:9:6",
																"nodeType": "YulFunctionCall",
																"src": "67:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:6",
														"nodeType": "YulTypedName",
														"src": "40:6:6",
														"type": ""
													}
												],
												"src": "7:75:6"
											},
											{
												"body": {
													"nativeSrc": "177:28:6",
													"nodeType": "YulBlock",
													"src": "177:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:6",
																		"nodeType": "YulLiteral",
																		"src": "194:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:6",
																		"nodeType": "YulLiteral",
																		"src": "197:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:6"
																},
																"nativeSrc": "187:12:6",
																"nodeType": "YulFunctionCall",
																"src": "187:12:6"
															},
															"nativeSrc": "187:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:6"
											},
											{
												"body": {
													"nativeSrc": "300:28:6",
													"nodeType": "YulBlock",
													"src": "300:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:6",
																		"nodeType": "YulLiteral",
																		"src": "317:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:6",
																		"nodeType": "YulLiteral",
																		"src": "320:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:6"
																},
																"nativeSrc": "310:12:6",
																"nodeType": "YulFunctionCall",
																"src": "310:12:6"
															},
															"nativeSrc": "310:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:6"
											},
											{
												"body": {
													"nativeSrc": "379:81:6",
													"nodeType": "YulBlock",
													"src": "379:81:6",
													"statements": [
														{
															"nativeSrc": "389:65:6",
															"nodeType": "YulAssignment",
															"src": "389:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:6",
																		"nodeType": "YulLiteral",
																		"src": "411:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:6"
																},
																"nativeSrc": "400:54:6",
																"nodeType": "YulFunctionCall",
																"src": "400:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:6",
														"nodeType": "YulTypedName",
														"src": "361:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:6",
														"nodeType": "YulTypedName",
														"src": "371:7:6",
														"type": ""
													}
												],
												"src": "334:126:6"
											},
											{
												"body": {
													"nativeSrc": "511:51:6",
													"nodeType": "YulBlock",
													"src": "511:51:6",
													"statements": [
														{
															"nativeSrc": "521:35:6",
															"nodeType": "YulAssignment",
															"src": "521:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:6"
																},
																"nativeSrc": "532:24:6",
																"nodeType": "YulFunctionCall",
																"src": "532:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:6",
														"nodeType": "YulTypedName",
														"src": "493:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:6",
														"nodeType": "YulTypedName",
														"src": "503:7:6",
														"type": ""
													}
												],
												"src": "466:96:6"
											},
											{
												"body": {
													"nativeSrc": "627:51:6",
													"nodeType": "YulBlock",
													"src": "627:51:6",
													"statements": [
														{
															"nativeSrc": "637:35:6",
															"nodeType": "YulAssignment",
															"src": "637:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "666:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "666:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nativeSrc": "648:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "648:17:6"
																},
																"nativeSrc": "648:24:6",
																"nodeType": "YulFunctionCall",
																"src": "648:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "637:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "637:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IERC20_$729",
												"nativeSrc": "568:110:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "609:5:6",
														"nodeType": "YulTypedName",
														"src": "609:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "619:7:6",
														"nodeType": "YulTypedName",
														"src": "619:7:6",
														"type": ""
													}
												],
												"src": "568:110:6"
											},
											{
												"body": {
													"nativeSrc": "741:93:6",
													"nodeType": "YulBlock",
													"src": "741:93:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "812:16:6",
																"nodeType": "YulBlock",
																"src": "812:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "821:1:6",
																					"nodeType": "YulLiteral",
																					"src": "821:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "824:1:6",
																					"nodeType": "YulLiteral",
																					"src": "824:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "814:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "814:6:6"
																			},
																			"nativeSrc": "814:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "814:12:6"
																		},
																		"nativeSrc": "814:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "814:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "764:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "764:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "803:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "803:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IERC20_$729",
																					"nativeSrc": "771:31:6",
																					"nodeType": "YulIdentifier",
																					"src": "771:31:6"
																				},
																				"nativeSrc": "771:38:6",
																				"nodeType": "YulFunctionCall",
																				"src": "771:38:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "761:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "761:2:6"
																		},
																		"nativeSrc": "761:49:6",
																		"nodeType": "YulFunctionCall",
																		"src": "761:49:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "754:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "754:6:6"
																},
																"nativeSrc": "754:57:6",
																"nodeType": "YulFunctionCall",
																"src": "754:57:6"
															},
															"nativeSrc": "751:77:6",
															"nodeType": "YulIf",
															"src": "751:77:6"
														}
													]
												},
												"name": "validator_revert_t_contract$_IERC20_$729",
												"nativeSrc": "684:150:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "734:5:6",
														"nodeType": "YulTypedName",
														"src": "734:5:6",
														"type": ""
													}
												],
												"src": "684:150:6"
											},
											{
												"body": {
													"nativeSrc": "917:94:6",
													"nodeType": "YulBlock",
													"src": "917:94:6",
													"statements": [
														{
															"nativeSrc": "927:22:6",
															"nodeType": "YulAssignment",
															"src": "927:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "942:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "942:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "936:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "936:5:6"
																},
																"nativeSrc": "936:13:6",
																"nodeType": "YulFunctionCall",
																"src": "936:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "927:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "927:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "999:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "999:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC20_$729",
																	"nativeSrc": "958:40:6",
																	"nodeType": "YulIdentifier",
																	"src": "958:40:6"
																},
																"nativeSrc": "958:47:6",
																"nodeType": "YulFunctionCall",
																"src": "958:47:6"
															},
															"nativeSrc": "958:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "958:47:6"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC20_$729_fromMemory",
												"nativeSrc": "840:171:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "895:6:6",
														"nodeType": "YulTypedName",
														"src": "895:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "903:3:6",
														"nodeType": "YulTypedName",
														"src": "903:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "911:5:6",
														"nodeType": "YulTypedName",
														"src": "911:5:6",
														"type": ""
													}
												],
												"src": "840:171:6"
											},
											{
												"body": {
													"nativeSrc": "1139:441:6",
													"nodeType": "YulBlock",
													"src": "1139:441:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1185:83:6",
																"nodeType": "YulBlock",
																"src": "1185:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1187:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "1187:77:6"
																			},
																			"nativeSrc": "1187:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1187:79:6"
																		},
																		"nativeSrc": "1187:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1187:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1160:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1160:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1169:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1169:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1156:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1156:3:6"
																		},
																		"nativeSrc": "1156:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1156:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1181:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1181:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1152:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1152:3:6"
																},
																"nativeSrc": "1152:32:6",
																"nodeType": "YulFunctionCall",
																"src": "1152:32:6"
															},
															"nativeSrc": "1149:119:6",
															"nodeType": "YulIf",
															"src": "1149:119:6"
														},
														{
															"nativeSrc": "1278:142:6",
															"nodeType": "YulBlock",
															"src": "1278:142:6",
															"statements": [
																{
																	"nativeSrc": "1293:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1293:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1307:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1307:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1297:6:6",
																			"nodeType": "YulTypedName",
																			"src": "1297:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1322:88:6",
																	"nodeType": "YulAssignment",
																	"src": "1322:88:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1382:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "1382:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1393:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1393:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1378:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1378:3:6"
																				},
																				"nativeSrc": "1378:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1378:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1402:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1402:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC20_$729_fromMemory",
																			"nativeSrc": "1332:45:6",
																			"nodeType": "YulIdentifier",
																			"src": "1332:45:6"
																		},
																		"nativeSrc": "1332:78:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1332:78:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1322:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1322:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1430:143:6",
															"nodeType": "YulBlock",
															"src": "1430:143:6",
															"statements": [
																{
																	"nativeSrc": "1445:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1445:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1459:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1459:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1449:6:6",
																			"nodeType": "YulTypedName",
																			"src": "1449:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1475:88:6",
																	"nodeType": "YulAssignment",
																	"src": "1475:88:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1535:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "1535:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1546:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1546:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1531:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1531:3:6"
																				},
																				"nativeSrc": "1531:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1531:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1555:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1555:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC20_$729_fromMemory",
																			"nativeSrc": "1485:45:6",
																			"nodeType": "YulIdentifier",
																			"src": "1485:45:6"
																		},
																		"nativeSrc": "1485:78:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1485:78:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1475:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1475:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC20_$729t_contract$_IERC20_$729_fromMemory",
												"nativeSrc": "1017:563:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1101:9:6",
														"nodeType": "YulTypedName",
														"src": "1101:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1112:7:6",
														"nodeType": "YulTypedName",
														"src": "1112:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1124:6:6",
														"nodeType": "YulTypedName",
														"src": "1124:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1132:6:6",
														"nodeType": "YulTypedName",
														"src": "1132:6:6",
														"type": ""
													}
												],
												"src": "1017:563:6"
											},
											{
												"body": {
													"nativeSrc": "1645:40:6",
													"nodeType": "YulBlock",
													"src": "1645:40:6",
													"statements": [
														{
															"nativeSrc": "1656:22:6",
															"nodeType": "YulAssignment",
															"src": "1656:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1672:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1672:5:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1666:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1666:5:6"
																},
																"nativeSrc": "1666:12:6",
																"nodeType": "YulFunctionCall",
																"src": "1666:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1656:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1656:6:6"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1586:99:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1628:5:6",
														"nodeType": "YulTypedName",
														"src": "1628:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1638:6:6",
														"nodeType": "YulTypedName",
														"src": "1638:6:6",
														"type": ""
													}
												],
												"src": "1586:99:6"
											},
											{
												"body": {
													"nativeSrc": "1719:152:6",
													"nodeType": "YulBlock",
													"src": "1719:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1736:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1736:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1739:77:6",
																		"nodeType": "YulLiteral",
																		"src": "1739:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1729:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1729:6:6"
																},
																"nativeSrc": "1729:88:6",
																"nodeType": "YulFunctionCall",
																"src": "1729:88:6"
															},
															"nativeSrc": "1729:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "1729:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1833:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1833:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1836:4:6",
																		"nodeType": "YulLiteral",
																		"src": "1836:4:6",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1826:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1826:6:6"
																},
																"nativeSrc": "1826:15:6",
																"nodeType": "YulFunctionCall",
																"src": "1826:15:6"
															},
															"nativeSrc": "1826:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "1826:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1857:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1857:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1860:4:6",
																		"nodeType": "YulLiteral",
																		"src": "1860:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1850:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1850:6:6"
																},
																"nativeSrc": "1850:15:6",
																"nodeType": "YulFunctionCall",
																"src": "1850:15:6"
															},
															"nativeSrc": "1850:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "1850:15:6"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1691:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "1691:180:6"
											},
											{
												"body": {
													"nativeSrc": "1905:152:6",
													"nodeType": "YulBlock",
													"src": "1905:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1922:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1922:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1925:77:6",
																		"nodeType": "YulLiteral",
																		"src": "1925:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1915:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1915:6:6"
																},
																"nativeSrc": "1915:88:6",
																"nodeType": "YulFunctionCall",
																"src": "1915:88:6"
															},
															"nativeSrc": "1915:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "1915:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2019:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2019:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2022:4:6",
																		"nodeType": "YulLiteral",
																		"src": "2022:4:6",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2012:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2012:6:6"
																},
																"nativeSrc": "2012:15:6",
																"nodeType": "YulFunctionCall",
																"src": "2012:15:6"
															},
															"nativeSrc": "2012:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "2012:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2043:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2043:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2046:4:6",
																		"nodeType": "YulLiteral",
																		"src": "2046:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2036:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2036:6:6"
																},
																"nativeSrc": "2036:15:6",
																"nodeType": "YulFunctionCall",
																"src": "2036:15:6"
															},
															"nativeSrc": "2036:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "2036:15:6"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "1877:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "1877:180:6"
											},
											{
												"body": {
													"nativeSrc": "2114:269:6",
													"nodeType": "YulBlock",
													"src": "2114:269:6",
													"statements": [
														{
															"nativeSrc": "2124:22:6",
															"nodeType": "YulAssignment",
															"src": "2124:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "2138:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "2138:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2144:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2144:1:6",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2134:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2134:3:6"
																},
																"nativeSrc": "2134:12:6",
																"nodeType": "YulFunctionCall",
																"src": "2134:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2124:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2124:6:6"
																}
															]
														},
														{
															"nativeSrc": "2155:38:6",
															"nodeType": "YulVariableDeclaration",
															"src": "2155:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "2185:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "2185:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2191:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2191:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2181:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2181:3:6"
																},
																"nativeSrc": "2181:12:6",
																"nodeType": "YulFunctionCall",
																"src": "2181:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "2159:18:6",
																	"nodeType": "YulTypedName",
																	"src": "2159:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2232:51:6",
																"nodeType": "YulBlock",
																"src": "2232:51:6",
																"statements": [
																	{
																		"nativeSrc": "2246:27:6",
																		"nodeType": "YulAssignment",
																		"src": "2246:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "2260:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "2260:6:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2268:4:6",
																					"nodeType": "YulLiteral",
																					"src": "2268:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "2256:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "2256:3:6"
																			},
																			"nativeSrc": "2256:17:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2256:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "2246:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2246:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2212:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "2212:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2205:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2205:6:6"
																},
																"nativeSrc": "2205:26:6",
																"nodeType": "YulFunctionCall",
																"src": "2205:26:6"
															},
															"nativeSrc": "2202:81:6",
															"nodeType": "YulIf",
															"src": "2202:81:6"
														},
														{
															"body": {
																"nativeSrc": "2335:42:6",
																"nodeType": "YulBlock",
																"src": "2335:42:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "2349:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "2349:16:6"
																			},
																			"nativeSrc": "2349:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2349:18:6"
																		},
																		"nativeSrc": "2349:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2349:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2299:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "2299:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2322:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2322:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2330:2:6",
																				"nodeType": "YulLiteral",
																				"src": "2330:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2319:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "2319:2:6"
																		},
																		"nativeSrc": "2319:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2319:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "2296:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "2296:2:6"
																},
																"nativeSrc": "2296:38:6",
																"nodeType": "YulFunctionCall",
																"src": "2296:38:6"
															},
															"nativeSrc": "2293:84:6",
															"nodeType": "YulIf",
															"src": "2293:84:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "2063:320:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2098:4:6",
														"nodeType": "YulTypedName",
														"src": "2098:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2107:6:6",
														"nodeType": "YulTypedName",
														"src": "2107:6:6",
														"type": ""
													}
												],
												"src": "2063:320:6"
											},
											{
												"body": {
													"nativeSrc": "2443:87:6",
													"nodeType": "YulBlock",
													"src": "2443:87:6",
													"statements": [
														{
															"nativeSrc": "2453:11:6",
															"nodeType": "YulAssignment",
															"src": "2453:11:6",
															"value": {
																"name": "ptr",
																"nativeSrc": "2461:3:6",
																"nodeType": "YulIdentifier",
																"src": "2461:3:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2453:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "2453:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2481:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2481:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "2484:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2484:3:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2474:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2474:6:6"
																},
																"nativeSrc": "2474:14:6",
																"nodeType": "YulFunctionCall",
																"src": "2474:14:6"
															},
															"nativeSrc": "2474:14:6",
															"nodeType": "YulExpressionStatement",
															"src": "2474:14:6"
														},
														{
															"nativeSrc": "2497:26:6",
															"nodeType": "YulAssignment",
															"src": "2497:26:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2515:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2515:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2518:4:6",
																		"nodeType": "YulLiteral",
																		"src": "2518:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "2505:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "2505:9:6"
																},
																"nativeSrc": "2505:18:6",
																"nodeType": "YulFunctionCall",
																"src": "2505:18:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2497:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "2497:4:6"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "2389:141:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "2430:3:6",
														"nodeType": "YulTypedName",
														"src": "2430:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "2438:4:6",
														"nodeType": "YulTypedName",
														"src": "2438:4:6",
														"type": ""
													}
												],
												"src": "2389:141:6"
											},
											{
												"body": {
													"nativeSrc": "2580:49:6",
													"nodeType": "YulBlock",
													"src": "2580:49:6",
													"statements": [
														{
															"nativeSrc": "2590:33:6",
															"nodeType": "YulAssignment",
															"src": "2590:33:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2608:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "2608:5:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2615:2:6",
																				"nodeType": "YulLiteral",
																				"src": "2615:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2604:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2604:3:6"
																		},
																		"nativeSrc": "2604:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2604:14:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2620:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2620:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2600:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2600:3:6"
																},
																"nativeSrc": "2600:23:6",
																"nodeType": "YulFunctionCall",
																"src": "2600:23:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2590:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2590:6:6"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "2536:93:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2563:5:6",
														"nodeType": "YulTypedName",
														"src": "2563:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2573:6:6",
														"nodeType": "YulTypedName",
														"src": "2573:6:6",
														"type": ""
													}
												],
												"src": "2536:93:6"
											},
											{
												"body": {
													"nativeSrc": "2688:54:6",
													"nodeType": "YulBlock",
													"src": "2688:54:6",
													"statements": [
														{
															"nativeSrc": "2698:37:6",
															"nodeType": "YulAssignment",
															"src": "2698:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "2723:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "2723:4:6"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "2729:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2729:5:6"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "2719:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2719:3:6"
																},
																"nativeSrc": "2719:16:6",
																"nodeType": "YulFunctionCall",
																"src": "2719:16:6"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "2698:8:6",
																	"nodeType": "YulIdentifier",
																	"src": "2698:8:6"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "2635:107:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "2663:4:6",
														"nodeType": "YulTypedName",
														"src": "2663:4:6",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "2669:5:6",
														"nodeType": "YulTypedName",
														"src": "2669:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "2679:8:6",
														"nodeType": "YulTypedName",
														"src": "2679:8:6",
														"type": ""
													}
												],
												"src": "2635:107:6"
											},
											{
												"body": {
													"nativeSrc": "2824:317:6",
													"nodeType": "YulBlock",
													"src": "2824:317:6",
													"statements": [
														{
															"nativeSrc": "2834:35:6",
															"nodeType": "YulVariableDeclaration",
															"src": "2834:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "2855:10:6",
																		"nodeType": "YulIdentifier",
																		"src": "2855:10:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2867:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2867:1:6",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "2851:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2851:3:6"
																},
																"nativeSrc": "2851:18:6",
																"nodeType": "YulFunctionCall",
																"src": "2851:18:6"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "2838:9:6",
																	"nodeType": "YulTypedName",
																	"src": "2838:9:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2878:109:6",
															"nodeType": "YulVariableDeclaration",
															"src": "2878:109:6",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2909:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2909:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2920:66:6",
																		"nodeType": "YulLiteral",
																		"src": "2920:66:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2890:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "2890:18:6"
																},
																"nativeSrc": "2890:97:6",
																"nodeType": "YulFunctionCall",
																"src": "2890:97:6"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "2882:4:6",
																	"nodeType": "YulTypedName",
																	"src": "2882:4:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2996:51:6",
															"nodeType": "YulAssignment",
															"src": "2996:51:6",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "3027:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3027:9:6"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "3038:8:6",
																		"nodeType": "YulIdentifier",
																		"src": "3038:8:6"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "3008:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "3008:18:6"
																},
																"nativeSrc": "3008:39:6",
																"nodeType": "YulFunctionCall",
																"src": "3008:39:6"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "2996:8:6",
																	"nodeType": "YulIdentifier",
																	"src": "2996:8:6"
																}
															]
														},
														{
															"nativeSrc": "3056:30:6",
															"nodeType": "YulAssignment",
															"src": "3056:30:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3069:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "3069:5:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "3080:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "3080:4:6"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "3076:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3076:3:6"
																		},
																		"nativeSrc": "3076:9:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3076:9:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3065:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3065:3:6"
																},
																"nativeSrc": "3065:21:6",
																"nodeType": "YulFunctionCall",
																"src": "3065:21:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3056:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "3056:5:6"
																}
															]
														},
														{
															"nativeSrc": "3095:40:6",
															"nodeType": "YulAssignment",
															"src": "3095:40:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3108:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "3108:5:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "3119:8:6",
																				"nodeType": "YulIdentifier",
																				"src": "3119:8:6"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "3129:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "3129:4:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3115:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3115:3:6"
																		},
																		"nativeSrc": "3115:19:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3115:19:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3105:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "3105:2:6"
																},
																"nativeSrc": "3105:30:6",
																"nodeType": "YulFunctionCall",
																"src": "3105:30:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3095:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3095:6:6"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "2748:393:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2785:5:6",
														"nodeType": "YulTypedName",
														"src": "2785:5:6",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "2792:10:6",
														"nodeType": "YulTypedName",
														"src": "2792:10:6",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "2804:8:6",
														"nodeType": "YulTypedName",
														"src": "2804:8:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2817:6:6",
														"nodeType": "YulTypedName",
														"src": "2817:6:6",
														"type": ""
													}
												],
												"src": "2748:393:6"
											},
											{
												"body": {
													"nativeSrc": "3192:32:6",
													"nodeType": "YulBlock",
													"src": "3192:32:6",
													"statements": [
														{
															"nativeSrc": "3202:16:6",
															"nodeType": "YulAssignment",
															"src": "3202:16:6",
															"value": {
																"name": "value",
																"nativeSrc": "3213:5:6",
																"nodeType": "YulIdentifier",
																"src": "3213:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3202:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "3202:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "3147:77:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3174:5:6",
														"nodeType": "YulTypedName",
														"src": "3174:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3184:7:6",
														"nodeType": "YulTypedName",
														"src": "3184:7:6",
														"type": ""
													}
												],
												"src": "3147:77:6"
											},
											{
												"body": {
													"nativeSrc": "3262:28:6",
													"nodeType": "YulBlock",
													"src": "3262:28:6",
													"statements": [
														{
															"nativeSrc": "3272:12:6",
															"nodeType": "YulAssignment",
															"src": "3272:12:6",
															"value": {
																"name": "value",
																"nativeSrc": "3279:5:6",
																"nodeType": "YulIdentifier",
																"src": "3279:5:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3272:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3272:3:6"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "3230:60:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3248:5:6",
														"nodeType": "YulTypedName",
														"src": "3248:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3258:3:6",
														"nodeType": "YulTypedName",
														"src": "3258:3:6",
														"type": ""
													}
												],
												"src": "3230:60:6"
											},
											{
												"body": {
													"nativeSrc": "3356:82:6",
													"nodeType": "YulBlock",
													"src": "3356:82:6",
													"statements": [
														{
															"nativeSrc": "3366:66:6",
															"nodeType": "YulAssignment",
															"src": "3366:66:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3424:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "3424:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3406:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "3406:17:6"
																				},
																				"nativeSrc": "3406:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3406:24:6"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "3397:8:6",
																			"nodeType": "YulIdentifier",
																			"src": "3397:8:6"
																		},
																		"nativeSrc": "3397:34:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3397:34:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3379:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "3379:17:6"
																},
																"nativeSrc": "3379:53:6",
																"nodeType": "YulFunctionCall",
																"src": "3379:53:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3366:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "3366:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "3296:142:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3336:5:6",
														"nodeType": "YulTypedName",
														"src": "3336:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3346:9:6",
														"nodeType": "YulTypedName",
														"src": "3346:9:6",
														"type": ""
													}
												],
												"src": "3296:142:6"
											},
											{
												"body": {
													"nativeSrc": "3491:28:6",
													"nodeType": "YulBlock",
													"src": "3491:28:6",
													"statements": [
														{
															"nativeSrc": "3501:12:6",
															"nodeType": "YulAssignment",
															"src": "3501:12:6",
															"value": {
																"name": "value",
																"nativeSrc": "3508:5:6",
																"nodeType": "YulIdentifier",
																"src": "3508:5:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3501:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3501:3:6"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "3444:75:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3477:5:6",
														"nodeType": "YulTypedName",
														"src": "3477:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3487:3:6",
														"nodeType": "YulTypedName",
														"src": "3487:3:6",
														"type": ""
													}
												],
												"src": "3444:75:6"
											},
											{
												"body": {
													"nativeSrc": "3601:193:6",
													"nodeType": "YulBlock",
													"src": "3601:193:6",
													"statements": [
														{
															"nativeSrc": "3611:63:6",
															"nodeType": "YulVariableDeclaration",
															"src": "3611:63:6",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "3666:7:6",
																		"nodeType": "YulIdentifier",
																		"src": "3666:7:6"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "3635:30:6",
																	"nodeType": "YulIdentifier",
																	"src": "3635:30:6"
																},
																"nativeSrc": "3635:39:6",
																"nodeType": "YulFunctionCall",
																"src": "3635:39:6"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "3615:16:6",
																	"nodeType": "YulTypedName",
																	"src": "3615:16:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3690:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "3690:4:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "3730:4:6",
																						"nodeType": "YulIdentifier",
																						"src": "3730:4:6"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "3724:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "3724:5:6"
																				},
																				"nativeSrc": "3724:11:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3724:11:6"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "3737:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3737:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "3769:16:6",
																						"nodeType": "YulIdentifier",
																						"src": "3769:16:6"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "3745:23:6",
																					"nodeType": "YulIdentifier",
																					"src": "3745:23:6"
																				},
																				"nativeSrc": "3745:41:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3745:41:6"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "3696:27:6",
																			"nodeType": "YulIdentifier",
																			"src": "3696:27:6"
																		},
																		"nativeSrc": "3696:91:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3696:91:6"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "3683:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3683:6:6"
																},
																"nativeSrc": "3683:105:6",
																"nodeType": "YulFunctionCall",
																"src": "3683:105:6"
															},
															"nativeSrc": "3683:105:6",
															"nodeType": "YulExpressionStatement",
															"src": "3683:105:6"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "3525:269:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3578:4:6",
														"nodeType": "YulTypedName",
														"src": "3578:4:6",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3584:6:6",
														"nodeType": "YulTypedName",
														"src": "3584:6:6",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "3592:7:6",
														"nodeType": "YulTypedName",
														"src": "3592:7:6",
														"type": ""
													}
												],
												"src": "3525:269:6"
											},
											{
												"body": {
													"nativeSrc": "3849:24:6",
													"nodeType": "YulBlock",
													"src": "3849:24:6",
													"statements": [
														{
															"nativeSrc": "3859:8:6",
															"nodeType": "YulAssignment",
															"src": "3859:8:6",
															"value": {
																"kind": "number",
																"nativeSrc": "3866:1:6",
																"nodeType": "YulLiteral",
																"src": "3866:1:6",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3859:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3859:3:6"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "3800:73:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3845:3:6",
														"nodeType": "YulTypedName",
														"src": "3845:3:6",
														"type": ""
													}
												],
												"src": "3800:73:6"
											},
											{
												"body": {
													"nativeSrc": "3932:136:6",
													"nodeType": "YulBlock",
													"src": "3932:136:6",
													"statements": [
														{
															"nativeSrc": "3942:46:6",
															"nodeType": "YulVariableDeclaration",
															"src": "3942:46:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "3956:30:6",
																	"nodeType": "YulIdentifier",
																	"src": "3956:30:6"
																},
																"nativeSrc": "3956:32:6",
																"nodeType": "YulFunctionCall",
																"src": "3956:32:6"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "3946:6:6",
																	"nodeType": "YulTypedName",
																	"src": "3946:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4041:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "4041:4:6"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "4047:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "4047:6:6"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "4055:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "4055:6:6"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "3997:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "3997:43:6"
																},
																"nativeSrc": "3997:65:6",
																"nodeType": "YulFunctionCall",
																"src": "3997:65:6"
															},
															"nativeSrc": "3997:65:6",
															"nodeType": "YulExpressionStatement",
															"src": "3997:65:6"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "3879:189:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3918:4:6",
														"nodeType": "YulTypedName",
														"src": "3918:4:6",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3924:6:6",
														"nodeType": "YulTypedName",
														"src": "3924:6:6",
														"type": ""
													}
												],
												"src": "3879:189:6"
											},
											{
												"body": {
													"nativeSrc": "4124:136:6",
													"nodeType": "YulBlock",
													"src": "4124:136:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "4191:63:6",
																"nodeType": "YulBlock",
																"src": "4191:63:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "4235:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "4235:5:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4242:1:6",
																					"nodeType": "YulLiteral",
																					"src": "4242:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "4205:29:6",
																				"nodeType": "YulIdentifier",
																				"src": "4205:29:6"
																			},
																			"nativeSrc": "4205:39:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4205:39:6"
																		},
																		"nativeSrc": "4205:39:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4205:39:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "4144:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "4144:5:6"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "4151:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "4151:3:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "4141:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "4141:2:6"
																},
																"nativeSrc": "4141:14:6",
																"nodeType": "YulFunctionCall",
																"src": "4141:14:6"
															},
															"nativeSrc": "4134:120:6",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "4156:26:6",
																"nodeType": "YulBlock",
																"src": "4156:26:6",
																"statements": [
																	{
																		"nativeSrc": "4158:22:6",
																		"nodeType": "YulAssignment",
																		"src": "4158:22:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "4171:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "4171:5:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4178:1:6",
																					"nodeType": "YulLiteral",
																					"src": "4178:1:6",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4167:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "4167:3:6"
																			},
																			"nativeSrc": "4167:13:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4167:13:6"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "4158:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "4158:5:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "4138:2:6",
																"nodeType": "YulBlock",
																"src": "4138:2:6",
																"statements": []
															},
															"src": "4134:120:6"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "4074:186:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "4112:5:6",
														"nodeType": "YulTypedName",
														"src": "4112:5:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4119:3:6",
														"nodeType": "YulTypedName",
														"src": "4119:3:6",
														"type": ""
													}
												],
												"src": "4074:186:6"
											},
											{
												"body": {
													"nativeSrc": "4345:464:6",
													"nodeType": "YulBlock",
													"src": "4345:464:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "4371:431:6",
																"nodeType": "YulBlock",
																"src": "4371:431:6",
																"statements": [
																	{
																		"nativeSrc": "4385:54:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4385:54:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "4433:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "4433:5:6"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "4401:31:6",
																				"nodeType": "YulIdentifier",
																				"src": "4401:31:6"
																			},
																			"nativeSrc": "4401:38:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4401:38:6"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "4389:8:6",
																				"nodeType": "YulTypedName",
																				"src": "4389:8:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "4452:63:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4452:63:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "4475:8:6",
																					"nodeType": "YulIdentifier",
																					"src": "4475:8:6"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "4503:10:6",
																							"nodeType": "YulIdentifier",
																							"src": "4503:10:6"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "4485:17:6",
																						"nodeType": "YulIdentifier",
																						"src": "4485:17:6"
																					},
																					"nativeSrc": "4485:29:6",
																					"nodeType": "YulFunctionCall",
																					"src": "4485:29:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4471:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "4471:3:6"
																			},
																			"nativeSrc": "4471:44:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4471:44:6"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "4456:11:6",
																				"nodeType": "YulTypedName",
																				"src": "4456:11:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "4672:27:6",
																			"nodeType": "YulBlock",
																			"src": "4672:27:6",
																			"statements": [
																				{
																					"nativeSrc": "4674:23:6",
																					"nodeType": "YulAssignment",
																					"src": "4674:23:6",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "4689:8:6",
																						"nodeType": "YulIdentifier",
																						"src": "4689:8:6"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "4674:11:6",
																							"nodeType": "YulIdentifier",
																							"src": "4674:11:6"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "4656:10:6",
																					"nodeType": "YulIdentifier",
																					"src": "4656:10:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4668:2:6",
																					"nodeType": "YulLiteral",
																					"src": "4668:2:6",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "4653:2:6",
																				"nodeType": "YulIdentifier",
																				"src": "4653:2:6"
																			},
																			"nativeSrc": "4653:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4653:18:6"
																		},
																		"nativeSrc": "4650:49:6",
																		"nodeType": "YulIf",
																		"src": "4650:49:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "4741:11:6",
																					"nodeType": "YulIdentifier",
																					"src": "4741:11:6"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "4758:8:6",
																							"nodeType": "YulIdentifier",
																							"src": "4758:8:6"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "4786:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "4786:3:6"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "4768:17:6",
																								"nodeType": "YulIdentifier",
																								"src": "4768:17:6"
																							},
																							"nativeSrc": "4768:22:6",
																							"nodeType": "YulFunctionCall",
																							"src": "4768:22:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "4754:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "4754:3:6"
																					},
																					"nativeSrc": "4754:37:6",
																					"nodeType": "YulFunctionCall",
																					"src": "4754:37:6"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "4712:28:6",
																				"nodeType": "YulIdentifier",
																				"src": "4712:28:6"
																			},
																			"nativeSrc": "4712:80:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4712:80:6"
																		},
																		"nativeSrc": "4712:80:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4712:80:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "4362:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "4362:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4367:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4367:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4359:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "4359:2:6"
																},
																"nativeSrc": "4359:11:6",
																"nodeType": "YulFunctionCall",
																"src": "4359:11:6"
															},
															"nativeSrc": "4356:446:6",
															"nodeType": "YulIf",
															"src": "4356:446:6"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "4266:543:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "4321:5:6",
														"nodeType": "YulTypedName",
														"src": "4321:5:6",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "4328:3:6",
														"nodeType": "YulTypedName",
														"src": "4328:3:6",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "4333:10:6",
														"nodeType": "YulTypedName",
														"src": "4333:10:6",
														"type": ""
													}
												],
												"src": "4266:543:6"
											},
											{
												"body": {
													"nativeSrc": "4878:54:6",
													"nodeType": "YulBlock",
													"src": "4878:54:6",
													"statements": [
														{
															"nativeSrc": "4888:37:6",
															"nodeType": "YulAssignment",
															"src": "4888:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "4913:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "4913:4:6"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "4919:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "4919:5:6"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "4909:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4909:3:6"
																},
																"nativeSrc": "4909:16:6",
																"nodeType": "YulFunctionCall",
																"src": "4909:16:6"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "4888:8:6",
																	"nodeType": "YulIdentifier",
																	"src": "4888:8:6"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "4815:117:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "4853:4:6",
														"nodeType": "YulTypedName",
														"src": "4853:4:6",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "4859:5:6",
														"nodeType": "YulTypedName",
														"src": "4859:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "4869:8:6",
														"nodeType": "YulTypedName",
														"src": "4869:8:6",
														"type": ""
													}
												],
												"src": "4815:117:6"
											},
											{
												"body": {
													"nativeSrc": "4989:118:6",
													"nodeType": "YulBlock",
													"src": "4989:118:6",
													"statements": [
														{
															"nativeSrc": "4999:68:6",
															"nodeType": "YulVariableDeclaration",
															"src": "4999:68:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "5048:1:6",
																						"nodeType": "YulLiteral",
																						"src": "5048:1:6",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "5051:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "5051:5:6"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "5044:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "5044:3:6"
																				},
																				"nativeSrc": "5044:13:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5044:13:6"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "5063:1:6",
																						"nodeType": "YulLiteral",
																						"src": "5063:1:6",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "5059:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "5059:3:6"
																				},
																				"nativeSrc": "5059:6:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5059:6:6"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "5015:28:6",
																			"nodeType": "YulIdentifier",
																			"src": "5015:28:6"
																		},
																		"nativeSrc": "5015:51:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5015:51:6"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "5011:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5011:3:6"
																},
																"nativeSrc": "5011:56:6",
																"nodeType": "YulFunctionCall",
																"src": "5011:56:6"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "5003:4:6",
																	"nodeType": "YulTypedName",
																	"src": "5003:4:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5076:25:6",
															"nodeType": "YulAssignment",
															"src": "5076:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5090:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "5090:4:6"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "5096:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "5096:4:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5086:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5086:3:6"
																},
																"nativeSrc": "5086:15:6",
																"nodeType": "YulFunctionCall",
																"src": "5086:15:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5076:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5076:6:6"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "4938:169:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4966:4:6",
														"nodeType": "YulTypedName",
														"src": "4966:4:6",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "4972:5:6",
														"nodeType": "YulTypedName",
														"src": "4972:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4982:6:6",
														"nodeType": "YulTypedName",
														"src": "4982:6:6",
														"type": ""
													}
												],
												"src": "4938:169:6"
											},
											{
												"body": {
													"nativeSrc": "5193:214:6",
													"nodeType": "YulBlock",
													"src": "5193:214:6",
													"statements": [
														{
															"nativeSrc": "5326:37:6",
															"nodeType": "YulAssignment",
															"src": "5326:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5353:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "5353:4:6"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "5359:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "5359:3:6"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "5334:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "5334:18:6"
																},
																"nativeSrc": "5334:29:6",
																"nodeType": "YulFunctionCall",
																"src": "5334:29:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "5326:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5326:4:6"
																}
															]
														},
														{
															"nativeSrc": "5372:29:6",
															"nodeType": "YulAssignment",
															"src": "5372:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5383:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "5383:4:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5393:1:6",
																				"nodeType": "YulLiteral",
																				"src": "5393:1:6",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "5396:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "5396:3:6"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "5389:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5389:3:6"
																		},
																		"nativeSrc": "5389:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5389:11:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5380:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "5380:2:6"
																},
																"nativeSrc": "5380:21:6",
																"nodeType": "YulFunctionCall",
																"src": "5380:21:6"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "5372:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5372:4:6"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "5112:295:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "5174:4:6",
														"nodeType": "YulTypedName",
														"src": "5174:4:6",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "5180:3:6",
														"nodeType": "YulTypedName",
														"src": "5180:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "5188:4:6",
														"nodeType": "YulTypedName",
														"src": "5188:4:6",
														"type": ""
													}
												],
												"src": "5112:295:6"
											},
											{
												"body": {
													"nativeSrc": "5504:1303:6",
													"nodeType": "YulBlock",
													"src": "5504:1303:6",
													"statements": [
														{
															"nativeSrc": "5515:51:6",
															"nodeType": "YulVariableDeclaration",
															"src": "5515:51:6",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "5562:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "5562:3:6"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "5529:32:6",
																	"nodeType": "YulIdentifier",
																	"src": "5529:32:6"
																},
																"nativeSrc": "5529:37:6",
																"nodeType": "YulFunctionCall",
																"src": "5529:37:6"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "5519:6:6",
																	"nodeType": "YulTypedName",
																	"src": "5519:6:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5651:22:6",
																"nodeType": "YulBlock",
																"src": "5651:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5653:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "5653:16:6"
																			},
																			"nativeSrc": "5653:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5653:18:6"
																		},
																		"nativeSrc": "5653:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "5653:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5623:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5623:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5631:18:6",
																		"nodeType": "YulLiteral",
																		"src": "5631:18:6",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5620:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "5620:2:6"
																},
																"nativeSrc": "5620:30:6",
																"nodeType": "YulFunctionCall",
																"src": "5620:30:6"
															},
															"nativeSrc": "5617:56:6",
															"nodeType": "YulIf",
															"src": "5617:56:6"
														},
														{
															"nativeSrc": "5683:52:6",
															"nodeType": "YulVariableDeclaration",
															"src": "5683:52:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "5729:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "5729:4:6"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "5723:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "5723:5:6"
																		},
																		"nativeSrc": "5723:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5723:11:6"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "5697:25:6",
																	"nodeType": "YulIdentifier",
																	"src": "5697:25:6"
																},
																"nativeSrc": "5697:38:6",
																"nodeType": "YulFunctionCall",
																"src": "5697:38:6"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "5687:6:6",
																	"nodeType": "YulTypedName",
																	"src": "5687:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5828:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "5828:4:6"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "5834:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5834:6:6"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "5842:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5842:6:6"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "5782:45:6",
																	"nodeType": "YulIdentifier",
																	"src": "5782:45:6"
																},
																"nativeSrc": "5782:67:6",
																"nodeType": "YulFunctionCall",
																"src": "5782:67:6"
															},
															"nativeSrc": "5782:67:6",
															"nodeType": "YulExpressionStatement",
															"src": "5782:67:6"
														},
														{
															"nativeSrc": "5859:18:6",
															"nodeType": "YulVariableDeclaration",
															"src": "5859:18:6",
															"value": {
																"kind": "number",
																"nativeSrc": "5876:1:6",
																"nodeType": "YulLiteral",
																"src": "5876:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5863:9:6",
																	"nodeType": "YulTypedName",
																	"src": "5863:9:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5887:17:6",
															"nodeType": "YulAssignment",
															"src": "5887:17:6",
															"value": {
																"kind": "number",
																"nativeSrc": "5900:4:6",
																"nodeType": "YulLiteral",
																"src": "5900:4:6",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5887:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "5887:9:6"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "5951:611:6",
																		"nodeType": "YulBlock",
																		"src": "5951:611:6",
																		"statements": [
																			{
																				"nativeSrc": "5965:37:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5965:37:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "5984:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "5984:6:6"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "5996:4:6",
																									"nodeType": "YulLiteral",
																									"src": "5996:4:6",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "5992:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "5992:3:6"
																							},
																							"nativeSrc": "5992:9:6",
																							"nodeType": "YulFunctionCall",
																							"src": "5992:9:6"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "5980:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "5980:3:6"
																					},
																					"nativeSrc": "5980:22:6",
																					"nodeType": "YulFunctionCall",
																					"src": "5980:22:6"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "5969:7:6",
																						"nodeType": "YulTypedName",
																						"src": "5969:7:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "6016:51:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6016:51:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6062:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "6062:4:6"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "6030:31:6",
																						"nodeType": "YulIdentifier",
																						"src": "6030:31:6"
																					},
																					"nativeSrc": "6030:37:6",
																					"nodeType": "YulFunctionCall",
																					"src": "6030:37:6"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "6020:6:6",
																						"nodeType": "YulTypedName",
																						"src": "6020:6:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "6080:10:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6080:10:6",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "6089:1:6",
																					"nodeType": "YulLiteral",
																					"src": "6089:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "6084:1:6",
																						"nodeType": "YulTypedName",
																						"src": "6084:1:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6148:163:6",
																					"nodeType": "YulBlock",
																					"src": "6148:163:6",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6173:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "6173:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "6191:3:6",
																														"nodeType": "YulIdentifier",
																														"src": "6191:3:6"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "6196:9:6",
																														"nodeType": "YulIdentifier",
																														"src": "6196:9:6"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "6187:3:6",
																													"nodeType": "YulIdentifier",
																													"src": "6187:3:6"
																												},
																												"nativeSrc": "6187:19:6",
																												"nodeType": "YulFunctionCall",
																												"src": "6187:19:6"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "6181:5:6",
																											"nodeType": "YulIdentifier",
																											"src": "6181:5:6"
																										},
																										"nativeSrc": "6181:26:6",
																										"nodeType": "YulFunctionCall",
																										"src": "6181:26:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "6166:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "6166:6:6"
																								},
																								"nativeSrc": "6166:42:6",
																								"nodeType": "YulFunctionCall",
																								"src": "6166:42:6"
																							},
																							"nativeSrc": "6166:42:6",
																							"nodeType": "YulExpressionStatement",
																							"src": "6166:42:6"
																						},
																						{
																							"nativeSrc": "6225:24:6",
																							"nodeType": "YulAssignment",
																							"src": "6225:24:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6239:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "6239:6:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "6247:1:6",
																										"nodeType": "YulLiteral",
																										"src": "6247:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6235:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "6235:3:6"
																								},
																								"nativeSrc": "6235:14:6",
																								"nodeType": "YulFunctionCall",
																								"src": "6235:14:6"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "6225:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "6225:6:6"
																								}
																							]
																						},
																						{
																							"nativeSrc": "6266:31:6",
																							"nodeType": "YulAssignment",
																							"src": "6266:31:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "6283:9:6",
																										"nodeType": "YulIdentifier",
																										"src": "6283:9:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "6294:2:6",
																										"nodeType": "YulLiteral",
																										"src": "6294:2:6",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6279:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "6279:3:6"
																								},
																								"nativeSrc": "6279:18:6",
																								"nodeType": "YulFunctionCall",
																								"src": "6279:18:6"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "6266:9:6",
																									"nodeType": "YulIdentifier",
																									"src": "6266:9:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "6114:1:6",
																							"nodeType": "YulIdentifier",
																							"src": "6114:1:6"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "6117:7:6",
																							"nodeType": "YulIdentifier",
																							"src": "6117:7:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "6111:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "6111:2:6"
																					},
																					"nativeSrc": "6111:14:6",
																					"nodeType": "YulFunctionCall",
																					"src": "6111:14:6"
																				},
																				"nativeSrc": "6103:208:6",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "6126:21:6",
																					"nodeType": "YulBlock",
																					"src": "6126:21:6",
																					"statements": [
																						{
																							"nativeSrc": "6128:17:6",
																							"nodeType": "YulAssignment",
																							"src": "6128:17:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "6137:1:6",
																										"nodeType": "YulIdentifier",
																										"src": "6137:1:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "6140:4:6",
																										"nodeType": "YulLiteral",
																										"src": "6140:4:6",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6133:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "6133:3:6"
																								},
																								"nativeSrc": "6133:12:6",
																								"nodeType": "YulFunctionCall",
																								"src": "6133:12:6"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "6128:1:6",
																									"nodeType": "YulIdentifier",
																									"src": "6128:1:6"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "6107:3:6",
																					"nodeType": "YulBlock",
																					"src": "6107:3:6",
																					"statements": []
																				},
																				"src": "6103:208:6"
																			},
																			{
																				"body": {
																					"nativeSrc": "6347:156:6",
																					"nodeType": "YulBlock",
																					"src": "6347:156:6",
																					"statements": [
																						{
																							"nativeSrc": "6365:43:6",
																							"nodeType": "YulVariableDeclaration",
																							"src": "6365:43:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6392:3:6",
																												"nodeType": "YulIdentifier",
																												"src": "6392:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6397:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "6397:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6388:3:6",
																											"nodeType": "YulIdentifier",
																											"src": "6388:3:6"
																										},
																										"nativeSrc": "6388:19:6",
																										"nodeType": "YulFunctionCall",
																										"src": "6388:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6382:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "6382:5:6"
																								},
																								"nativeSrc": "6382:26:6",
																								"nodeType": "YulFunctionCall",
																								"src": "6382:26:6"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "6369:9:6",
																									"nodeType": "YulTypedName",
																									"src": "6369:9:6",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6432:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "6432:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "6459:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "6459:9:6"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "6474:6:6",
																														"nodeType": "YulIdentifier",
																														"src": "6474:6:6"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "6482:4:6",
																														"nodeType": "YulLiteral",
																														"src": "6482:4:6",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "6470:3:6",
																													"nodeType": "YulIdentifier",
																													"src": "6470:3:6"
																												},
																												"nativeSrc": "6470:17:6",
																												"nodeType": "YulFunctionCall",
																												"src": "6470:17:6"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "6440:18:6",
																											"nodeType": "YulIdentifier",
																											"src": "6440:18:6"
																										},
																										"nativeSrc": "6440:48:6",
																										"nodeType": "YulFunctionCall",
																										"src": "6440:48:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "6425:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "6425:6:6"
																								},
																								"nativeSrc": "6425:64:6",
																								"nodeType": "YulFunctionCall",
																								"src": "6425:64:6"
																							},
																							"nativeSrc": "6425:64:6",
																							"nodeType": "YulExpressionStatement",
																							"src": "6425:64:6"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "6330:7:6",
																							"nodeType": "YulIdentifier",
																							"src": "6330:7:6"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "6339:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "6339:6:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "6327:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "6327:2:6"
																					},
																					"nativeSrc": "6327:19:6",
																					"nodeType": "YulFunctionCall",
																					"src": "6327:19:6"
																				},
																				"nativeSrc": "6324:179:6",
																				"nodeType": "YulIf",
																				"src": "6324:179:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6523:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "6523:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "6537:6:6",
																											"nodeType": "YulIdentifier",
																											"src": "6537:6:6"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "6545:1:6",
																											"nodeType": "YulLiteral",
																											"src": "6545:1:6",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "6533:3:6",
																										"nodeType": "YulIdentifier",
																										"src": "6533:3:6"
																									},
																									"nativeSrc": "6533:14:6",
																									"nodeType": "YulFunctionCall",
																									"src": "6533:14:6"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "6549:1:6",
																									"nodeType": "YulLiteral",
																									"src": "6549:1:6",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "6529:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "6529:3:6"
																							},
																							"nativeSrc": "6529:22:6",
																							"nodeType": "YulFunctionCall",
																							"src": "6529:22:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6516:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "6516:6:6"
																					},
																					"nativeSrc": "6516:36:6",
																					"nodeType": "YulFunctionCall",
																					"src": "6516:36:6"
																				},
																				"nativeSrc": "6516:36:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "6516:36:6"
																			}
																		]
																	},
																	"nativeSrc": "5944:618:6",
																	"nodeType": "YulCase",
																	"src": "5944:618:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5949:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5949:1:6",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "6579:222:6",
																		"nodeType": "YulBlock",
																		"src": "6579:222:6",
																		"statements": [
																			{
																				"nativeSrc": "6593:14:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6593:14:6",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "6606:1:6",
																					"nodeType": "YulLiteral",
																					"src": "6606:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "6597:5:6",
																						"nodeType": "YulTypedName",
																						"src": "6597:5:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6630:67:6",
																					"nodeType": "YulBlock",
																					"src": "6630:67:6",
																					"statements": [
																						{
																							"nativeSrc": "6648:35:6",
																							"nodeType": "YulAssignment",
																							"src": "6648:35:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6667:3:6",
																												"nodeType": "YulIdentifier",
																												"src": "6667:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6672:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "6672:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6663:3:6",
																											"nodeType": "YulIdentifier",
																											"src": "6663:3:6"
																										},
																										"nativeSrc": "6663:19:6",
																										"nodeType": "YulFunctionCall",
																										"src": "6663:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6657:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "6657:5:6"
																								},
																								"nativeSrc": "6657:26:6",
																								"nodeType": "YulFunctionCall",
																								"src": "6657:26:6"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "6648:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "6648:5:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "6623:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "6623:6:6"
																				},
																				"nativeSrc": "6620:77:6",
																				"nodeType": "YulIf",
																				"src": "6620:77:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6717:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "6717:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "6776:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "6776:5:6"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "6783:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "6783:6:6"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "6723:52:6",
																								"nodeType": "YulIdentifier",
																								"src": "6723:52:6"
																							},
																							"nativeSrc": "6723:67:6",
																							"nodeType": "YulFunctionCall",
																							"src": "6723:67:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6710:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "6710:6:6"
																					},
																					"nativeSrc": "6710:81:6",
																					"nodeType": "YulFunctionCall",
																					"src": "6710:81:6"
																				},
																				"nativeSrc": "6710:81:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "6710:81:6"
																			}
																		]
																	},
																	"nativeSrc": "6571:230:6",
																	"nodeType": "YulCase",
																	"src": "6571:230:6",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5924:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5924:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5932:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5932:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5921:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "5921:2:6"
																},
																"nativeSrc": "5921:14:6",
																"nodeType": "YulFunctionCall",
																"src": "5921:14:6"
															},
															"nativeSrc": "5914:887:6",
															"nodeType": "YulSwitch",
															"src": "5914:887:6"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "5412:1395:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5493:4:6",
														"nodeType": "YulTypedName",
														"src": "5493:4:6",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "5499:3:6",
														"nodeType": "YulTypedName",
														"src": "5499:3:6",
														"type": ""
													}
												],
												"src": "5412:1395:6"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_IERC20_$729(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IERC20_$729(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$729(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IERC20_$729_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IERC20_$729(value)\n    }\n\n    function abi_decode_tuple_t_contract$_IERC20_$729t_contract$_IERC20_$729_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC20_$729_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_contract$_IERC20_$729_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50604051612b41380380612b41833981810160405281019061003191906101b5565b6040518060400160405280600a81526020017f53696d706c6553776170000000000000000000000000000000000000000000008152506040518060400160405280600281526020017f535300000000000000000000000000000000000000000000000000000000000081525081600390816100ac919061042d565b5080600490816100bc919061042d565b5050508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060065f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050506104fc565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6101738261014a565b9050919050565b5f61018482610169565b9050919050565b6101948161017a565b811461019e575f80fd5b50565b5f815190506101af8161018b565b92915050565b5f80604083850312156101cb576101ca610146565b5b5f6101d8858286016101a1565b92505060206101e9858286016101a1565b9150509250929050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061026e57607f821691505b6020821081036102815761028061022a565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026102e37fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826102a8565b6102ed86836102a8565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f61033161032c61032784610305565b61030e565b610305565b9050919050565b5f819050919050565b61034a83610317565b61035e61035682610338565b8484546102b4565b825550505050565b5f90565b610372610366565b61037d818484610341565b505050565b5b818110156103a0576103955f8261036a565b600181019050610383565b5050565b601f8211156103e5576103b681610287565b6103bf84610299565b810160208510156103ce578190505b6103e26103da85610299565b830182610382565b50505b505050565b5f82821c905092915050565b5f6104055f19846008026103ea565b1980831691505092915050565b5f61041d83836103f6565b9150826002028217905092915050565b610436826101f3565b67ffffffffffffffff81111561044f5761044e6101fd565b5b6104598254610257565b6104648282856103a4565b5f60209050601f831160018114610495575f8415610483578287015190505b61048d8582610412565b8655506104f4565b601f1984166104a386610287565b5f5b828110156104ca578489015182556001820191506020850194506020810190506104a5565b868310156104e757848901516104e3601f8916826103f6565b8355505b6001600288020188555050505b505050505050565b612638806105095f395ff3fe608060405234801561000f575f80fd5b5060043610610109575f3560e01c8063443cb4bc116100a05780639c8f9f231161006f5780639c8f9f23146102d05780639cd441da14610301578063a9059cbb14610331578063d21220a714610361578063dd62ed3e1461037f57610109565b8063443cb4bc146102465780635a76f25e1461026457806370a082311461028257806395d89b41146102b257610109565b806318160ddd116100dc57806318160ddd146101a957806323b872dd146101c7578063313ce567146101f7578063432643491461021557610109565b8063054d50d41461010d57806306fdde031461013d578063095ea7b31461015b5780630dfe16811461018b575b5f80fd5b61012760048036038101906101229190611c99565b6103af565b6040516101349190611cf8565b60405180910390f35b61014561046a565b6040516101529190611d81565b60405180910390f35b61017560048036038101906101709190611dfb565b6104fa565b6040516101829190611e53565b60405180910390f35b61019361051c565b6040516101a09190611ec7565b60405180910390f35b6101b1610541565b6040516101be9190611cf8565b60405180910390f35b6101e160048036038101906101dc9190611ee0565b61054a565b6040516101ee9190611e53565b60405180910390f35b6101ff610578565b60405161020c9190611f4b565b60405180910390f35b61022f600480360381019061022a9190611f9f565b610580565b60405161023d929190611fef565b60405180910390f35b61024e610b80565b60405161025b9190611cf8565b60405180910390f35b61026c610b86565b6040516102799190611cf8565b60405180910390f35b61029c60048036038101906102979190612016565b610b8c565b6040516102a99190611cf8565b60405180910390f35b6102ba610bd1565b6040516102c79190611d81565b60405180910390f35b6102ea60048036038101906102e59190612041565b610c61565b6040516102f892919061206c565b60405180910390f35b61031b60048036038101906103169190612093565b6110ff565b6040516103289190611cf8565b60405180910390f35b61034b60048036038101906103469190611dfb565b611489565b6040516103589190611e53565b60405180910390f35b6103696114ab565b6040516103769190611ec7565b60405180910390f35b610399600480360381019061039491906120d1565b6114d0565b6040516103a69190611cf8565b60405180910390f35b5f8084116103f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103e990612159565b60405180910390fd5b5f8311801561040057505f82115b61043f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610436906121c1565b60405180910390fd5b838361044b919061220c565b8285610457919061223f565b61046191906122ad565b90509392505050565b6060600380546104799061230a565b80601f01602080910402602001604051908101604052809291908181526020018280546104a59061230a565b80156104f05780601f106104c7576101008083540402835291602001916104f0565b820191905f5260205f20905b8154815290600101906020018083116104d357829003601f168201915b5050505050905090565b5f80610504611552565b9050610511818585611559565b600191505092915050565b60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f600254905090565b5f80610554611552565b905061056185828561156b565b61056c8585856115fd565b60019150509392505050565b5f6012905090565b5f805f85116105c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105bb90612384565b60405180910390fd5b60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061066b575060065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16145b6106aa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106a1906123ec565b60405180910390fd5b60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036108745760065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050610731856007546008546103af565b9150828211610775576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161076c90612384565b60405180910390fd5b8373ffffffffffffffffffffffffffffffffffffffff166323b872dd3330886040518463ffffffff1660e01b81526004016107b293929190612419565b6020604051808303815f875af11580156107ce573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107f29190612478565b508073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b815260040161082e9291906124a3565b6020604051808303815f875af115801561084a573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061086e9190612478565b506109e6565b60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506108a7856008546007546103af565b91508282116108eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108e290612384565b60405180910390fd5b8373ffffffffffffffffffffffffffffffffffffffff166323b872dd3330886040518463ffffffff1660e01b815260040161092893929190612419565b6020604051808303815f875af1158015610944573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109689190612478565b508073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b81526004016109a49291906124a3565b6020604051808303815f875af11580156109c0573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109e49190612478565b505b60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610a4091906124ca565b602060405180830381865afa158015610a5b573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a7f91906124f7565b60078190555060065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610adf91906124ca565b602060405180830381865afa158015610afa573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b1e91906124f7565b6008819055503373ffffffffffffffffffffffffffffffffffffffff167f24043855bfbfea0ccea141e5a73d7116bf0bfe083ea900a791f4b407ff03e52586868585604051610b709493929190612522565b60405180910390a2935093915050565b60075481565b60085481565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b606060048054610be09061230a565b80601f0160208091040260200160405190810160405280929190818152602001828054610c0c9061230a565b8015610c575780601f10610c2e57610100808354040283529160200191610c57565b820191905f5260205f20905b815481529060010190602001808311610c3a57829003601f168201915b5050505050905090565b5f805f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610cbe91906124ca565b602060405180830381865afa158015610cd9573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610cfd91906124f7565b90505f60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610d5a91906124ca565b602060405180830381865afa158015610d75573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d9991906124f7565b90505f610da4610541565b9050808387610db3919061223f565b610dbd91906122ad565b9450808287610dcc919061223f565b610dd691906122ad565b93505f85118015610de657505f84115b610e25576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e1c906125af565b60405180910390fd5b610e2f33876116ed565b60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33876040518363ffffffff1660e01b8152600401610e8b9291906124a3565b6020604051808303815f875af1158015610ea7573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610ecb9190612478565b5060065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33866040518363ffffffff1660e01b8152600401610f289291906124a3565b6020604051808303815f875af1158015610f44573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610f689190612478565b5060055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610fc391906124ca565b602060405180830381865afa158015610fde573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061100291906124f7565b60078190555060065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161106291906124ca565b602060405180830381865afa15801561107d573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906110a191906124f7565b6008819055503373ffffffffffffffffffffffffffffffffffffffff167f49995e5dd6158cf69ad3e9777c46755a1a826a446c6416992167462dad033b2a86866040516110ef92919061206c565b60405180910390a2505050915091565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b815260040161115e93929190612419565b6020604051808303815f875af115801561117a573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061119e9190612478565b5060065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b81526004016111fd93929190612419565b6020604051808303815f875af1158015611219573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061123d9190612478565b505f611247610541565b90505f810361126b57611264838561125f919061223f565b61176c565b91506112a8565b6112a5600754828661127d919061223f565b61128791906122ad565b6008548386611296919061223f565b6112a091906122ad565b6117e3565b91505b5f82116112ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112e1906125af565b60405180910390fd5b60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161134491906124ca565b602060405180830381865afa15801561135f573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061138391906124f7565b60078190555060065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016113e391906124ca565b602060405180830381865afa1580156113fe573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061142291906124f7565b60088190555061143233836117fb565b3373ffffffffffffffffffffffffffffffffffffffff167f4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f858560405161147a92919061206c565b60405180910390a25092915050565b5f80611493611552565b90506114a08185856115fd565b600191505092915050565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f33905090565b611566838383600161187a565b505050565b5f61157684846114d0565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146115f757818110156115e8578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016115df939291906125cd565b60405180910390fd5b6115f684848484035f61187a565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361166d575f6040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161166491906124ca565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036116dd575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016116d491906124ca565b60405180910390fd5b6116e8838383611a49565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361175d575f6040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161175491906124ca565b60405180910390fd5b611768825f83611a49565b5050565b5f60038211156117d1578190505f600160028461178991906122ad565b611793919061220c565b90505b818110156117cb5780915060028182856117b091906122ad565b6117ba919061220c565b6117c491906122ad565b9050611796565b506117de565b5f82146117dd57600190505b5b919050565b5f8183116117f157826117f3565b815b905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361186b575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161186291906124ca565b60405180910390fd5b6118765f8383611a49565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036118ea575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016118e191906124ca565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361195a575f6040517f94280d6200000000000000000000000000000000000000000000000000000000815260040161195191906124ca565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015611a43578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051611a3a9190611cf8565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611a99578060025f828254611a8d919061220c565b92505081905550611b67565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015611b22578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401611b19939291906125cd565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611bae578060025f8282540392505081905550611bf8565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611c559190611cf8565b60405180910390a3505050565b5f80fd5b5f819050919050565b611c7881611c66565b8114611c82575f80fd5b50565b5f81359050611c9381611c6f565b92915050565b5f805f60608486031215611cb057611caf611c62565b5b5f611cbd86828701611c85565b9350506020611cce86828701611c85565b9250506040611cdf86828701611c85565b9150509250925092565b611cf281611c66565b82525050565b5f602082019050611d0b5f830184611ce9565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f611d5382611d11565b611d5d8185611d1b565b9350611d6d818560208601611d2b565b611d7681611d39565b840191505092915050565b5f6020820190508181035f830152611d998184611d49565b905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611dca82611da1565b9050919050565b611dda81611dc0565b8114611de4575f80fd5b50565b5f81359050611df581611dd1565b92915050565b5f8060408385031215611e1157611e10611c62565b5b5f611e1e85828601611de7565b9250506020611e2f85828601611c85565b9150509250929050565b5f8115159050919050565b611e4d81611e39565b82525050565b5f602082019050611e665f830184611e44565b92915050565b5f819050919050565b5f611e8f611e8a611e8584611da1565b611e6c565b611da1565b9050919050565b5f611ea082611e75565b9050919050565b5f611eb182611e96565b9050919050565b611ec181611ea7565b82525050565b5f602082019050611eda5f830184611eb8565b92915050565b5f805f60608486031215611ef757611ef6611c62565b5b5f611f0486828701611de7565b9350506020611f1586828701611de7565b9250506040611f2686828701611c85565b9150509250925092565b5f60ff82169050919050565b611f4581611f30565b82525050565b5f602082019050611f5e5f830184611f3c565b92915050565b5f611f6e82611dc0565b9050919050565b611f7e81611f64565b8114611f88575f80fd5b50565b5f81359050611f9981611f75565b92915050565b5f805f60608486031215611fb657611fb5611c62565b5b5f611fc386828701611c85565b9350506020611fd486828701611f8b565b9250506040611fe586828701611c85565b9150509250925092565b5f6040820190506120025f830185611ce9565b61200f6020830184611eb8565b9392505050565b5f6020828403121561202b5761202a611c62565b5b5f61203884828501611de7565b91505092915050565b5f6020828403121561205657612055611c62565b5b5f61206384828501611c85565b91505092915050565b5f60408201905061207f5f830185611ce9565b61208c6020830184611ce9565b9392505050565b5f80604083850312156120a9576120a8611c62565b5b5f6120b685828601611c85565b92505060206120c785828601611c85565b9150509250929050565b5f80604083850312156120e7576120e6611c62565b5b5f6120f485828601611de7565b925050602061210585828601611de7565b9150509250929050565b7f494e53554646494349454e545f414d4f554e54000000000000000000000000005f82015250565b5f612143601383611d1b565b915061214e8261210f565b602082019050919050565b5f6020820190508181035f83015261217081612137565b9050919050565b7f494e53554646494349454e545f4c4951554944495459000000000000000000005f82015250565b5f6121ab601683611d1b565b91506121b682612177565b602082019050919050565b5f6020820190508181035f8301526121d88161219f565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61221682611c66565b915061222183611c66565b9250828201905080821115612239576122386121df565b5b92915050565b5f61224982611c66565b915061225483611c66565b925082820261226281611c66565b91508282048414831517612279576122786121df565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6122b782611c66565b91506122c283611c66565b9250826122d2576122d1612280565b5b828204905092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061232157607f821691505b602082108103612334576123336122dd565b5b50919050565b7f494e53554646494349454e545f4f55545055545f414d4f554e540000000000005f82015250565b5f61236e601a83611d1b565b91506123798261233a565b602082019050919050565b5f6020820190508181035f83015261239b81612362565b9050919050565b7f494e56414c49445f544f4b454e000000000000000000000000000000000000005f82015250565b5f6123d6600d83611d1b565b91506123e1826123a2565b602082019050919050565b5f6020820190508181035f830152612403816123ca565b9050919050565b61241381611dc0565b82525050565b5f60608201905061242c5f83018661240a565b612439602083018561240a565b6124466040830184611ce9565b949350505050565b61245781611e39565b8114612461575f80fd5b50565b5f815190506124728161244e565b92915050565b5f6020828403121561248d5761248c611c62565b5b5f61249a84828501612464565b91505092915050565b5f6040820190506124b65f83018561240a565b6124c36020830184611ce9565b9392505050565b5f6020820190506124dd5f83018461240a565b92915050565b5f815190506124f181611c6f565b92915050565b5f6020828403121561250c5761250b611c62565b5b5f612519848285016124e3565b91505092915050565b5f6080820190506125355f830187611ce9565b612542602083018661240a565b61254f6040830185611ce9565b61255c606083018461240a565b95945050505050565b7f494e53554646494349454e545f4c49515549444954595f4d494e5445440000005f82015250565b5f612599601d83611d1b565b91506125a482612565565b602082019050919050565b5f6020820190508181035f8301526125c68161258d565b9050919050565b5f6060820190506125e05f83018661240a565b6125ed6020830185611ce9565b6125fa6040830184611ce9565b94935050505056fea2646970667358221220abbda7e48efd3fcde71769aac16418257904e482010f78e51ac5cfa70cce265964736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x2B41 CODESIZE SUB DUP1 PUSH2 0x2B41 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x1B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x53696D706C655377617000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5353000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0xAC SWAP2 SWAP1 PUSH2 0x42D JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0xBC SWAP2 SWAP1 PUSH2 0x42D JUMP JUMPDEST POP POP POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x6 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH2 0x4FC JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x173 DUP3 PUSH2 0x14A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x184 DUP3 PUSH2 0x169 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x194 DUP2 PUSH2 0x17A JUMP JUMPDEST DUP2 EQ PUSH2 0x19E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1AF DUP2 PUSH2 0x18B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1CB JUMPI PUSH2 0x1CA PUSH2 0x146 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D8 DUP6 DUP3 DUP7 ADD PUSH2 0x1A1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1E9 DUP6 DUP3 DUP7 ADD PUSH2 0x1A1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x26E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x281 JUMPI PUSH2 0x280 PUSH2 0x22A JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x2E3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x2A8 JUMP JUMPDEST PUSH2 0x2ED DUP7 DUP4 PUSH2 0x2A8 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x331 PUSH2 0x32C PUSH2 0x327 DUP5 PUSH2 0x305 JUMP JUMPDEST PUSH2 0x30E JUMP JUMPDEST PUSH2 0x305 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x34A DUP4 PUSH2 0x317 JUMP JUMPDEST PUSH2 0x35E PUSH2 0x356 DUP3 PUSH2 0x338 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x2B4 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x372 PUSH2 0x366 JUMP JUMPDEST PUSH2 0x37D DUP2 DUP5 DUP5 PUSH2 0x341 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3A0 JUMPI PUSH2 0x395 PUSH0 DUP3 PUSH2 0x36A JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x383 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x3E5 JUMPI PUSH2 0x3B6 DUP2 PUSH2 0x287 JUMP JUMPDEST PUSH2 0x3BF DUP5 PUSH2 0x299 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x3CE JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x3E2 PUSH2 0x3DA DUP6 PUSH2 0x299 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x382 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x405 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x3EA JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x41D DUP4 DUP4 PUSH2 0x3F6 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x436 DUP3 PUSH2 0x1F3 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x44F JUMPI PUSH2 0x44E PUSH2 0x1FD JUMP JUMPDEST JUMPDEST PUSH2 0x459 DUP3 SLOAD PUSH2 0x257 JUMP JUMPDEST PUSH2 0x464 DUP3 DUP3 DUP6 PUSH2 0x3A4 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x495 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x483 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x48D DUP6 DUP3 PUSH2 0x412 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x4F4 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x4A3 DUP7 PUSH2 0x287 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x4CA JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x4A5 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x4E7 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x4E3 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x3F6 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2638 DUP1 PUSH2 0x509 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x109 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x443CB4BC GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0x9C8F9F23 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x9C8F9F23 EQ PUSH2 0x2D0 JUMPI DUP1 PUSH4 0x9CD441DA EQ PUSH2 0x301 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x331 JUMPI DUP1 PUSH4 0xD21220A7 EQ PUSH2 0x361 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x37F JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x443CB4BC EQ PUSH2 0x246 JUMPI DUP1 PUSH4 0x5A76F25E EQ PUSH2 0x264 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x282 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2B2 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1C7 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1F7 JUMPI DUP1 PUSH4 0x43264349 EQ PUSH2 0x215 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x54D50D4 EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x15B JUMPI DUP1 PUSH4 0xDFE1681 EQ PUSH2 0x18B JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x127 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x122 SWAP2 SWAP1 PUSH2 0x1C99 JUMP JUMPDEST PUSH2 0x3AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x134 SWAP2 SWAP1 PUSH2 0x1CF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x145 PUSH2 0x46A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x152 SWAP2 SWAP1 PUSH2 0x1D81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x175 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x170 SWAP2 SWAP1 PUSH2 0x1DFB JUMP JUMPDEST PUSH2 0x4FA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x182 SWAP2 SWAP1 PUSH2 0x1E53 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x193 PUSH2 0x51C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A0 SWAP2 SWAP1 PUSH2 0x1EC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B1 PUSH2 0x541 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BE SWAP2 SWAP1 PUSH2 0x1CF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DC SWAP2 SWAP1 PUSH2 0x1EE0 JUMP JUMPDEST PUSH2 0x54A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EE SWAP2 SWAP1 PUSH2 0x1E53 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FF PUSH2 0x578 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20C SWAP2 SWAP1 PUSH2 0x1F4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22A SWAP2 SWAP1 PUSH2 0x1F9F JUMP JUMPDEST PUSH2 0x580 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP3 SWAP2 SWAP1 PUSH2 0x1FEF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24E PUSH2 0xB80 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25B SWAP2 SWAP1 PUSH2 0x1CF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26C PUSH2 0xB86 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x279 SWAP2 SWAP1 PUSH2 0x1CF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x297 SWAP2 SWAP1 PUSH2 0x2016 JUMP JUMPDEST PUSH2 0xB8C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A9 SWAP2 SWAP1 PUSH2 0x1CF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BA PUSH2 0xBD1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C7 SWAP2 SWAP1 PUSH2 0x1D81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2EA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E5 SWAP2 SWAP1 PUSH2 0x2041 JUMP JUMPDEST PUSH2 0xC61 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F8 SWAP3 SWAP2 SWAP1 PUSH2 0x206C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x316 SWAP2 SWAP1 PUSH2 0x2093 JUMP JUMPDEST PUSH2 0x10FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x328 SWAP2 SWAP1 PUSH2 0x1CF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x34B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x346 SWAP2 SWAP1 PUSH2 0x1DFB JUMP JUMPDEST PUSH2 0x1489 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x358 SWAP2 SWAP1 PUSH2 0x1E53 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x369 PUSH2 0x14AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x376 SWAP2 SWAP1 PUSH2 0x1EC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x399 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x394 SWAP2 SWAP1 PUSH2 0x20D1 JUMP JUMPDEST PUSH2 0x14D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A6 SWAP2 SWAP1 PUSH2 0x1CF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 DUP5 GT PUSH2 0x3F2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3E9 SWAP1 PUSH2 0x2159 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP4 GT DUP1 ISZERO PUSH2 0x400 JUMPI POP PUSH0 DUP3 GT JUMPDEST PUSH2 0x43F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x436 SWAP1 PUSH2 0x21C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 DUP4 PUSH2 0x44B SWAP2 SWAP1 PUSH2 0x220C JUMP JUMPDEST DUP3 DUP6 PUSH2 0x457 SWAP2 SWAP1 PUSH2 0x223F JUMP JUMPDEST PUSH2 0x461 SWAP2 SWAP1 PUSH2 0x22AD JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x479 SWAP1 PUSH2 0x230A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4A5 SWAP1 PUSH2 0x230A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4F0 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4C7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4F0 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4D3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x504 PUSH2 0x1552 JUMP JUMPDEST SWAP1 POP PUSH2 0x511 DUP2 DUP6 DUP6 PUSH2 0x1559 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x554 PUSH2 0x1552 JUMP JUMPDEST SWAP1 POP PUSH2 0x561 DUP6 DUP3 DUP6 PUSH2 0x156B JUMP JUMPDEST PUSH2 0x56C DUP6 DUP6 DUP6 PUSH2 0x15FD JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 GT PUSH2 0x5C4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5BB SWAP1 PUSH2 0x2384 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x66B JUMPI POP PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x6AA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A1 SWAP1 PUSH2 0x23EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x874 JUMPI PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH2 0x731 DUP6 PUSH1 0x7 SLOAD PUSH1 0x8 SLOAD PUSH2 0x3AF JUMP JUMPDEST SWAP2 POP DUP3 DUP3 GT PUSH2 0x775 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x76C SWAP1 PUSH2 0x2384 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP9 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7B2 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2419 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7CE JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7F2 SWAP2 SWAP1 PUSH2 0x2478 JUMP JUMPDEST POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82E SWAP3 SWAP2 SWAP1 PUSH2 0x24A3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x84A JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x86E SWAP2 SWAP1 PUSH2 0x2478 JUMP JUMPDEST POP PUSH2 0x9E6 JUMP JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH2 0x8A7 DUP6 PUSH1 0x8 SLOAD PUSH1 0x7 SLOAD PUSH2 0x3AF JUMP JUMPDEST SWAP2 POP DUP3 DUP3 GT PUSH2 0x8EB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8E2 SWAP1 PUSH2 0x2384 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP9 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x928 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2419 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x944 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x968 SWAP2 SWAP1 PUSH2 0x2478 JUMP JUMPDEST POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9A4 SWAP3 SWAP2 SWAP1 PUSH2 0x24A3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9C0 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9E4 SWAP2 SWAP1 PUSH2 0x2478 JUMP JUMPDEST POP JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA40 SWAP2 SWAP1 PUSH2 0x24CA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA5B JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA7F SWAP2 SWAP1 PUSH2 0x24F7 JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xADF SWAP2 SWAP1 PUSH2 0x24CA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAFA JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB1E SWAP2 SWAP1 PUSH2 0x24F7 JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x24043855BFBFEA0CCEA141E5A73D7116BF0BFE083EA900A791F4B407FF03E525 DUP7 DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0xB70 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2522 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xBE0 SWAP1 PUSH2 0x230A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xC0C SWAP1 PUSH2 0x230A JUMP JUMPDEST DUP1 ISZERO PUSH2 0xC57 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xC2E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC57 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC3A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCBE SWAP2 SWAP1 PUSH2 0x24CA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCD9 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCFD SWAP2 SWAP1 PUSH2 0x24F7 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD5A SWAP2 SWAP1 PUSH2 0x24CA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD75 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD99 SWAP2 SWAP1 PUSH2 0x24F7 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xDA4 PUSH2 0x541 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP8 PUSH2 0xDB3 SWAP2 SWAP1 PUSH2 0x223F JUMP JUMPDEST PUSH2 0xDBD SWAP2 SWAP1 PUSH2 0x22AD JUMP JUMPDEST SWAP5 POP DUP1 DUP3 DUP8 PUSH2 0xDCC SWAP2 SWAP1 PUSH2 0x223F JUMP JUMPDEST PUSH2 0xDD6 SWAP2 SWAP1 PUSH2 0x22AD JUMP JUMPDEST SWAP4 POP PUSH0 DUP6 GT DUP1 ISZERO PUSH2 0xDE6 JUMPI POP PUSH0 DUP5 GT JUMPDEST PUSH2 0xE25 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE1C SWAP1 PUSH2 0x25AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE2F CALLER DUP8 PUSH2 0x16ED JUMP JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP8 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE8B SWAP3 SWAP2 SWAP1 PUSH2 0x24A3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xEA7 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xECB SWAP2 SWAP1 PUSH2 0x2478 JUMP JUMPDEST POP PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP7 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF28 SWAP3 SWAP2 SWAP1 PUSH2 0x24A3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF44 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF68 SWAP2 SWAP1 PUSH2 0x2478 JUMP JUMPDEST POP PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFC3 SWAP2 SWAP1 PUSH2 0x24CA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xFDE JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1002 SWAP2 SWAP1 PUSH2 0x24F7 JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1062 SWAP2 SWAP1 PUSH2 0x24CA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x107D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10A1 SWAP2 SWAP1 PUSH2 0x24F7 JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x49995E5DD6158CF69AD3E9777C46755A1A826A446C6416992167462DAD033B2A DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x10EF SWAP3 SWAP2 SWAP1 PUSH2 0x206C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x115E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2419 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x117A JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x119E SWAP2 SWAP1 PUSH2 0x2478 JUMP JUMPDEST POP PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11FD SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2419 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1219 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x123D SWAP2 SWAP1 PUSH2 0x2478 JUMP JUMPDEST POP PUSH0 PUSH2 0x1247 PUSH2 0x541 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 SUB PUSH2 0x126B JUMPI PUSH2 0x1264 DUP4 DUP6 PUSH2 0x125F SWAP2 SWAP1 PUSH2 0x223F JUMP JUMPDEST PUSH2 0x176C JUMP JUMPDEST SWAP2 POP PUSH2 0x12A8 JUMP JUMPDEST PUSH2 0x12A5 PUSH1 0x7 SLOAD DUP3 DUP7 PUSH2 0x127D SWAP2 SWAP1 PUSH2 0x223F JUMP JUMPDEST PUSH2 0x1287 SWAP2 SWAP1 PUSH2 0x22AD JUMP JUMPDEST PUSH1 0x8 SLOAD DUP4 DUP7 PUSH2 0x1296 SWAP2 SWAP1 PUSH2 0x223F JUMP JUMPDEST PUSH2 0x12A0 SWAP2 SWAP1 PUSH2 0x22AD JUMP JUMPDEST PUSH2 0x17E3 JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH0 DUP3 GT PUSH2 0x12EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12E1 SWAP1 PUSH2 0x25AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1344 SWAP2 SWAP1 PUSH2 0x24CA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x135F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1383 SWAP2 SWAP1 PUSH2 0x24F7 JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13E3 SWAP2 SWAP1 PUSH2 0x24CA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x13FE JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1422 SWAP2 SWAP1 PUSH2 0x24F7 JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH2 0x1432 CALLER DUP4 PUSH2 0x17FB JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4C209B5FC8AD50758F13E2E1088BA56A560DFF690A1C6FEF26394F4C03821C4F DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x147A SWAP3 SWAP2 SWAP1 PUSH2 0x206C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x1493 PUSH2 0x1552 JUMP JUMPDEST SWAP1 POP PUSH2 0x14A0 DUP2 DUP6 DUP6 PUSH2 0x15FD JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1566 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x187A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1576 DUP5 DUP5 PUSH2 0x14D0 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x15F7 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x15E8 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15DF SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x25CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x15F6 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x187A JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x166D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1664 SWAP2 SWAP1 PUSH2 0x24CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x16DD JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16D4 SWAP2 SWAP1 PUSH2 0x24CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x16E8 DUP4 DUP4 DUP4 PUSH2 0x1A49 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x175D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1754 SWAP2 SWAP1 PUSH2 0x24CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1768 DUP3 PUSH0 DUP4 PUSH2 0x1A49 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 DUP3 GT ISZERO PUSH2 0x17D1 JUMPI DUP2 SWAP1 POP PUSH0 PUSH1 0x1 PUSH1 0x2 DUP5 PUSH2 0x1789 SWAP2 SWAP1 PUSH2 0x22AD JUMP JUMPDEST PUSH2 0x1793 SWAP2 SWAP1 PUSH2 0x220C JUMP JUMPDEST SWAP1 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x17CB JUMPI DUP1 SWAP2 POP PUSH1 0x2 DUP2 DUP3 DUP6 PUSH2 0x17B0 SWAP2 SWAP1 PUSH2 0x22AD JUMP JUMPDEST PUSH2 0x17BA SWAP2 SWAP1 PUSH2 0x220C JUMP JUMPDEST PUSH2 0x17C4 SWAP2 SWAP1 PUSH2 0x22AD JUMP JUMPDEST SWAP1 POP PUSH2 0x1796 JUMP JUMPDEST POP PUSH2 0x17DE JUMP JUMPDEST PUSH0 DUP3 EQ PUSH2 0x17DD JUMPI PUSH1 0x1 SWAP1 POP JUMPDEST JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 DUP4 GT PUSH2 0x17F1 JUMPI DUP3 PUSH2 0x17F3 JUMP JUMPDEST DUP2 JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x186B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1862 SWAP2 SWAP1 PUSH2 0x24CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1876 PUSH0 DUP4 DUP4 PUSH2 0x1A49 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x18EA JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18E1 SWAP2 SWAP1 PUSH2 0x24CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x195A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1951 SWAP2 SWAP1 PUSH2 0x24CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1A43 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1A3A SWAP2 SWAP1 PUSH2 0x1CF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1A99 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1A8D SWAP2 SWAP1 PUSH2 0x220C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1B67 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1B22 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B19 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x25CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1BAE JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1BF8 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1C55 SWAP2 SWAP1 PUSH2 0x1CF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C78 DUP2 PUSH2 0x1C66 JUMP JUMPDEST DUP2 EQ PUSH2 0x1C82 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C93 DUP2 PUSH2 0x1C6F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1CB0 JUMPI PUSH2 0x1CAF PUSH2 0x1C62 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1CBD DUP7 DUP3 DUP8 ADD PUSH2 0x1C85 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1CCE DUP7 DUP3 DUP8 ADD PUSH2 0x1C85 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1CDF DUP7 DUP3 DUP8 ADD PUSH2 0x1C85 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x1CF2 DUP2 PUSH2 0x1C66 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D0B PUSH0 DUP4 ADD DUP5 PUSH2 0x1CE9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1D53 DUP3 PUSH2 0x1D11 JUMP JUMPDEST PUSH2 0x1D5D DUP2 DUP6 PUSH2 0x1D1B JUMP JUMPDEST SWAP4 POP PUSH2 0x1D6D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1D2B JUMP JUMPDEST PUSH2 0x1D76 DUP2 PUSH2 0x1D39 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D99 DUP2 DUP5 PUSH2 0x1D49 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1DCA DUP3 PUSH2 0x1DA1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DDA DUP2 PUSH2 0x1DC0 JUMP JUMPDEST DUP2 EQ PUSH2 0x1DE4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1DF5 DUP2 PUSH2 0x1DD1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E11 JUMPI PUSH2 0x1E10 PUSH2 0x1C62 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E1E DUP6 DUP3 DUP7 ADD PUSH2 0x1DE7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1E2F DUP6 DUP3 DUP7 ADD PUSH2 0x1C85 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E4D DUP2 PUSH2 0x1E39 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E66 PUSH0 DUP4 ADD DUP5 PUSH2 0x1E44 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1E8F PUSH2 0x1E8A PUSH2 0x1E85 DUP5 PUSH2 0x1DA1 JUMP JUMPDEST PUSH2 0x1E6C JUMP JUMPDEST PUSH2 0x1DA1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1EA0 DUP3 PUSH2 0x1E75 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1EB1 DUP3 PUSH2 0x1E96 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1EC1 DUP2 PUSH2 0x1EA7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1EDA PUSH0 DUP4 ADD DUP5 PUSH2 0x1EB8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1EF7 JUMPI PUSH2 0x1EF6 PUSH2 0x1C62 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F04 DUP7 DUP3 DUP8 ADD PUSH2 0x1DE7 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1F15 DUP7 DUP3 DUP8 ADD PUSH2 0x1DE7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1F26 DUP7 DUP3 DUP8 ADD PUSH2 0x1C85 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F45 DUP2 PUSH2 0x1F30 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F5E PUSH0 DUP4 ADD DUP5 PUSH2 0x1F3C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1F6E DUP3 PUSH2 0x1DC0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F7E DUP2 PUSH2 0x1F64 JUMP JUMPDEST DUP2 EQ PUSH2 0x1F88 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1F99 DUP2 PUSH2 0x1F75 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1FB6 JUMPI PUSH2 0x1FB5 PUSH2 0x1C62 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1FC3 DUP7 DUP3 DUP8 ADD PUSH2 0x1C85 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1FD4 DUP7 DUP3 DUP8 ADD PUSH2 0x1F8B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1FE5 DUP7 DUP3 DUP8 ADD PUSH2 0x1C85 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2002 PUSH0 DUP4 ADD DUP6 PUSH2 0x1CE9 JUMP JUMPDEST PUSH2 0x200F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1EB8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x202B JUMPI PUSH2 0x202A PUSH2 0x1C62 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2038 DUP5 DUP3 DUP6 ADD PUSH2 0x1DE7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2056 JUMPI PUSH2 0x2055 PUSH2 0x1C62 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2063 DUP5 DUP3 DUP6 ADD PUSH2 0x1C85 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x207F PUSH0 DUP4 ADD DUP6 PUSH2 0x1CE9 JUMP JUMPDEST PUSH2 0x208C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1CE9 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x20A9 JUMPI PUSH2 0x20A8 PUSH2 0x1C62 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x20B6 DUP6 DUP3 DUP7 ADD PUSH2 0x1C85 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x20C7 DUP6 DUP3 DUP7 ADD PUSH2 0x1C85 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x20E7 JUMPI PUSH2 0x20E6 PUSH2 0x1C62 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x20F4 DUP6 DUP3 DUP7 ADD PUSH2 0x1DE7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2105 DUP6 DUP3 DUP7 ADD PUSH2 0x1DE7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x494E53554646494349454E545F414D4F554E5400000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2143 PUSH1 0x13 DUP4 PUSH2 0x1D1B JUMP JUMPDEST SWAP2 POP PUSH2 0x214E DUP3 PUSH2 0x210F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2170 DUP2 PUSH2 0x2137 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x494E53554646494349454E545F4C495155494449545900000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x21AB PUSH1 0x16 DUP4 PUSH2 0x1D1B JUMP JUMPDEST SWAP2 POP PUSH2 0x21B6 DUP3 PUSH2 0x2177 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x21D8 DUP2 PUSH2 0x219F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2216 DUP3 PUSH2 0x1C66 JUMP JUMPDEST SWAP2 POP PUSH2 0x2221 DUP4 PUSH2 0x1C66 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2239 JUMPI PUSH2 0x2238 PUSH2 0x21DF JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2249 DUP3 PUSH2 0x1C66 JUMP JUMPDEST SWAP2 POP PUSH2 0x2254 DUP4 PUSH2 0x1C66 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2262 DUP2 PUSH2 0x1C66 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2279 JUMPI PUSH2 0x2278 PUSH2 0x21DF JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x22B7 DUP3 PUSH2 0x1C66 JUMP JUMPDEST SWAP2 POP PUSH2 0x22C2 DUP4 PUSH2 0x1C66 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x22D2 JUMPI PUSH2 0x22D1 PUSH2 0x2280 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2321 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2334 JUMPI PUSH2 0x2333 PUSH2 0x22DD JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x494E53554646494349454E545F4F55545055545F414D4F554E54000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x236E PUSH1 0x1A DUP4 PUSH2 0x1D1B JUMP JUMPDEST SWAP2 POP PUSH2 0x2379 DUP3 PUSH2 0x233A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x239B DUP2 PUSH2 0x2362 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x494E56414C49445F544F4B454E00000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x23D6 PUSH1 0xD DUP4 PUSH2 0x1D1B JUMP JUMPDEST SWAP2 POP PUSH2 0x23E1 DUP3 PUSH2 0x23A2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2403 DUP2 PUSH2 0x23CA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2413 DUP2 PUSH2 0x1DC0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x242C PUSH0 DUP4 ADD DUP7 PUSH2 0x240A JUMP JUMPDEST PUSH2 0x2439 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x240A JUMP JUMPDEST PUSH2 0x2446 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1CE9 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x2457 DUP2 PUSH2 0x1E39 JUMP JUMPDEST DUP2 EQ PUSH2 0x2461 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2472 DUP2 PUSH2 0x244E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x248D JUMPI PUSH2 0x248C PUSH2 0x1C62 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x249A DUP5 DUP3 DUP6 ADD PUSH2 0x2464 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x24B6 PUSH0 DUP4 ADD DUP6 PUSH2 0x240A JUMP JUMPDEST PUSH2 0x24C3 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1CE9 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x24DD PUSH0 DUP4 ADD DUP5 PUSH2 0x240A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x24F1 DUP2 PUSH2 0x1C6F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x250C JUMPI PUSH2 0x250B PUSH2 0x1C62 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2519 DUP5 DUP3 DUP6 ADD PUSH2 0x24E3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2535 PUSH0 DUP4 ADD DUP8 PUSH2 0x1CE9 JUMP JUMPDEST PUSH2 0x2542 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x240A JUMP JUMPDEST PUSH2 0x254F PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1CE9 JUMP JUMPDEST PUSH2 0x255C PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x240A JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x494E53554646494349454E545F4C49515549444954595F4D494E544544000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2599 PUSH1 0x1D DUP4 PUSH2 0x1D1B JUMP JUMPDEST SWAP2 POP PUSH2 0x25A4 DUP3 PUSH2 0x2565 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x25C6 DUP2 PUSH2 0x258D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x25E0 PUSH0 DUP4 ADD DUP7 PUSH2 0x240A JUMP JUMPDEST PUSH2 0x25ED PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1CE9 JUMP JUMPDEST PUSH2 0x25FA PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1CE9 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAB 0xBD 0xA7 0xE4 DUP15 REVERT EXTCODEHASH 0xCD 0xE7 OR PUSH10 0xAAC16418257904E48201 0xF PUSH25 0xE51AC5CFA70CCE265964736F6C634300081A00330000000000 ",
							"sourceMap": "432:4822:5:-:0;;;667:131;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1896:113:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1970:5;1962;:13;;;;;;:::i;:::-;;1995:7;1985;:17;;;;;;:::i;:::-;;1896:113;;756:7:5::1;747:6;;:16;;;;;;;;;;;;;;;;;;783:7;774:6;;:16;;;;;;;;;;;;;;;;;;667:131:::0;;432:4822;;88:117:6;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:110::-;619:7;648:24;666:5;648:24;:::i;:::-;637:35;;568:110;;;:::o;684:150::-;771:38;803:5;771:38;:::i;:::-;764:5;761:49;751:77;;824:1;821;814:12;751:77;684:150;:::o;840:171::-;911:5;942:6;936:13;927:22;;958:47;999:5;958:47;:::i;:::-;840:171;;;;:::o;1017:563::-;1124:6;1132;1181:2;1169:9;1160:7;1156:23;1152:32;1149:119;;;1187:79;;:::i;:::-;1149:119;1307:1;1332:78;1402:7;1393:6;1382:9;1378:22;1332:78;:::i;:::-;1322:88;;1278:142;1459:2;1485:78;1555:7;1546:6;1535:9;1531:22;1485:78;:::i;:::-;1475:88;;1430:143;1017:563;;;;;:::o;1586:99::-;1638:6;1672:5;1666:12;1656:22;;1586:99;;;:::o;1691:180::-;1739:77;1736:1;1729:88;1836:4;1833:1;1826:15;1860:4;1857:1;1850:15;1877:180;1925:77;1922:1;1915:88;2022:4;2019:1;2012:15;2046:4;2043:1;2036:15;2063:320;2107:6;2144:1;2138:4;2134:12;2124:22;;2191:1;2185:4;2181:12;2212:18;2202:81;;2268:4;2260:6;2256:17;2246:27;;2202:81;2330:2;2322:6;2319:14;2299:18;2296:38;2293:84;;2349:18;;:::i;:::-;2293:84;2114:269;2063:320;;;:::o;2389:141::-;2438:4;2461:3;2453:11;;2484:3;2481:1;2474:14;2518:4;2515:1;2505:18;2497:26;;2389:141;;;:::o;2536:93::-;2573:6;2620:2;2615;2608:5;2604:14;2600:23;2590:33;;2536:93;;;:::o;2635:107::-;2679:8;2729:5;2723:4;2719:16;2698:37;;2635:107;;;;:::o;2748:393::-;2817:6;2867:1;2855:10;2851:18;2890:97;2920:66;2909:9;2890:97;:::i;:::-;3008:39;3038:8;3027:9;3008:39;:::i;:::-;2996:51;;3080:4;3076:9;3069:5;3065:21;3056:30;;3129:4;3119:8;3115:19;3108:5;3105:30;3095:40;;2824:317;;2748:393;;;;;:::o;3147:77::-;3184:7;3213:5;3202:16;;3147:77;;;:::o;3230:60::-;3258:3;3279:5;3272:12;;3230:60;;;:::o;3296:142::-;3346:9;3379:53;3397:34;3406:24;3424:5;3406:24;:::i;:::-;3397:34;:::i;:::-;3379:53;:::i;:::-;3366:66;;3296:142;;;:::o;3444:75::-;3487:3;3508:5;3501:12;;3444:75;;;:::o;3525:269::-;3635:39;3666:7;3635:39;:::i;:::-;3696:91;3745:41;3769:16;3745:41;:::i;:::-;3737:6;3730:4;3724:11;3696:91;:::i;:::-;3690:4;3683:105;3601:193;3525:269;;;:::o;3800:73::-;3845:3;3800:73;:::o;3879:189::-;3956:32;;:::i;:::-;3997:65;4055:6;4047;4041:4;3997:65;:::i;:::-;3932:136;3879:189;;:::o;4074:186::-;4134:120;4151:3;4144:5;4141:14;4134:120;;;4205:39;4242:1;4235:5;4205:39;:::i;:::-;4178:1;4171:5;4167:13;4158:22;;4134:120;;;4074:186;;:::o;4266:543::-;4367:2;4362:3;4359:11;4356:446;;;4401:38;4433:5;4401:38;:::i;:::-;4485:29;4503:10;4485:29;:::i;:::-;4475:8;4471:44;4668:2;4656:10;4653:18;4650:49;;;4689:8;4674:23;;4650:49;4712:80;4768:22;4786:3;4768:22;:::i;:::-;4758:8;4754:37;4741:11;4712:80;:::i;:::-;4371:431;;4356:446;4266:543;;;:::o;4815:117::-;4869:8;4919:5;4913:4;4909:16;4888:37;;4815:117;;;;:::o;4938:169::-;4982:6;5015:51;5063:1;5059:6;5051:5;5048:1;5044:13;5015:51;:::i;:::-;5011:56;5096:4;5090;5086:15;5076:25;;4989:118;4938:169;;;;:::o;5112:295::-;5188:4;5334:29;5359:3;5353:4;5334:29;:::i;:::-;5326:37;;5396:3;5393:1;5389:11;5383:4;5380:21;5372:29;;5112:295;;;;:::o;5412:1395::-;5529:37;5562:3;5529:37;:::i;:::-;5631:18;5623:6;5620:30;5617:56;;;5653:18;;:::i;:::-;5617:56;5697:38;5729:4;5723:11;5697:38;:::i;:::-;5782:67;5842:6;5834;5828:4;5782:67;:::i;:::-;5876:1;5900:4;5887:17;;5932:2;5924:6;5921:14;5949:1;5944:618;;;;6606:1;6623:6;6620:77;;;6672:9;6667:3;6663:19;6657:26;6648:35;;6620:77;6723:67;6783:6;6776:5;6723:67;:::i;:::-;6717:4;6710:81;6579:222;5914:887;;5944:618;5996:4;5992:9;5984:6;5980:22;6030:37;6062:4;6030:37;:::i;:::-;6089:1;6103:208;6117:7;6114:1;6111:14;6103:208;;;6196:9;6191:3;6187:19;6181:26;6173:6;6166:42;6247:1;6239:6;6235:14;6225:24;;6294:2;6283:9;6279:18;6266:31;;6140:4;6137:1;6133:12;6128:17;;6103:208;;;6339:6;6330:7;6327:19;6324:179;;;6397:9;6392:3;6388:19;6382:26;6440:48;6482:4;6474:6;6470:17;6459:9;6440:48;:::i;:::-;6432:6;6425:64;6347:156;6324:179;6549:1;6545;6537:6;6533:14;6529:22;6523:4;6516:36;5951:611;;;5914:887;;5504:1303;;;5412:1395;;:::o;432:4822:5:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_542": {
									"entryPoint": 5465,
									"id": 542,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_602": {
									"entryPoint": 6266,
									"id": 602,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_524": {
									"entryPoint": 5869,
									"id": 524,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_mint_491": {
									"entryPoint": 6139,
									"id": 491,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_767": {
									"entryPoint": 5458,
									"id": 767,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_650": {
									"entryPoint": 5483,
									"id": 650,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_381": {
									"entryPoint": 5629,
									"id": 381,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_458": {
									"entryPoint": 6729,
									"id": 458,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@addLiquidity_938": {
									"entryPoint": 4351,
									"id": 938,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@allowance_278": {
									"entryPoint": 5328,
									"id": 278,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_302": {
									"entryPoint": 1274,
									"id": 302,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_237": {
									"entryPoint": 2956,
									"id": 237,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_215": {
									"entryPoint": 1400,
									"id": 215,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getAmountOut_1098": {
									"entryPoint": 943,
									"id": 1098,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@min_1336": {
									"entryPoint": 6115,
									"id": 1336,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_197": {
									"entryPoint": 1130,
									"id": 197,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@removeLiquidity_1057": {
									"entryPoint": 3169,
									"id": 1057,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@reserve0_798": {
									"entryPoint": 2944,
									"id": 798,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@reserve1_800": {
									"entryPoint": 2950,
									"id": 800,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sqrt_1317": {
									"entryPoint": 5996,
									"id": 1317,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@swap_1263": {
									"entryPoint": 1408,
									"id": 1263,
									"parameterSlots": 3,
									"returnSlots": 2
								},
								"@symbol_206": {
									"entryPoint": 3025,
									"id": 206,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@token0_793": {
									"entryPoint": 1308,
									"id": 793,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@token1_796": {
									"entryPoint": 5291,
									"id": 796,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalSupply_224": {
									"entryPoint": 1345,
									"id": 224,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_334": {
									"entryPoint": 1354,
									"id": 334,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_261": {
									"entryPoint": 5257,
									"id": 261,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 7655,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 9316,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_IERC20_$729": {
									"entryPoint": 8075,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 7301,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 9443,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 8214,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 8401,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 7904,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 7675,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 9336,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 8257,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 9463,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_contract$_IERC20_$729t_uint256": {
									"entryPoint": 8095,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 8339,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_uint256t_uint256": {
									"entryPoint": 7321,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 9226,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 7748,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$729_to_t_address_fromStack": {
									"entryPoint": 7864,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7497,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_436b5627177a9781148596ddddd93f72d53dd82575a018216d5aaf2a8219ec9e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9162,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_56a253623294f4f4de6a9841388f033e113a22d6b37d1e786db69a7172923f8c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9613,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_bbbb4868217c0daeb6721d77d471da8aa8a80672b4258dd2de9d7ccde9bf2146_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9058,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e8788a811b2f03c33c54d190798bfa174d3e97deda56c09c1df2080dcc8d5158_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8503,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e8d3230d72418d9aed77f45ee412f45396c3f3cd599a1a457d8130d57af1a83e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8607,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 7401,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 7996,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 9418,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 9241,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 9379,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 9677,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 7763,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$729__to_t_address__fromStack_reversed": {
									"entryPoint": 7879,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7553,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_436b5627177a9781148596ddddd93f72d53dd82575a018216d5aaf2a8219ec9e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9196,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_56a253623294f4f4de6a9841388f033e113a22d6b37d1e786db69a7172923f8c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9647,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_bbbb4868217c0daeb6721d77d471da8aa8a80672b4258dd2de9d7ccde9bf2146__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9092,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e8788a811b2f03c33c54d190798bfa174d3e97deda56c09c1df2080dcc8d5158__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8537,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e8d3230d72418d9aed77f45ee412f45396c3f3cd599a1a457d8130d57af1a83e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8641,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 7416,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_address_t_uint256_t_address__to_t_uint256_t_address_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": 9506,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_contract$_IERC20_$729__to_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": 8175,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 8300,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 8011,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 7441,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 7451,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 8716,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 8877,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 8767,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 7616,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 7737,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IERC20_$729": {
									"entryPoint": 8036,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 7585,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 7270,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 7984,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$729_to_t_address": {
									"entryPoint": 7847,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 7830,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 7797,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 7467,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 8970,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 7788,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 8671,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 8832,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 8925,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 7266,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 7481,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_436b5627177a9781148596ddddd93f72d53dd82575a018216d5aaf2a8219ec9e": {
									"entryPoint": 9122,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_56a253623294f4f4de6a9841388f033e113a22d6b37d1e786db69a7172923f8c": {
									"entryPoint": 9573,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_bbbb4868217c0daeb6721d77d471da8aa8a80672b4258dd2de9d7ccde9bf2146": {
									"entryPoint": 9018,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e8788a811b2f03c33c54d190798bfa174d3e97deda56c09c1df2080dcc8d5158": {
									"entryPoint": 8463,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e8d3230d72418d9aed77f45ee412f45396c3f3cd599a1a457d8130d57af1a83e": {
									"entryPoint": 8567,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 7633,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 9294,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IERC20_$729": {
									"entryPoint": 8053,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 7279,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:19542:6",
										"nodeType": "YulBlock",
										"src": "0:19542:6",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:6",
													"nodeType": "YulBlock",
													"src": "47:35:6",
													"statements": [
														{
															"nativeSrc": "57:19:6",
															"nodeType": "YulAssignment",
															"src": "57:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:6",
																		"nodeType": "YulLiteral",
																		"src": "73:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:6"
																},
																"nativeSrc": "67:9:6",
																"nodeType": "YulFunctionCall",
																"src": "67:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:6",
														"nodeType": "YulTypedName",
														"src": "40:6:6",
														"type": ""
													}
												],
												"src": "7:75:6"
											},
											{
												"body": {
													"nativeSrc": "177:28:6",
													"nodeType": "YulBlock",
													"src": "177:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:6",
																		"nodeType": "YulLiteral",
																		"src": "194:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:6",
																		"nodeType": "YulLiteral",
																		"src": "197:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:6"
																},
																"nativeSrc": "187:12:6",
																"nodeType": "YulFunctionCall",
																"src": "187:12:6"
															},
															"nativeSrc": "187:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:6"
											},
											{
												"body": {
													"nativeSrc": "300:28:6",
													"nodeType": "YulBlock",
													"src": "300:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:6",
																		"nodeType": "YulLiteral",
																		"src": "317:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:6",
																		"nodeType": "YulLiteral",
																		"src": "320:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:6"
																},
																"nativeSrc": "310:12:6",
																"nodeType": "YulFunctionCall",
																"src": "310:12:6"
															},
															"nativeSrc": "310:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:6"
											},
											{
												"body": {
													"nativeSrc": "379:32:6",
													"nodeType": "YulBlock",
													"src": "379:32:6",
													"statements": [
														{
															"nativeSrc": "389:16:6",
															"nodeType": "YulAssignment",
															"src": "389:16:6",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:6",
																"nodeType": "YulIdentifier",
																"src": "400:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "334:77:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:6",
														"nodeType": "YulTypedName",
														"src": "361:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:6",
														"nodeType": "YulTypedName",
														"src": "371:7:6",
														"type": ""
													}
												],
												"src": "334:77:6"
											},
											{
												"body": {
													"nativeSrc": "460:79:6",
													"nodeType": "YulBlock",
													"src": "460:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:6",
																"nodeType": "YulBlock",
																"src": "517:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:6",
																					"nodeType": "YulLiteral",
																					"src": "526:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:6",
																					"nodeType": "YulLiteral",
																					"src": "529:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:6"
																			},
																			"nativeSrc": "519:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:6"
																		},
																		"nativeSrc": "519:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "490:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:6"
																				},
																				"nativeSrc": "490:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:6"
																		},
																		"nativeSrc": "480:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:6"
																},
																"nativeSrc": "473:43:6",
																"nodeType": "YulFunctionCall",
																"src": "473:43:6"
															},
															"nativeSrc": "470:63:6",
															"nodeType": "YulIf",
															"src": "470:63:6"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "417:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:6",
														"nodeType": "YulTypedName",
														"src": "453:5:6",
														"type": ""
													}
												],
												"src": "417:122:6"
											},
											{
												"body": {
													"nativeSrc": "597:87:6",
													"nodeType": "YulBlock",
													"src": "597:87:6",
													"statements": [
														{
															"nativeSrc": "607:29:6",
															"nodeType": "YulAssignment",
															"src": "607:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "629:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "616:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:6"
																},
																"nativeSrc": "616:20:6",
																"nodeType": "YulFunctionCall",
																"src": "616:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "607:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "672:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "645:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:6"
																},
																"nativeSrc": "645:33:6",
																"nodeType": "YulFunctionCall",
																"src": "645:33:6"
															},
															"nativeSrc": "645:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "645:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "545:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "575:6:6",
														"nodeType": "YulTypedName",
														"src": "575:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "583:3:6",
														"nodeType": "YulTypedName",
														"src": "583:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "591:5:6",
														"nodeType": "YulTypedName",
														"src": "591:5:6",
														"type": ""
													}
												],
												"src": "545:139:6"
											},
											{
												"body": {
													"nativeSrc": "790:519:6",
													"nodeType": "YulBlock",
													"src": "790:519:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "836:83:6",
																"nodeType": "YulBlock",
																"src": "836:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "838:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "838:77:6"
																			},
																			"nativeSrc": "838:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "838:79:6"
																		},
																		"nativeSrc": "838:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "838:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "811:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "811:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "820:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "820:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "807:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "807:3:6"
																		},
																		"nativeSrc": "807:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "807:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "832:2:6",
																		"nodeType": "YulLiteral",
																		"src": "832:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "803:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "803:3:6"
																},
																"nativeSrc": "803:32:6",
																"nodeType": "YulFunctionCall",
																"src": "803:32:6"
															},
															"nativeSrc": "800:119:6",
															"nodeType": "YulIf",
															"src": "800:119:6"
														},
														{
															"nativeSrc": "929:117:6",
															"nodeType": "YulBlock",
															"src": "929:117:6",
															"statements": [
																{
																	"nativeSrc": "944:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "944:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "958:1:6",
																		"nodeType": "YulLiteral",
																		"src": "958:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "948:6:6",
																			"nodeType": "YulTypedName",
																			"src": "948:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "973:63:6",
																	"nodeType": "YulAssignment",
																	"src": "973:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1008:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "1008:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1019:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1019:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1004:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1004:3:6"
																				},
																				"nativeSrc": "1004:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1004:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1028:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1028:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "983:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "983:20:6"
																		},
																		"nativeSrc": "983:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "983:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "973:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "973:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1056:118:6",
															"nodeType": "YulBlock",
															"src": "1056:118:6",
															"statements": [
																{
																	"nativeSrc": "1071:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1071:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1085:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1085:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1075:6:6",
																			"nodeType": "YulTypedName",
																			"src": "1075:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1101:63:6",
																	"nodeType": "YulAssignment",
																	"src": "1101:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1136:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "1136:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1147:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1147:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1132:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1132:3:6"
																				},
																				"nativeSrc": "1132:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1132:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1156:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1156:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1111:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "1111:20:6"
																		},
																		"nativeSrc": "1111:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1111:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1101:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1101:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1184:118:6",
															"nodeType": "YulBlock",
															"src": "1184:118:6",
															"statements": [
																{
																	"nativeSrc": "1199:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1199:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1213:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1213:2:6",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1203:6:6",
																			"nodeType": "YulTypedName",
																			"src": "1203:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1229:63:6",
																	"nodeType": "YulAssignment",
																	"src": "1229:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1264:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "1264:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1275:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1275:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1260:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1260:3:6"
																				},
																				"nativeSrc": "1260:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1260:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1284:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1284:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1239:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "1239:20:6"
																		},
																		"nativeSrc": "1239:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1239:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "1229:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1229:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_uint256",
												"nativeSrc": "690:619:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "744:9:6",
														"nodeType": "YulTypedName",
														"src": "744:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "755:7:6",
														"nodeType": "YulTypedName",
														"src": "755:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "767:6:6",
														"nodeType": "YulTypedName",
														"src": "767:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "775:6:6",
														"nodeType": "YulTypedName",
														"src": "775:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "783:6:6",
														"nodeType": "YulTypedName",
														"src": "783:6:6",
														"type": ""
													}
												],
												"src": "690:619:6"
											},
											{
												"body": {
													"nativeSrc": "1380:53:6",
													"nodeType": "YulBlock",
													"src": "1380:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1397:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1397:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1420:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "1420:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1402:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "1402:17:6"
																		},
																		"nativeSrc": "1402:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1402:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1390:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1390:6:6"
																},
																"nativeSrc": "1390:37:6",
																"nodeType": "YulFunctionCall",
																"src": "1390:37:6"
															},
															"nativeSrc": "1390:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "1390:37:6"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1315:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1368:5:6",
														"nodeType": "YulTypedName",
														"src": "1368:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1375:3:6",
														"nodeType": "YulTypedName",
														"src": "1375:3:6",
														"type": ""
													}
												],
												"src": "1315:118:6"
											},
											{
												"body": {
													"nativeSrc": "1537:124:6",
													"nodeType": "YulBlock",
													"src": "1537:124:6",
													"statements": [
														{
															"nativeSrc": "1547:26:6",
															"nodeType": "YulAssignment",
															"src": "1547:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1559:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1559:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1570:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1570:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1555:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1555:3:6"
																},
																"nativeSrc": "1555:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1555:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1547:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1547:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1627:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1627:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1640:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1640:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1651:1:6",
																				"nodeType": "YulLiteral",
																				"src": "1651:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1636:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1636:3:6"
																		},
																		"nativeSrc": "1636:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1636:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1583:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "1583:43:6"
																},
																"nativeSrc": "1583:71:6",
																"nodeType": "YulFunctionCall",
																"src": "1583:71:6"
															},
															"nativeSrc": "1583:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "1583:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1439:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1509:9:6",
														"nodeType": "YulTypedName",
														"src": "1509:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1521:6:6",
														"nodeType": "YulTypedName",
														"src": "1521:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1532:4:6",
														"nodeType": "YulTypedName",
														"src": "1532:4:6",
														"type": ""
													}
												],
												"src": "1439:222:6"
											},
											{
												"body": {
													"nativeSrc": "1726:40:6",
													"nodeType": "YulBlock",
													"src": "1726:40:6",
													"statements": [
														{
															"nativeSrc": "1737:22:6",
															"nodeType": "YulAssignment",
															"src": "1737:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1753:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1753:5:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1747:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1747:5:6"
																},
																"nativeSrc": "1747:12:6",
																"nodeType": "YulFunctionCall",
																"src": "1747:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1737:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1737:6:6"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1667:99:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1709:5:6",
														"nodeType": "YulTypedName",
														"src": "1709:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1719:6:6",
														"nodeType": "YulTypedName",
														"src": "1719:6:6",
														"type": ""
													}
												],
												"src": "1667:99:6"
											},
											{
												"body": {
													"nativeSrc": "1868:73:6",
													"nodeType": "YulBlock",
													"src": "1868:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1885:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1885:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1890:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1890:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1878:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1878:6:6"
																},
																"nativeSrc": "1878:19:6",
																"nodeType": "YulFunctionCall",
																"src": "1878:19:6"
															},
															"nativeSrc": "1878:19:6",
															"nodeType": "YulExpressionStatement",
															"src": "1878:19:6"
														},
														{
															"nativeSrc": "1906:29:6",
															"nodeType": "YulAssignment",
															"src": "1906:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1925:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1925:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1930:4:6",
																		"nodeType": "YulLiteral",
																		"src": "1930:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1921:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1921:3:6"
																},
																"nativeSrc": "1921:14:6",
																"nodeType": "YulFunctionCall",
																"src": "1921:14:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1906:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "1906:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1772:169:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1840:3:6",
														"nodeType": "YulTypedName",
														"src": "1840:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1845:6:6",
														"nodeType": "YulTypedName",
														"src": "1845:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1856:11:6",
														"nodeType": "YulTypedName",
														"src": "1856:11:6",
														"type": ""
													}
												],
												"src": "1772:169:6"
											},
											{
												"body": {
													"nativeSrc": "2009:77:6",
													"nodeType": "YulBlock",
													"src": "2009:77:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "2026:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2026:3:6"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "2031:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2031:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2036:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2036:6:6"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "2020:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2020:5:6"
																},
																"nativeSrc": "2020:23:6",
																"nodeType": "YulFunctionCall",
																"src": "2020:23:6"
															},
															"nativeSrc": "2020:23:6",
															"nodeType": "YulExpressionStatement",
															"src": "2020:23:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "2063:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "2063:3:6"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2068:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2068:6:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2059:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2059:3:6"
																		},
																		"nativeSrc": "2059:16:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2059:16:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2077:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2077:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2052:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2052:6:6"
																},
																"nativeSrc": "2052:27:6",
																"nodeType": "YulFunctionCall",
																"src": "2052:27:6"
															},
															"nativeSrc": "2052:27:6",
															"nodeType": "YulExpressionStatement",
															"src": "2052:27:6"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1947:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1991:3:6",
														"nodeType": "YulTypedName",
														"src": "1991:3:6",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1996:3:6",
														"nodeType": "YulTypedName",
														"src": "1996:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2001:6:6",
														"nodeType": "YulTypedName",
														"src": "2001:6:6",
														"type": ""
													}
												],
												"src": "1947:139:6"
											},
											{
												"body": {
													"nativeSrc": "2140:54:6",
													"nodeType": "YulBlock",
													"src": "2140:54:6",
													"statements": [
														{
															"nativeSrc": "2150:38:6",
															"nodeType": "YulAssignment",
															"src": "2150:38:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2168:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "2168:5:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2175:2:6",
																				"nodeType": "YulLiteral",
																				"src": "2175:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2164:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2164:3:6"
																		},
																		"nativeSrc": "2164:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2164:14:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2184:2:6",
																				"nodeType": "YulLiteral",
																				"src": "2184:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2180:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2180:3:6"
																		},
																		"nativeSrc": "2180:7:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2180:7:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2160:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2160:3:6"
																},
																"nativeSrc": "2160:28:6",
																"nodeType": "YulFunctionCall",
																"src": "2160:28:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2150:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2150:6:6"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "2092:102:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2123:5:6",
														"nodeType": "YulTypedName",
														"src": "2123:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2133:6:6",
														"nodeType": "YulTypedName",
														"src": "2133:6:6",
														"type": ""
													}
												],
												"src": "2092:102:6"
											},
											{
												"body": {
													"nativeSrc": "2292:285:6",
													"nodeType": "YulBlock",
													"src": "2292:285:6",
													"statements": [
														{
															"nativeSrc": "2302:53:6",
															"nodeType": "YulVariableDeclaration",
															"src": "2302:53:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2349:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2349:5:6"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "2316:32:6",
																	"nodeType": "YulIdentifier",
																	"src": "2316:32:6"
																},
																"nativeSrc": "2316:39:6",
																"nodeType": "YulFunctionCall",
																"src": "2316:39:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2306:6:6",
																	"nodeType": "YulTypedName",
																	"src": "2306:6:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2364:78:6",
															"nodeType": "YulAssignment",
															"src": "2364:78:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2430:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2430:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2435:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2435:6:6"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2371:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "2371:58:6"
																},
																"nativeSrc": "2371:71:6",
																"nodeType": "YulFunctionCall",
																"src": "2371:71:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2364:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2364:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2490:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "2490:5:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2497:4:6",
																				"nodeType": "YulLiteral",
																				"src": "2497:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2486:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2486:3:6"
																		},
																		"nativeSrc": "2486:16:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2486:16:6"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "2504:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2504:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2509:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2509:6:6"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2451:34:6",
																	"nodeType": "YulIdentifier",
																	"src": "2451:34:6"
																},
																"nativeSrc": "2451:65:6",
																"nodeType": "YulFunctionCall",
																"src": "2451:65:6"
															},
															"nativeSrc": "2451:65:6",
															"nodeType": "YulExpressionStatement",
															"src": "2451:65:6"
														},
														{
															"nativeSrc": "2525:46:6",
															"nodeType": "YulAssignment",
															"src": "2525:46:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2536:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2536:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2563:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2563:6:6"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "2541:21:6",
																			"nodeType": "YulIdentifier",
																			"src": "2541:21:6"
																		},
																		"nativeSrc": "2541:29:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2541:29:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2532:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2532:3:6"
																},
																"nativeSrc": "2532:39:6",
																"nodeType": "YulFunctionCall",
																"src": "2532:39:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2525:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2525:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2200:377:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2273:5:6",
														"nodeType": "YulTypedName",
														"src": "2273:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2280:3:6",
														"nodeType": "YulTypedName",
														"src": "2280:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2288:3:6",
														"nodeType": "YulTypedName",
														"src": "2288:3:6",
														"type": ""
													}
												],
												"src": "2200:377:6"
											},
											{
												"body": {
													"nativeSrc": "2701:195:6",
													"nodeType": "YulBlock",
													"src": "2701:195:6",
													"statements": [
														{
															"nativeSrc": "2711:26:6",
															"nodeType": "YulAssignment",
															"src": "2711:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2723:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2723:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2734:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2734:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2719:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2719:3:6"
																},
																"nativeSrc": "2719:18:6",
																"nodeType": "YulFunctionCall",
																"src": "2719:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2711:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "2711:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2758:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2758:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2769:1:6",
																				"nodeType": "YulLiteral",
																				"src": "2769:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2754:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2754:3:6"
																		},
																		"nativeSrc": "2754:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2754:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2777:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "2777:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2783:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2783:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2773:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2773:3:6"
																		},
																		"nativeSrc": "2773:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2773:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2747:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2747:6:6"
																},
																"nativeSrc": "2747:47:6",
																"nodeType": "YulFunctionCall",
																"src": "2747:47:6"
															},
															"nativeSrc": "2747:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "2747:47:6"
														},
														{
															"nativeSrc": "2803:86:6",
															"nodeType": "YulAssignment",
															"src": "2803:86:6",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2875:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2875:6:6"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "2884:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "2884:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2811:63:6",
																	"nodeType": "YulIdentifier",
																	"src": "2811:63:6"
																},
																"nativeSrc": "2811:78:6",
																"nodeType": "YulFunctionCall",
																"src": "2811:78:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2803:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "2803:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2583:313:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2673:9:6",
														"nodeType": "YulTypedName",
														"src": "2673:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2685:6:6",
														"nodeType": "YulTypedName",
														"src": "2685:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2696:4:6",
														"nodeType": "YulTypedName",
														"src": "2696:4:6",
														"type": ""
													}
												],
												"src": "2583:313:6"
											},
											{
												"body": {
													"nativeSrc": "2947:81:6",
													"nodeType": "YulBlock",
													"src": "2947:81:6",
													"statements": [
														{
															"nativeSrc": "2957:65:6",
															"nodeType": "YulAssignment",
															"src": "2957:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2972:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2972:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2979:42:6",
																		"nodeType": "YulLiteral",
																		"src": "2979:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2968:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2968:3:6"
																},
																"nativeSrc": "2968:54:6",
																"nodeType": "YulFunctionCall",
																"src": "2968:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2957:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "2957:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "2902:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2929:5:6",
														"nodeType": "YulTypedName",
														"src": "2929:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2939:7:6",
														"nodeType": "YulTypedName",
														"src": "2939:7:6",
														"type": ""
													}
												],
												"src": "2902:126:6"
											},
											{
												"body": {
													"nativeSrc": "3079:51:6",
													"nodeType": "YulBlock",
													"src": "3079:51:6",
													"statements": [
														{
															"nativeSrc": "3089:35:6",
															"nodeType": "YulAssignment",
															"src": "3089:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3118:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "3118:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3100:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "3100:17:6"
																},
																"nativeSrc": "3100:24:6",
																"nodeType": "YulFunctionCall",
																"src": "3100:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3089:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "3089:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "3034:96:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3061:5:6",
														"nodeType": "YulTypedName",
														"src": "3061:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3071:7:6",
														"nodeType": "YulTypedName",
														"src": "3071:7:6",
														"type": ""
													}
												],
												"src": "3034:96:6"
											},
											{
												"body": {
													"nativeSrc": "3179:79:6",
													"nodeType": "YulBlock",
													"src": "3179:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "3236:16:6",
																"nodeType": "YulBlock",
																"src": "3236:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3245:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3245:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3248:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3248:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3238:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3238:6:6"
																			},
																			"nativeSrc": "3238:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3238:12:6"
																		},
																		"nativeSrc": "3238:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3238:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3202:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "3202:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3227:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "3227:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "3209:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "3209:17:6"
																				},
																				"nativeSrc": "3209:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3209:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3199:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "3199:2:6"
																		},
																		"nativeSrc": "3199:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3199:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3192:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3192:6:6"
																},
																"nativeSrc": "3192:43:6",
																"nodeType": "YulFunctionCall",
																"src": "3192:43:6"
															},
															"nativeSrc": "3189:63:6",
															"nodeType": "YulIf",
															"src": "3189:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "3136:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3172:5:6",
														"nodeType": "YulTypedName",
														"src": "3172:5:6",
														"type": ""
													}
												],
												"src": "3136:122:6"
											},
											{
												"body": {
													"nativeSrc": "3316:87:6",
													"nodeType": "YulBlock",
													"src": "3316:87:6",
													"statements": [
														{
															"nativeSrc": "3326:29:6",
															"nodeType": "YulAssignment",
															"src": "3326:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3348:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3348:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3335:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "3335:12:6"
																},
																"nativeSrc": "3335:20:6",
																"nodeType": "YulFunctionCall",
																"src": "3335:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3326:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "3326:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3391:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "3391:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "3364:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "3364:26:6"
																},
																"nativeSrc": "3364:33:6",
																"nodeType": "YulFunctionCall",
																"src": "3364:33:6"
															},
															"nativeSrc": "3364:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "3364:33:6"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "3264:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3294:6:6",
														"nodeType": "YulTypedName",
														"src": "3294:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3302:3:6",
														"nodeType": "YulTypedName",
														"src": "3302:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3310:5:6",
														"nodeType": "YulTypedName",
														"src": "3310:5:6",
														"type": ""
													}
												],
												"src": "3264:139:6"
											},
											{
												"body": {
													"nativeSrc": "3492:391:6",
													"nodeType": "YulBlock",
													"src": "3492:391:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "3538:83:6",
																"nodeType": "YulBlock",
																"src": "3538:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3540:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "3540:77:6"
																			},
																			"nativeSrc": "3540:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3540:79:6"
																		},
																		"nativeSrc": "3540:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3540:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3513:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3513:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3522:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3522:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3509:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3509:3:6"
																		},
																		"nativeSrc": "3509:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3509:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3534:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3534:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3505:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3505:3:6"
																},
																"nativeSrc": "3505:32:6",
																"nodeType": "YulFunctionCall",
																"src": "3505:32:6"
															},
															"nativeSrc": "3502:119:6",
															"nodeType": "YulIf",
															"src": "3502:119:6"
														},
														{
															"nativeSrc": "3631:117:6",
															"nodeType": "YulBlock",
															"src": "3631:117:6",
															"statements": [
																{
																	"nativeSrc": "3646:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3646:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3660:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3660:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3650:6:6",
																			"nodeType": "YulTypedName",
																			"src": "3650:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3675:63:6",
																	"nodeType": "YulAssignment",
																	"src": "3675:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3710:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "3710:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3721:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "3721:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3706:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3706:3:6"
																				},
																				"nativeSrc": "3706:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3706:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3730:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3730:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3685:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "3685:20:6"
																		},
																		"nativeSrc": "3685:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3685:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3675:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "3675:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3758:118:6",
															"nodeType": "YulBlock",
															"src": "3758:118:6",
															"statements": [
																{
																	"nativeSrc": "3773:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3773:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3787:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3787:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3777:6:6",
																			"nodeType": "YulTypedName",
																			"src": "3777:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3803:63:6",
																	"nodeType": "YulAssignment",
																	"src": "3803:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3838:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "3838:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3849:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "3849:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3834:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3834:3:6"
																				},
																				"nativeSrc": "3834:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3834:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3858:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3858:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3813:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "3813:20:6"
																		},
																		"nativeSrc": "3813:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3813:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3803:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "3803:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "3409:474:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3454:9:6",
														"nodeType": "YulTypedName",
														"src": "3454:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3465:7:6",
														"nodeType": "YulTypedName",
														"src": "3465:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3477:6:6",
														"nodeType": "YulTypedName",
														"src": "3477:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3485:6:6",
														"nodeType": "YulTypedName",
														"src": "3485:6:6",
														"type": ""
													}
												],
												"src": "3409:474:6"
											},
											{
												"body": {
													"nativeSrc": "3931:48:6",
													"nodeType": "YulBlock",
													"src": "3931:48:6",
													"statements": [
														{
															"nativeSrc": "3941:32:6",
															"nodeType": "YulAssignment",
															"src": "3941:32:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3966:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "3966:5:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "3959:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "3959:6:6"
																		},
																		"nativeSrc": "3959:13:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3959:13:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3952:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3952:6:6"
																},
																"nativeSrc": "3952:21:6",
																"nodeType": "YulFunctionCall",
																"src": "3952:21:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3941:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "3941:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "3889:90:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3913:5:6",
														"nodeType": "YulTypedName",
														"src": "3913:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3923:7:6",
														"nodeType": "YulTypedName",
														"src": "3923:7:6",
														"type": ""
													}
												],
												"src": "3889:90:6"
											},
											{
												"body": {
													"nativeSrc": "4044:50:6",
													"nodeType": "YulBlock",
													"src": "4044:50:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4061:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "4061:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4081:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "4081:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "4066:14:6",
																			"nodeType": "YulIdentifier",
																			"src": "4066:14:6"
																		},
																		"nativeSrc": "4066:21:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4066:21:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4054:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4054:6:6"
																},
																"nativeSrc": "4054:34:6",
																"nodeType": "YulFunctionCall",
																"src": "4054:34:6"
															},
															"nativeSrc": "4054:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "4054:34:6"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3985:109:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4032:5:6",
														"nodeType": "YulTypedName",
														"src": "4032:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4039:3:6",
														"nodeType": "YulTypedName",
														"src": "4039:3:6",
														"type": ""
													}
												],
												"src": "3985:109:6"
											},
											{
												"body": {
													"nativeSrc": "4192:118:6",
													"nodeType": "YulBlock",
													"src": "4192:118:6",
													"statements": [
														{
															"nativeSrc": "4202:26:6",
															"nodeType": "YulAssignment",
															"src": "4202:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4214:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4214:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4225:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4225:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4210:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4210:3:6"
																},
																"nativeSrc": "4210:18:6",
																"nodeType": "YulFunctionCall",
																"src": "4210:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4202:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4202:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4276:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "4276:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4289:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4289:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4300:1:6",
																				"nodeType": "YulLiteral",
																				"src": "4300:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4285:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4285:3:6"
																		},
																		"nativeSrc": "4285:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4285:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "4238:37:6",
																	"nodeType": "YulIdentifier",
																	"src": "4238:37:6"
																},
																"nativeSrc": "4238:65:6",
																"nodeType": "YulFunctionCall",
																"src": "4238:65:6"
															},
															"nativeSrc": "4238:65:6",
															"nodeType": "YulExpressionStatement",
															"src": "4238:65:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "4100:210:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4164:9:6",
														"nodeType": "YulTypedName",
														"src": "4164:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4176:6:6",
														"nodeType": "YulTypedName",
														"src": "4176:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4187:4:6",
														"nodeType": "YulTypedName",
														"src": "4187:4:6",
														"type": ""
													}
												],
												"src": "4100:210:6"
											},
											{
												"body": {
													"nativeSrc": "4348:28:6",
													"nodeType": "YulBlock",
													"src": "4348:28:6",
													"statements": [
														{
															"nativeSrc": "4358:12:6",
															"nodeType": "YulAssignment",
															"src": "4358:12:6",
															"value": {
																"name": "value",
																"nativeSrc": "4365:5:6",
																"nodeType": "YulIdentifier",
																"src": "4365:5:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "4358:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4358:3:6"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "4316:60:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4334:5:6",
														"nodeType": "YulTypedName",
														"src": "4334:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "4344:3:6",
														"nodeType": "YulTypedName",
														"src": "4344:3:6",
														"type": ""
													}
												],
												"src": "4316:60:6"
											},
											{
												"body": {
													"nativeSrc": "4442:82:6",
													"nodeType": "YulBlock",
													"src": "4442:82:6",
													"statements": [
														{
															"nativeSrc": "4452:66:6",
															"nodeType": "YulAssignment",
															"src": "4452:66:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4510:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "4510:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "4492:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "4492:17:6"
																				},
																				"nativeSrc": "4492:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4492:24:6"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "4483:8:6",
																			"nodeType": "YulIdentifier",
																			"src": "4483:8:6"
																		},
																		"nativeSrc": "4483:34:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4483:34:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "4465:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "4465:17:6"
																},
																"nativeSrc": "4465:53:6",
																"nodeType": "YulFunctionCall",
																"src": "4465:53:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "4452:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "4452:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "4382:142:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4422:5:6",
														"nodeType": "YulTypedName",
														"src": "4422:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "4432:9:6",
														"nodeType": "YulTypedName",
														"src": "4432:9:6",
														"type": ""
													}
												],
												"src": "4382:142:6"
											},
											{
												"body": {
													"nativeSrc": "4590:66:6",
													"nodeType": "YulBlock",
													"src": "4590:66:6",
													"statements": [
														{
															"nativeSrc": "4600:50:6",
															"nodeType": "YulAssignment",
															"src": "4600:50:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4644:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "4644:5:6"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "4613:30:6",
																	"nodeType": "YulIdentifier",
																	"src": "4613:30:6"
																},
																"nativeSrc": "4613:37:6",
																"nodeType": "YulFunctionCall",
																"src": "4613:37:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "4600:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "4600:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "4530:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4570:5:6",
														"nodeType": "YulTypedName",
														"src": "4570:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "4580:9:6",
														"nodeType": "YulTypedName",
														"src": "4580:9:6",
														"type": ""
													}
												],
												"src": "4530:126:6"
											},
											{
												"body": {
													"nativeSrc": "4736:66:6",
													"nodeType": "YulBlock",
													"src": "4736:66:6",
													"statements": [
														{
															"nativeSrc": "4746:50:6",
															"nodeType": "YulAssignment",
															"src": "4746:50:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4790:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "4790:5:6"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "4759:30:6",
																	"nodeType": "YulIdentifier",
																	"src": "4759:30:6"
																},
																"nativeSrc": "4759:37:6",
																"nodeType": "YulFunctionCall",
																"src": "4759:37:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "4746:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "4746:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$729_to_t_address",
												"nativeSrc": "4662:140:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4716:5:6",
														"nodeType": "YulTypedName",
														"src": "4716:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "4726:9:6",
														"nodeType": "YulTypedName",
														"src": "4726:9:6",
														"type": ""
													}
												],
												"src": "4662:140:6"
											},
											{
												"body": {
													"nativeSrc": "4887:80:6",
													"nodeType": "YulBlock",
													"src": "4887:80:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4904:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "4904:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4954:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "4954:5:6"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$729_to_t_address",
																			"nativeSrc": "4909:44:6",
																			"nodeType": "YulIdentifier",
																			"src": "4909:44:6"
																		},
																		"nativeSrc": "4909:51:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4909:51:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4897:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4897:6:6"
																},
																"nativeSrc": "4897:64:6",
																"nodeType": "YulFunctionCall",
																"src": "4897:64:6"
															},
															"nativeSrc": "4897:64:6",
															"nodeType": "YulExpressionStatement",
															"src": "4897:64:6"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$729_to_t_address_fromStack",
												"nativeSrc": "4808:159:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4875:5:6",
														"nodeType": "YulTypedName",
														"src": "4875:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4882:3:6",
														"nodeType": "YulTypedName",
														"src": "4882:3:6",
														"type": ""
													}
												],
												"src": "4808:159:6"
											},
											{
												"body": {
													"nativeSrc": "5085:138:6",
													"nodeType": "YulBlock",
													"src": "5085:138:6",
													"statements": [
														{
															"nativeSrc": "5095:26:6",
															"nodeType": "YulAssignment",
															"src": "5095:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5107:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5107:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5118:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5118:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5103:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5103:3:6"
																},
																"nativeSrc": "5103:18:6",
																"nodeType": "YulFunctionCall",
																"src": "5103:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5095:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5095:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5189:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5189:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5202:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5202:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5213:1:6",
																				"nodeType": "YulLiteral",
																				"src": "5213:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5198:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5198:3:6"
																		},
																		"nativeSrc": "5198:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5198:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$729_to_t_address_fromStack",
																	"nativeSrc": "5131:57:6",
																	"nodeType": "YulIdentifier",
																	"src": "5131:57:6"
																},
																"nativeSrc": "5131:85:6",
																"nodeType": "YulFunctionCall",
																"src": "5131:85:6"
															},
															"nativeSrc": "5131:85:6",
															"nodeType": "YulExpressionStatement",
															"src": "5131:85:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$729__to_t_address__fromStack_reversed",
												"nativeSrc": "4973:250:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5057:9:6",
														"nodeType": "YulTypedName",
														"src": "5057:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5069:6:6",
														"nodeType": "YulTypedName",
														"src": "5069:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5080:4:6",
														"nodeType": "YulTypedName",
														"src": "5080:4:6",
														"type": ""
													}
												],
												"src": "4973:250:6"
											},
											{
												"body": {
													"nativeSrc": "5329:519:6",
													"nodeType": "YulBlock",
													"src": "5329:519:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "5375:83:6",
																"nodeType": "YulBlock",
																"src": "5375:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5377:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "5377:77:6"
																			},
																			"nativeSrc": "5377:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5377:79:6"
																		},
																		"nativeSrc": "5377:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "5377:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5350:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "5350:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5359:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5359:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5346:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5346:3:6"
																		},
																		"nativeSrc": "5346:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5346:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5371:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5371:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5342:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5342:3:6"
																},
																"nativeSrc": "5342:32:6",
																"nodeType": "YulFunctionCall",
																"src": "5342:32:6"
															},
															"nativeSrc": "5339:119:6",
															"nodeType": "YulIf",
															"src": "5339:119:6"
														},
														{
															"nativeSrc": "5468:117:6",
															"nodeType": "YulBlock",
															"src": "5468:117:6",
															"statements": [
																{
																	"nativeSrc": "5483:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5483:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5497:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5497:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5487:6:6",
																			"nodeType": "YulTypedName",
																			"src": "5487:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5512:63:6",
																	"nodeType": "YulAssignment",
																	"src": "5512:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5547:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "5547:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5558:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "5558:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5543:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "5543:3:6"
																				},
																				"nativeSrc": "5543:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5543:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5567:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "5567:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5522:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "5522:20:6"
																		},
																		"nativeSrc": "5522:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5522:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5512:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "5512:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5595:118:6",
															"nodeType": "YulBlock",
															"src": "5595:118:6",
															"statements": [
																{
																	"nativeSrc": "5610:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5610:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5624:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5624:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5614:6:6",
																			"nodeType": "YulTypedName",
																			"src": "5614:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5640:63:6",
																	"nodeType": "YulAssignment",
																	"src": "5640:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5675:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "5675:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5686:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "5686:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5671:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "5671:3:6"
																				},
																				"nativeSrc": "5671:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5671:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5695:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "5695:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5650:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "5650:20:6"
																		},
																		"nativeSrc": "5650:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5650:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5640:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "5640:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5723:118:6",
															"nodeType": "YulBlock",
															"src": "5723:118:6",
															"statements": [
																{
																	"nativeSrc": "5738:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5738:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5752:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5752:2:6",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5742:6:6",
																			"nodeType": "YulTypedName",
																			"src": "5742:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5768:63:6",
																	"nodeType": "YulAssignment",
																	"src": "5768:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5803:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "5803:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5814:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "5814:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5799:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "5799:3:6"
																				},
																				"nativeSrc": "5799:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5799:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5823:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "5823:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5778:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "5778:20:6"
																		},
																		"nativeSrc": "5778:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5778:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "5768:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "5768:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "5229:619:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5283:9:6",
														"nodeType": "YulTypedName",
														"src": "5283:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5294:7:6",
														"nodeType": "YulTypedName",
														"src": "5294:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5306:6:6",
														"nodeType": "YulTypedName",
														"src": "5306:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5314:6:6",
														"nodeType": "YulTypedName",
														"src": "5314:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5322:6:6",
														"nodeType": "YulTypedName",
														"src": "5322:6:6",
														"type": ""
													}
												],
												"src": "5229:619:6"
											},
											{
												"body": {
													"nativeSrc": "5897:43:6",
													"nodeType": "YulBlock",
													"src": "5897:43:6",
													"statements": [
														{
															"nativeSrc": "5907:27:6",
															"nodeType": "YulAssignment",
															"src": "5907:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5922:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "5922:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5929:4:6",
																		"nodeType": "YulLiteral",
																		"src": "5929:4:6",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5918:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5918:3:6"
																},
																"nativeSrc": "5918:16:6",
																"nodeType": "YulFunctionCall",
																"src": "5918:16:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5907:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "5907:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "5854:86:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5879:5:6",
														"nodeType": "YulTypedName",
														"src": "5879:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5889:7:6",
														"nodeType": "YulTypedName",
														"src": "5889:7:6",
														"type": ""
													}
												],
												"src": "5854:86:6"
											},
											{
												"body": {
													"nativeSrc": "6007:51:6",
													"nodeType": "YulBlock",
													"src": "6007:51:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6024:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6024:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6045:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "6045:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "6029:15:6",
																			"nodeType": "YulIdentifier",
																			"src": "6029:15:6"
																		},
																		"nativeSrc": "6029:22:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6029:22:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6017:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6017:6:6"
																},
																"nativeSrc": "6017:35:6",
																"nodeType": "YulFunctionCall",
																"src": "6017:35:6"
															},
															"nativeSrc": "6017:35:6",
															"nodeType": "YulExpressionStatement",
															"src": "6017:35:6"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "5946:112:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5995:5:6",
														"nodeType": "YulTypedName",
														"src": "5995:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6002:3:6",
														"nodeType": "YulTypedName",
														"src": "6002:3:6",
														"type": ""
													}
												],
												"src": "5946:112:6"
											},
											{
												"body": {
													"nativeSrc": "6158:120:6",
													"nodeType": "YulBlock",
													"src": "6158:120:6",
													"statements": [
														{
															"nativeSrc": "6168:26:6",
															"nodeType": "YulAssignment",
															"src": "6168:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6180:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "6180:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6191:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6191:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6176:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6176:3:6"
																},
																"nativeSrc": "6176:18:6",
																"nodeType": "YulFunctionCall",
																"src": "6176:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6168:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "6168:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6244:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6244:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6257:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6257:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6268:1:6",
																				"nodeType": "YulLiteral",
																				"src": "6268:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6253:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6253:3:6"
																		},
																		"nativeSrc": "6253:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6253:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "6204:39:6",
																	"nodeType": "YulIdentifier",
																	"src": "6204:39:6"
																},
																"nativeSrc": "6204:67:6",
																"nodeType": "YulFunctionCall",
																"src": "6204:67:6"
															},
															"nativeSrc": "6204:67:6",
															"nodeType": "YulExpressionStatement",
															"src": "6204:67:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "6064:214:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6130:9:6",
														"nodeType": "YulTypedName",
														"src": "6130:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6142:6:6",
														"nodeType": "YulTypedName",
														"src": "6142:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6153:4:6",
														"nodeType": "YulTypedName",
														"src": "6153:4:6",
														"type": ""
													}
												],
												"src": "6064:214:6"
											},
											{
												"body": {
													"nativeSrc": "6343:51:6",
													"nodeType": "YulBlock",
													"src": "6343:51:6",
													"statements": [
														{
															"nativeSrc": "6353:35:6",
															"nodeType": "YulAssignment",
															"src": "6353:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6382:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "6382:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nativeSrc": "6364:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "6364:17:6"
																},
																"nativeSrc": "6364:24:6",
																"nodeType": "YulFunctionCall",
																"src": "6364:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "6353:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "6353:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IERC20_$729",
												"nativeSrc": "6284:110:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6325:5:6",
														"nodeType": "YulTypedName",
														"src": "6325:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "6335:7:6",
														"nodeType": "YulTypedName",
														"src": "6335:7:6",
														"type": ""
													}
												],
												"src": "6284:110:6"
											},
											{
												"body": {
													"nativeSrc": "6457:93:6",
													"nodeType": "YulBlock",
													"src": "6457:93:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "6528:16:6",
																"nodeType": "YulBlock",
																"src": "6528:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6537:1:6",
																					"nodeType": "YulLiteral",
																					"src": "6537:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6540:1:6",
																					"nodeType": "YulLiteral",
																					"src": "6540:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6530:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "6530:6:6"
																			},
																			"nativeSrc": "6530:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6530:12:6"
																		},
																		"nativeSrc": "6530:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "6530:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6480:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "6480:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6519:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "6519:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IERC20_$729",
																					"nativeSrc": "6487:31:6",
																					"nodeType": "YulIdentifier",
																					"src": "6487:31:6"
																				},
																				"nativeSrc": "6487:38:6",
																				"nodeType": "YulFunctionCall",
																				"src": "6487:38:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "6477:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "6477:2:6"
																		},
																		"nativeSrc": "6477:49:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6477:49:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6470:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6470:6:6"
																},
																"nativeSrc": "6470:57:6",
																"nodeType": "YulFunctionCall",
																"src": "6470:57:6"
															},
															"nativeSrc": "6467:77:6",
															"nodeType": "YulIf",
															"src": "6467:77:6"
														}
													]
												},
												"name": "validator_revert_t_contract$_IERC20_$729",
												"nativeSrc": "6400:150:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6450:5:6",
														"nodeType": "YulTypedName",
														"src": "6450:5:6",
														"type": ""
													}
												],
												"src": "6400:150:6"
											},
											{
												"body": {
													"nativeSrc": "6622:101:6",
													"nodeType": "YulBlock",
													"src": "6622:101:6",
													"statements": [
														{
															"nativeSrc": "6632:29:6",
															"nodeType": "YulAssignment",
															"src": "6632:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6654:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6654:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6641:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "6641:12:6"
																},
																"nativeSrc": "6641:20:6",
																"nodeType": "YulFunctionCall",
																"src": "6641:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6632:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "6632:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6711:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "6711:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC20_$729",
																	"nativeSrc": "6670:40:6",
																	"nodeType": "YulIdentifier",
																	"src": "6670:40:6"
																},
																"nativeSrc": "6670:47:6",
																"nodeType": "YulFunctionCall",
																"src": "6670:47:6"
															},
															"nativeSrc": "6670:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "6670:47:6"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC20_$729",
												"nativeSrc": "6556:167:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6600:6:6",
														"nodeType": "YulTypedName",
														"src": "6600:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6608:3:6",
														"nodeType": "YulTypedName",
														"src": "6608:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "6616:5:6",
														"nodeType": "YulTypedName",
														"src": "6616:5:6",
														"type": ""
													}
												],
												"src": "6556:167:6"
											},
											{
												"body": {
													"nativeSrc": "6843:533:6",
													"nodeType": "YulBlock",
													"src": "6843:533:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "6889:83:6",
																"nodeType": "YulBlock",
																"src": "6889:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6891:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "6891:77:6"
																			},
																			"nativeSrc": "6891:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6891:79:6"
																		},
																		"nativeSrc": "6891:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "6891:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6864:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "6864:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6873:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6873:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6860:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6860:3:6"
																		},
																		"nativeSrc": "6860:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6860:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6885:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6885:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6856:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6856:3:6"
																},
																"nativeSrc": "6856:32:6",
																"nodeType": "YulFunctionCall",
																"src": "6856:32:6"
															},
															"nativeSrc": "6853:119:6",
															"nodeType": "YulIf",
															"src": "6853:119:6"
														},
														{
															"nativeSrc": "6982:117:6",
															"nodeType": "YulBlock",
															"src": "6982:117:6",
															"statements": [
																{
																	"nativeSrc": "6997:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6997:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7011:1:6",
																		"nodeType": "YulLiteral",
																		"src": "7011:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7001:6:6",
																			"nodeType": "YulTypedName",
																			"src": "7001:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7026:63:6",
																	"nodeType": "YulAssignment",
																	"src": "7026:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7061:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "7061:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7072:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "7072:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7057:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "7057:3:6"
																				},
																				"nativeSrc": "7057:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "7057:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7081:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "7081:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "7036:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "7036:20:6"
																		},
																		"nativeSrc": "7036:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7036:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7026:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "7026:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7109:132:6",
															"nodeType": "YulBlock",
															"src": "7109:132:6",
															"statements": [
																{
																	"nativeSrc": "7124:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7124:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7138:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7138:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7128:6:6",
																			"nodeType": "YulTypedName",
																			"src": "7128:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7154:77:6",
																	"nodeType": "YulAssignment",
																	"src": "7154:77:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7203:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "7203:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7214:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "7214:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7199:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "7199:3:6"
																				},
																				"nativeSrc": "7199:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "7199:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7223:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "7223:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC20_$729",
																			"nativeSrc": "7164:34:6",
																			"nodeType": "YulIdentifier",
																			"src": "7164:34:6"
																		},
																		"nativeSrc": "7164:67:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7164:67:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "7154:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "7154:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7251:118:6",
															"nodeType": "YulBlock",
															"src": "7251:118:6",
															"statements": [
																{
																	"nativeSrc": "7266:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7266:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7280:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7280:2:6",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7270:6:6",
																			"nodeType": "YulTypedName",
																			"src": "7270:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7296:63:6",
																	"nodeType": "YulAssignment",
																	"src": "7296:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7331:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "7331:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7342:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "7342:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7327:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "7327:3:6"
																				},
																				"nativeSrc": "7327:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "7327:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7351:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "7351:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "7306:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "7306:20:6"
																		},
																		"nativeSrc": "7306:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7306:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "7296:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "7296:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_contract$_IERC20_$729t_uint256",
												"nativeSrc": "6729:647:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6797:9:6",
														"nodeType": "YulTypedName",
														"src": "6797:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6808:7:6",
														"nodeType": "YulTypedName",
														"src": "6808:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6820:6:6",
														"nodeType": "YulTypedName",
														"src": "6820:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6828:6:6",
														"nodeType": "YulTypedName",
														"src": "6828:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6836:6:6",
														"nodeType": "YulTypedName",
														"src": "6836:6:6",
														"type": ""
													}
												],
												"src": "6729:647:6"
											},
											{
												"body": {
													"nativeSrc": "7522:220:6",
													"nodeType": "YulBlock",
													"src": "7522:220:6",
													"statements": [
														{
															"nativeSrc": "7532:26:6",
															"nodeType": "YulAssignment",
															"src": "7532:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7544:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "7544:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7555:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7555:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7540:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7540:3:6"
																},
																"nativeSrc": "7540:18:6",
																"nodeType": "YulFunctionCall",
																"src": "7540:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7532:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "7532:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7612:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "7612:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7625:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7625:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7636:1:6",
																				"nodeType": "YulLiteral",
																				"src": "7636:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7621:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7621:3:6"
																		},
																		"nativeSrc": "7621:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7621:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7568:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "7568:43:6"
																},
																"nativeSrc": "7568:71:6",
																"nodeType": "YulFunctionCall",
																"src": "7568:71:6"
															},
															"nativeSrc": "7568:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "7568:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "7707:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "7707:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7720:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7720:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7731:2:6",
																				"nodeType": "YulLiteral",
																				"src": "7731:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7716:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7716:3:6"
																		},
																		"nativeSrc": "7716:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7716:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$729_to_t_address_fromStack",
																	"nativeSrc": "7649:57:6",
																	"nodeType": "YulIdentifier",
																	"src": "7649:57:6"
																},
																"nativeSrc": "7649:86:6",
																"nodeType": "YulFunctionCall",
																"src": "7649:86:6"
															},
															"nativeSrc": "7649:86:6",
															"nodeType": "YulExpressionStatement",
															"src": "7649:86:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_contract$_IERC20_$729__to_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "7382:360:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7486:9:6",
														"nodeType": "YulTypedName",
														"src": "7486:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7498:6:6",
														"nodeType": "YulTypedName",
														"src": "7498:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7506:6:6",
														"nodeType": "YulTypedName",
														"src": "7506:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7517:4:6",
														"nodeType": "YulTypedName",
														"src": "7517:4:6",
														"type": ""
													}
												],
												"src": "7382:360:6"
											},
											{
												"body": {
													"nativeSrc": "7814:263:6",
													"nodeType": "YulBlock",
													"src": "7814:263:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "7860:83:6",
																"nodeType": "YulBlock",
																"src": "7860:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7862:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "7862:77:6"
																			},
																			"nativeSrc": "7862:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "7862:79:6"
																		},
																		"nativeSrc": "7862:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "7862:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7835:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "7835:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7844:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7844:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7831:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7831:3:6"
																		},
																		"nativeSrc": "7831:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7831:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7856:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7856:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7827:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7827:3:6"
																},
																"nativeSrc": "7827:32:6",
																"nodeType": "YulFunctionCall",
																"src": "7827:32:6"
															},
															"nativeSrc": "7824:119:6",
															"nodeType": "YulIf",
															"src": "7824:119:6"
														},
														{
															"nativeSrc": "7953:117:6",
															"nodeType": "YulBlock",
															"src": "7953:117:6",
															"statements": [
																{
																	"nativeSrc": "7968:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7968:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7982:1:6",
																		"nodeType": "YulLiteral",
																		"src": "7982:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7972:6:6",
																			"nodeType": "YulTypedName",
																			"src": "7972:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7997:63:6",
																	"nodeType": "YulAssignment",
																	"src": "7997:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8032:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "8032:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8043:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "8043:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8028:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "8028:3:6"
																				},
																				"nativeSrc": "8028:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "8028:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8052:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "8052:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "8007:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "8007:20:6"
																		},
																		"nativeSrc": "8007:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8007:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7997:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "7997:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "7748:329:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7784:9:6",
														"nodeType": "YulTypedName",
														"src": "7784:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7795:7:6",
														"nodeType": "YulTypedName",
														"src": "7795:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7807:6:6",
														"nodeType": "YulTypedName",
														"src": "7807:6:6",
														"type": ""
													}
												],
												"src": "7748:329:6"
											},
											{
												"body": {
													"nativeSrc": "8149:263:6",
													"nodeType": "YulBlock",
													"src": "8149:263:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "8195:83:6",
																"nodeType": "YulBlock",
																"src": "8195:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8197:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "8197:77:6"
																			},
																			"nativeSrc": "8197:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8197:79:6"
																		},
																		"nativeSrc": "8197:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "8197:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8170:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "8170:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8179:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "8179:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8166:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8166:3:6"
																		},
																		"nativeSrc": "8166:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8166:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8191:2:6",
																		"nodeType": "YulLiteral",
																		"src": "8191:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8162:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8162:3:6"
																},
																"nativeSrc": "8162:32:6",
																"nodeType": "YulFunctionCall",
																"src": "8162:32:6"
															},
															"nativeSrc": "8159:119:6",
															"nodeType": "YulIf",
															"src": "8159:119:6"
														},
														{
															"nativeSrc": "8288:117:6",
															"nodeType": "YulBlock",
															"src": "8288:117:6",
															"statements": [
																{
																	"nativeSrc": "8303:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8303:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8317:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8317:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8307:6:6",
																			"nodeType": "YulTypedName",
																			"src": "8307:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8332:63:6",
																	"nodeType": "YulAssignment",
																	"src": "8332:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8367:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "8367:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8378:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "8378:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8363:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "8363:3:6"
																				},
																				"nativeSrc": "8363:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "8363:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8387:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "8387:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "8342:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "8342:20:6"
																		},
																		"nativeSrc": "8342:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8342:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8332:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "8332:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "8083:329:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8119:9:6",
														"nodeType": "YulTypedName",
														"src": "8119:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8130:7:6",
														"nodeType": "YulTypedName",
														"src": "8130:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8142:6:6",
														"nodeType": "YulTypedName",
														"src": "8142:6:6",
														"type": ""
													}
												],
												"src": "8083:329:6"
											},
											{
												"body": {
													"nativeSrc": "8544:206:6",
													"nodeType": "YulBlock",
													"src": "8544:206:6",
													"statements": [
														{
															"nativeSrc": "8554:26:6",
															"nodeType": "YulAssignment",
															"src": "8554:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8566:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "8566:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8577:2:6",
																		"nodeType": "YulLiteral",
																		"src": "8577:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8562:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8562:3:6"
																},
																"nativeSrc": "8562:18:6",
																"nodeType": "YulFunctionCall",
																"src": "8562:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8554:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "8554:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8634:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "8634:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8647:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "8647:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8658:1:6",
																				"nodeType": "YulLiteral",
																				"src": "8658:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8643:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8643:3:6"
																		},
																		"nativeSrc": "8643:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8643:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8590:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "8590:43:6"
																},
																"nativeSrc": "8590:71:6",
																"nodeType": "YulFunctionCall",
																"src": "8590:71:6"
															},
															"nativeSrc": "8590:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "8590:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "8715:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "8715:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8728:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "8728:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8739:2:6",
																				"nodeType": "YulLiteral",
																				"src": "8739:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8724:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8724:3:6"
																		},
																		"nativeSrc": "8724:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8724:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8671:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "8671:43:6"
																},
																"nativeSrc": "8671:72:6",
																"nodeType": "YulFunctionCall",
																"src": "8671:72:6"
															},
															"nativeSrc": "8671:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "8671:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "8418:332:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8508:9:6",
														"nodeType": "YulTypedName",
														"src": "8508:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8520:6:6",
														"nodeType": "YulTypedName",
														"src": "8520:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8528:6:6",
														"nodeType": "YulTypedName",
														"src": "8528:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8539:4:6",
														"nodeType": "YulTypedName",
														"src": "8539:4:6",
														"type": ""
													}
												],
												"src": "8418:332:6"
											},
											{
												"body": {
													"nativeSrc": "8839:391:6",
													"nodeType": "YulBlock",
													"src": "8839:391:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "8885:83:6",
																"nodeType": "YulBlock",
																"src": "8885:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8887:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "8887:77:6"
																			},
																			"nativeSrc": "8887:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8887:79:6"
																		},
																		"nativeSrc": "8887:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "8887:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8860:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "8860:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8869:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "8869:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8856:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8856:3:6"
																		},
																		"nativeSrc": "8856:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8856:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8881:2:6",
																		"nodeType": "YulLiteral",
																		"src": "8881:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8852:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8852:3:6"
																},
																"nativeSrc": "8852:32:6",
																"nodeType": "YulFunctionCall",
																"src": "8852:32:6"
															},
															"nativeSrc": "8849:119:6",
															"nodeType": "YulIf",
															"src": "8849:119:6"
														},
														{
															"nativeSrc": "8978:117:6",
															"nodeType": "YulBlock",
															"src": "8978:117:6",
															"statements": [
																{
																	"nativeSrc": "8993:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8993:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9007:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9007:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8997:6:6",
																			"nodeType": "YulTypedName",
																			"src": "8997:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9022:63:6",
																	"nodeType": "YulAssignment",
																	"src": "9022:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9057:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "9057:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9068:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "9068:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9053:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "9053:3:6"
																				},
																				"nativeSrc": "9053:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "9053:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9077:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "9077:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "9032:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "9032:20:6"
																		},
																		"nativeSrc": "9032:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9032:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9022:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "9022:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9105:118:6",
															"nodeType": "YulBlock",
															"src": "9105:118:6",
															"statements": [
																{
																	"nativeSrc": "9120:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9120:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9134:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9134:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9124:6:6",
																			"nodeType": "YulTypedName",
																			"src": "9124:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9150:63:6",
																	"nodeType": "YulAssignment",
																	"src": "9150:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9185:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "9185:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9196:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "9196:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9181:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "9181:3:6"
																				},
																				"nativeSrc": "9181:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "9181:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9205:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "9205:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "9160:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "9160:20:6"
																		},
																		"nativeSrc": "9160:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9160:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "9150:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "9150:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "8756:474:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8801:9:6",
														"nodeType": "YulTypedName",
														"src": "8801:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8812:7:6",
														"nodeType": "YulTypedName",
														"src": "8812:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8824:6:6",
														"nodeType": "YulTypedName",
														"src": "8824:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8832:6:6",
														"nodeType": "YulTypedName",
														"src": "8832:6:6",
														"type": ""
													}
												],
												"src": "8756:474:6"
											},
											{
												"body": {
													"nativeSrc": "9319:391:6",
													"nodeType": "YulBlock",
													"src": "9319:391:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "9365:83:6",
																"nodeType": "YulBlock",
																"src": "9365:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9367:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "9367:77:6"
																			},
																			"nativeSrc": "9367:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "9367:79:6"
																		},
																		"nativeSrc": "9367:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "9367:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9340:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "9340:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9349:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9349:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9336:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9336:3:6"
																		},
																		"nativeSrc": "9336:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9336:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9361:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9361:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9332:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9332:3:6"
																},
																"nativeSrc": "9332:32:6",
																"nodeType": "YulFunctionCall",
																"src": "9332:32:6"
															},
															"nativeSrc": "9329:119:6",
															"nodeType": "YulIf",
															"src": "9329:119:6"
														},
														{
															"nativeSrc": "9458:117:6",
															"nodeType": "YulBlock",
															"src": "9458:117:6",
															"statements": [
																{
																	"nativeSrc": "9473:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9473:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9487:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9487:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9477:6:6",
																			"nodeType": "YulTypedName",
																			"src": "9477:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9502:63:6",
																	"nodeType": "YulAssignment",
																	"src": "9502:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9537:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "9537:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9548:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "9548:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9533:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "9533:3:6"
																				},
																				"nativeSrc": "9533:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "9533:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9557:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "9557:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9512:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "9512:20:6"
																		},
																		"nativeSrc": "9512:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9512:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9502:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "9502:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9585:118:6",
															"nodeType": "YulBlock",
															"src": "9585:118:6",
															"statements": [
																{
																	"nativeSrc": "9600:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9600:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9614:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9614:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9604:6:6",
																			"nodeType": "YulTypedName",
																			"src": "9604:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9630:63:6",
																	"nodeType": "YulAssignment",
																	"src": "9630:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9665:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "9665:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9676:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "9676:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9661:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "9661:3:6"
																				},
																				"nativeSrc": "9661:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "9661:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9685:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "9685:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9640:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "9640:20:6"
																		},
																		"nativeSrc": "9640:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9640:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "9630:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "9630:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "9236:474:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9281:9:6",
														"nodeType": "YulTypedName",
														"src": "9281:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9292:7:6",
														"nodeType": "YulTypedName",
														"src": "9292:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9304:6:6",
														"nodeType": "YulTypedName",
														"src": "9304:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9312:6:6",
														"nodeType": "YulTypedName",
														"src": "9312:6:6",
														"type": ""
													}
												],
												"src": "9236:474:6"
											},
											{
												"body": {
													"nativeSrc": "9822:63:6",
													"nodeType": "YulBlock",
													"src": "9822:63:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9844:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "9844:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9852:1:6",
																				"nodeType": "YulLiteral",
																				"src": "9852:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9840:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9840:3:6"
																		},
																		"nativeSrc": "9840:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9840:14:6"
																	},
																	{
																		"hexValue": "494e53554646494349454e545f414d4f554e54",
																		"kind": "string",
																		"nativeSrc": "9856:21:6",
																		"nodeType": "YulLiteral",
																		"src": "9856:21:6",
																		"type": "",
																		"value": "INSUFFICIENT_AMOUNT"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9833:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9833:6:6"
																},
																"nativeSrc": "9833:45:6",
																"nodeType": "YulFunctionCall",
																"src": "9833:45:6"
															},
															"nativeSrc": "9833:45:6",
															"nodeType": "YulExpressionStatement",
															"src": "9833:45:6"
														}
													]
												},
												"name": "store_literal_in_memory_e8788a811b2f03c33c54d190798bfa174d3e97deda56c09c1df2080dcc8d5158",
												"nativeSrc": "9716:169:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9814:6:6",
														"nodeType": "YulTypedName",
														"src": "9814:6:6",
														"type": ""
													}
												],
												"src": "9716:169:6"
											},
											{
												"body": {
													"nativeSrc": "10037:220:6",
													"nodeType": "YulBlock",
													"src": "10037:220:6",
													"statements": [
														{
															"nativeSrc": "10047:74:6",
															"nodeType": "YulAssignment",
															"src": "10047:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10113:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "10113:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10118:2:6",
																		"nodeType": "YulLiteral",
																		"src": "10118:2:6",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10054:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "10054:58:6"
																},
																"nativeSrc": "10054:67:6",
																"nodeType": "YulFunctionCall",
																"src": "10054:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10047:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10047:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10219:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "10219:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e8788a811b2f03c33c54d190798bfa174d3e97deda56c09c1df2080dcc8d5158",
																	"nativeSrc": "10130:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "10130:88:6"
																},
																"nativeSrc": "10130:93:6",
																"nodeType": "YulFunctionCall",
																"src": "10130:93:6"
															},
															"nativeSrc": "10130:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "10130:93:6"
														},
														{
															"nativeSrc": "10232:19:6",
															"nodeType": "YulAssignment",
															"src": "10232:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10243:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "10243:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10248:2:6",
																		"nodeType": "YulLiteral",
																		"src": "10248:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10239:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10239:3:6"
																},
																"nativeSrc": "10239:12:6",
																"nodeType": "YulFunctionCall",
																"src": "10239:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10232:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10232:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e8788a811b2f03c33c54d190798bfa174d3e97deda56c09c1df2080dcc8d5158_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9891:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10025:3:6",
														"nodeType": "YulTypedName",
														"src": "10025:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10033:3:6",
														"nodeType": "YulTypedName",
														"src": "10033:3:6",
														"type": ""
													}
												],
												"src": "9891:366:6"
											},
											{
												"body": {
													"nativeSrc": "10434:248:6",
													"nodeType": "YulBlock",
													"src": "10434:248:6",
													"statements": [
														{
															"nativeSrc": "10444:26:6",
															"nodeType": "YulAssignment",
															"src": "10444:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10456:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "10456:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10467:2:6",
																		"nodeType": "YulLiteral",
																		"src": "10467:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10452:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10452:3:6"
																},
																"nativeSrc": "10452:18:6",
																"nodeType": "YulFunctionCall",
																"src": "10452:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10444:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "10444:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10491:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "10491:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10502:1:6",
																				"nodeType": "YulLiteral",
																				"src": "10502:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10487:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10487:3:6"
																		},
																		"nativeSrc": "10487:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10487:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10510:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "10510:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10516:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "10516:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10506:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10506:3:6"
																		},
																		"nativeSrc": "10506:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10506:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10480:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "10480:6:6"
																},
																"nativeSrc": "10480:47:6",
																"nodeType": "YulFunctionCall",
																"src": "10480:47:6"
															},
															"nativeSrc": "10480:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "10480:47:6"
														},
														{
															"nativeSrc": "10536:139:6",
															"nodeType": "YulAssignment",
															"src": "10536:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10670:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "10670:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e8788a811b2f03c33c54d190798bfa174d3e97deda56c09c1df2080dcc8d5158_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10544:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "10544:124:6"
																},
																"nativeSrc": "10544:131:6",
																"nodeType": "YulFunctionCall",
																"src": "10544:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10536:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "10536:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e8788a811b2f03c33c54d190798bfa174d3e97deda56c09c1df2080dcc8d5158__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10263:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10414:9:6",
														"nodeType": "YulTypedName",
														"src": "10414:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10429:4:6",
														"nodeType": "YulTypedName",
														"src": "10429:4:6",
														"type": ""
													}
												],
												"src": "10263:419:6"
											},
											{
												"body": {
													"nativeSrc": "10794:66:6",
													"nodeType": "YulBlock",
													"src": "10794:66:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10816:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "10816:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10824:1:6",
																				"nodeType": "YulLiteral",
																				"src": "10824:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10812:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10812:3:6"
																		},
																		"nativeSrc": "10812:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10812:14:6"
																	},
																	{
																		"hexValue": "494e53554646494349454e545f4c4951554944495459",
																		"kind": "string",
																		"nativeSrc": "10828:24:6",
																		"nodeType": "YulLiteral",
																		"src": "10828:24:6",
																		"type": "",
																		"value": "INSUFFICIENT_LIQUIDITY"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10805:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "10805:6:6"
																},
																"nativeSrc": "10805:48:6",
																"nodeType": "YulFunctionCall",
																"src": "10805:48:6"
															},
															"nativeSrc": "10805:48:6",
															"nodeType": "YulExpressionStatement",
															"src": "10805:48:6"
														}
													]
												},
												"name": "store_literal_in_memory_e8d3230d72418d9aed77f45ee412f45396c3f3cd599a1a457d8130d57af1a83e",
												"nativeSrc": "10688:172:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10786:6:6",
														"nodeType": "YulTypedName",
														"src": "10786:6:6",
														"type": ""
													}
												],
												"src": "10688:172:6"
											},
											{
												"body": {
													"nativeSrc": "11012:220:6",
													"nodeType": "YulBlock",
													"src": "11012:220:6",
													"statements": [
														{
															"nativeSrc": "11022:74:6",
															"nodeType": "YulAssignment",
															"src": "11022:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11088:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "11088:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11093:2:6",
																		"nodeType": "YulLiteral",
																		"src": "11093:2:6",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11029:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "11029:58:6"
																},
																"nativeSrc": "11029:67:6",
																"nodeType": "YulFunctionCall",
																"src": "11029:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11022:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "11022:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11194:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "11194:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e8d3230d72418d9aed77f45ee412f45396c3f3cd599a1a457d8130d57af1a83e",
																	"nativeSrc": "11105:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "11105:88:6"
																},
																"nativeSrc": "11105:93:6",
																"nodeType": "YulFunctionCall",
																"src": "11105:93:6"
															},
															"nativeSrc": "11105:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "11105:93:6"
														},
														{
															"nativeSrc": "11207:19:6",
															"nodeType": "YulAssignment",
															"src": "11207:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11218:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "11218:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11223:2:6",
																		"nodeType": "YulLiteral",
																		"src": "11223:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11214:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "11214:3:6"
																},
																"nativeSrc": "11214:12:6",
																"nodeType": "YulFunctionCall",
																"src": "11214:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11207:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "11207:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e8d3230d72418d9aed77f45ee412f45396c3f3cd599a1a457d8130d57af1a83e_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10866:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11000:3:6",
														"nodeType": "YulTypedName",
														"src": "11000:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11008:3:6",
														"nodeType": "YulTypedName",
														"src": "11008:3:6",
														"type": ""
													}
												],
												"src": "10866:366:6"
											},
											{
												"body": {
													"nativeSrc": "11409:248:6",
													"nodeType": "YulBlock",
													"src": "11409:248:6",
													"statements": [
														{
															"nativeSrc": "11419:26:6",
															"nodeType": "YulAssignment",
															"src": "11419:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11431:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "11431:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11442:2:6",
																		"nodeType": "YulLiteral",
																		"src": "11442:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11427:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "11427:3:6"
																},
																"nativeSrc": "11427:18:6",
																"nodeType": "YulFunctionCall",
																"src": "11427:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11419:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "11419:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11466:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "11466:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11477:1:6",
																				"nodeType": "YulLiteral",
																				"src": "11477:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11462:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "11462:3:6"
																		},
																		"nativeSrc": "11462:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "11462:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11485:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "11485:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11491:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "11491:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11481:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "11481:3:6"
																		},
																		"nativeSrc": "11481:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "11481:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11455:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "11455:6:6"
																},
																"nativeSrc": "11455:47:6",
																"nodeType": "YulFunctionCall",
																"src": "11455:47:6"
															},
															"nativeSrc": "11455:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "11455:47:6"
														},
														{
															"nativeSrc": "11511:139:6",
															"nodeType": "YulAssignment",
															"src": "11511:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11645:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "11645:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e8d3230d72418d9aed77f45ee412f45396c3f3cd599a1a457d8130d57af1a83e_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11519:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "11519:124:6"
																},
																"nativeSrc": "11519:131:6",
																"nodeType": "YulFunctionCall",
																"src": "11519:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11511:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "11511:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e8d3230d72418d9aed77f45ee412f45396c3f3cd599a1a457d8130d57af1a83e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11238:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11389:9:6",
														"nodeType": "YulTypedName",
														"src": "11389:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11404:4:6",
														"nodeType": "YulTypedName",
														"src": "11404:4:6",
														"type": ""
													}
												],
												"src": "11238:419:6"
											},
											{
												"body": {
													"nativeSrc": "11691:152:6",
													"nodeType": "YulBlock",
													"src": "11691:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11708:1:6",
																		"nodeType": "YulLiteral",
																		"src": "11708:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11711:77:6",
																		"nodeType": "YulLiteral",
																		"src": "11711:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11701:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "11701:6:6"
																},
																"nativeSrc": "11701:88:6",
																"nodeType": "YulFunctionCall",
																"src": "11701:88:6"
															},
															"nativeSrc": "11701:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "11701:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11805:1:6",
																		"nodeType": "YulLiteral",
																		"src": "11805:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11808:4:6",
																		"nodeType": "YulLiteral",
																		"src": "11808:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11798:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "11798:6:6"
																},
																"nativeSrc": "11798:15:6",
																"nodeType": "YulFunctionCall",
																"src": "11798:15:6"
															},
															"nativeSrc": "11798:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "11798:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11829:1:6",
																		"nodeType": "YulLiteral",
																		"src": "11829:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11832:4:6",
																		"nodeType": "YulLiteral",
																		"src": "11832:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "11822:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "11822:6:6"
																},
																"nativeSrc": "11822:15:6",
																"nodeType": "YulFunctionCall",
																"src": "11822:15:6"
															},
															"nativeSrc": "11822:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "11822:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "11663:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "11663:180:6"
											},
											{
												"body": {
													"nativeSrc": "11893:147:6",
													"nodeType": "YulBlock",
													"src": "11893:147:6",
													"statements": [
														{
															"nativeSrc": "11903:25:6",
															"nodeType": "YulAssignment",
															"src": "11903:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11926:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "11926:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11908:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "11908:17:6"
																},
																"nativeSrc": "11908:20:6",
																"nodeType": "YulFunctionCall",
																"src": "11908:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "11903:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "11903:1:6"
																}
															]
														},
														{
															"nativeSrc": "11937:25:6",
															"nodeType": "YulAssignment",
															"src": "11937:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11960:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "11960:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11942:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "11942:17:6"
																},
																"nativeSrc": "11942:20:6",
																"nodeType": "YulFunctionCall",
																"src": "11942:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "11937:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "11937:1:6"
																}
															]
														},
														{
															"nativeSrc": "11971:16:6",
															"nodeType": "YulAssignment",
															"src": "11971:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11982:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "11982:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "11985:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "11985:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11978:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "11978:3:6"
																},
																"nativeSrc": "11978:9:6",
																"nodeType": "YulFunctionCall",
																"src": "11978:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "11971:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "11971:3:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12011:22:6",
																"nodeType": "YulBlock",
																"src": "12011:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "12013:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "12013:16:6"
																			},
																			"nativeSrc": "12013:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "12013:18:6"
																		},
																		"nativeSrc": "12013:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "12013:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12003:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "12003:1:6"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "12006:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "12006:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "12000:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "12000:2:6"
																},
																"nativeSrc": "12000:10:6",
																"nodeType": "YulFunctionCall",
																"src": "12000:10:6"
															},
															"nativeSrc": "11997:36:6",
															"nodeType": "YulIf",
															"src": "11997:36:6"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "11849:191:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "11880:1:6",
														"nodeType": "YulTypedName",
														"src": "11880:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "11883:1:6",
														"nodeType": "YulTypedName",
														"src": "11883:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "11889:3:6",
														"nodeType": "YulTypedName",
														"src": "11889:3:6",
														"type": ""
													}
												],
												"src": "11849:191:6"
											},
											{
												"body": {
													"nativeSrc": "12094:362:6",
													"nodeType": "YulBlock",
													"src": "12094:362:6",
													"statements": [
														{
															"nativeSrc": "12104:25:6",
															"nodeType": "YulAssignment",
															"src": "12104:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12127:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "12127:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12109:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "12109:17:6"
																},
																"nativeSrc": "12109:20:6",
																"nodeType": "YulFunctionCall",
																"src": "12109:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "12104:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "12104:1:6"
																}
															]
														},
														{
															"nativeSrc": "12138:25:6",
															"nodeType": "YulAssignment",
															"src": "12138:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "12161:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "12161:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12143:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "12143:17:6"
																},
																"nativeSrc": "12143:20:6",
																"nodeType": "YulFunctionCall",
																"src": "12143:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "12138:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "12138:1:6"
																}
															]
														},
														{
															"nativeSrc": "12172:28:6",
															"nodeType": "YulVariableDeclaration",
															"src": "12172:28:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12195:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "12195:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "12198:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "12198:1:6"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "12191:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "12191:3:6"
																},
																"nativeSrc": "12191:9:6",
																"nodeType": "YulFunctionCall",
																"src": "12191:9:6"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "12176:11:6",
																	"nodeType": "YulTypedName",
																	"src": "12176:11:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "12209:41:6",
															"nodeType": "YulAssignment",
															"src": "12209:41:6",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "12238:11:6",
																		"nodeType": "YulIdentifier",
																		"src": "12238:11:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12220:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "12220:17:6"
																},
																"nativeSrc": "12220:30:6",
																"nodeType": "YulFunctionCall",
																"src": "12220:30:6"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "12209:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "12209:7:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12427:22:6",
																"nodeType": "YulBlock",
																"src": "12427:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "12429:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "12429:16:6"
																			},
																			"nativeSrc": "12429:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "12429:18:6"
																		},
																		"nativeSrc": "12429:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "12429:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "12360:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "12360:1:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "12353:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "12353:6:6"
																				},
																				"nativeSrc": "12353:9:6",
																				"nodeType": "YulFunctionCall",
																				"src": "12353:9:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "12383:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "12383:1:6"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "12390:7:6",
																								"nodeType": "YulIdentifier",
																								"src": "12390:7:6"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "12399:1:6",
																								"nodeType": "YulIdentifier",
																								"src": "12399:1:6"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "12386:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "12386:3:6"
																						},
																						"nativeSrc": "12386:15:6",
																						"nodeType": "YulFunctionCall",
																						"src": "12386:15:6"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "12380:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "12380:2:6"
																				},
																				"nativeSrc": "12380:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "12380:22:6"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "12333:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "12333:2:6"
																		},
																		"nativeSrc": "12333:83:6",
																		"nodeType": "YulFunctionCall",
																		"src": "12333:83:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12313:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "12313:6:6"
																},
																"nativeSrc": "12313:113:6",
																"nodeType": "YulFunctionCall",
																"src": "12313:113:6"
															},
															"nativeSrc": "12310:139:6",
															"nodeType": "YulIf",
															"src": "12310:139:6"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "12046:410:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "12077:1:6",
														"nodeType": "YulTypedName",
														"src": "12077:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "12080:1:6",
														"nodeType": "YulTypedName",
														"src": "12080:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "12086:7:6",
														"nodeType": "YulTypedName",
														"src": "12086:7:6",
														"type": ""
													}
												],
												"src": "12046:410:6"
											},
											{
												"body": {
													"nativeSrc": "12490:152:6",
													"nodeType": "YulBlock",
													"src": "12490:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12507:1:6",
																		"nodeType": "YulLiteral",
																		"src": "12507:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12510:77:6",
																		"nodeType": "YulLiteral",
																		"src": "12510:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12500:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "12500:6:6"
																},
																"nativeSrc": "12500:88:6",
																"nodeType": "YulFunctionCall",
																"src": "12500:88:6"
															},
															"nativeSrc": "12500:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "12500:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12604:1:6",
																		"nodeType": "YulLiteral",
																		"src": "12604:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12607:4:6",
																		"nodeType": "YulLiteral",
																		"src": "12607:4:6",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12597:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "12597:6:6"
																},
																"nativeSrc": "12597:15:6",
																"nodeType": "YulFunctionCall",
																"src": "12597:15:6"
															},
															"nativeSrc": "12597:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "12597:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12628:1:6",
																		"nodeType": "YulLiteral",
																		"src": "12628:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12631:4:6",
																		"nodeType": "YulLiteral",
																		"src": "12631:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "12621:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "12621:6:6"
																},
																"nativeSrc": "12621:15:6",
																"nodeType": "YulFunctionCall",
																"src": "12621:15:6"
															},
															"nativeSrc": "12621:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "12621:15:6"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "12462:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "12462:180:6"
											},
											{
												"body": {
													"nativeSrc": "12690:143:6",
													"nodeType": "YulBlock",
													"src": "12690:143:6",
													"statements": [
														{
															"nativeSrc": "12700:25:6",
															"nodeType": "YulAssignment",
															"src": "12700:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12723:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "12723:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12705:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "12705:17:6"
																},
																"nativeSrc": "12705:20:6",
																"nodeType": "YulFunctionCall",
																"src": "12705:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "12700:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "12700:1:6"
																}
															]
														},
														{
															"nativeSrc": "12734:25:6",
															"nodeType": "YulAssignment",
															"src": "12734:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "12757:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "12757:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12739:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "12739:17:6"
																},
																"nativeSrc": "12739:20:6",
																"nodeType": "YulFunctionCall",
																"src": "12739:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "12734:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "12734:1:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12781:22:6",
																"nodeType": "YulBlock",
																"src": "12781:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "12783:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "12783:16:6"
																			},
																			"nativeSrc": "12783:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "12783:18:6"
																		},
																		"nativeSrc": "12783:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "12783:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "12778:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "12778:1:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12771:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "12771:6:6"
																},
																"nativeSrc": "12771:9:6",
																"nodeType": "YulFunctionCall",
																"src": "12771:9:6"
															},
															"nativeSrc": "12768:35:6",
															"nodeType": "YulIf",
															"src": "12768:35:6"
														},
														{
															"nativeSrc": "12813:14:6",
															"nodeType": "YulAssignment",
															"src": "12813:14:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12822:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "12822:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "12825:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "12825:1:6"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "12818:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "12818:3:6"
																},
																"nativeSrc": "12818:9:6",
																"nodeType": "YulFunctionCall",
																"src": "12818:9:6"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "12813:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "12813:1:6"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "12648:185:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "12679:1:6",
														"nodeType": "YulTypedName",
														"src": "12679:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "12682:1:6",
														"nodeType": "YulTypedName",
														"src": "12682:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "12688:1:6",
														"nodeType": "YulTypedName",
														"src": "12688:1:6",
														"type": ""
													}
												],
												"src": "12648:185:6"
											},
											{
												"body": {
													"nativeSrc": "12867:152:6",
													"nodeType": "YulBlock",
													"src": "12867:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12884:1:6",
																		"nodeType": "YulLiteral",
																		"src": "12884:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12887:77:6",
																		"nodeType": "YulLiteral",
																		"src": "12887:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12877:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "12877:6:6"
																},
																"nativeSrc": "12877:88:6",
																"nodeType": "YulFunctionCall",
																"src": "12877:88:6"
															},
															"nativeSrc": "12877:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "12877:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12981:1:6",
																		"nodeType": "YulLiteral",
																		"src": "12981:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12984:4:6",
																		"nodeType": "YulLiteral",
																		"src": "12984:4:6",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12974:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "12974:6:6"
																},
																"nativeSrc": "12974:15:6",
																"nodeType": "YulFunctionCall",
																"src": "12974:15:6"
															},
															"nativeSrc": "12974:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "12974:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13005:1:6",
																		"nodeType": "YulLiteral",
																		"src": "13005:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13008:4:6",
																		"nodeType": "YulLiteral",
																		"src": "13008:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "12998:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "12998:6:6"
																},
																"nativeSrc": "12998:15:6",
																"nodeType": "YulFunctionCall",
																"src": "12998:15:6"
															},
															"nativeSrc": "12998:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "12998:15:6"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "12839:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "12839:180:6"
											},
											{
												"body": {
													"nativeSrc": "13076:269:6",
													"nodeType": "YulBlock",
													"src": "13076:269:6",
													"statements": [
														{
															"nativeSrc": "13086:22:6",
															"nodeType": "YulAssignment",
															"src": "13086:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "13100:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "13100:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13106:1:6",
																		"nodeType": "YulLiteral",
																		"src": "13106:1:6",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "13096:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "13096:3:6"
																},
																"nativeSrc": "13096:12:6",
																"nodeType": "YulFunctionCall",
																"src": "13096:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "13086:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "13086:6:6"
																}
															]
														},
														{
															"nativeSrc": "13117:38:6",
															"nodeType": "YulVariableDeclaration",
															"src": "13117:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "13147:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "13147:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13153:1:6",
																		"nodeType": "YulLiteral",
																		"src": "13153:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "13143:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "13143:3:6"
																},
																"nativeSrc": "13143:12:6",
																"nodeType": "YulFunctionCall",
																"src": "13143:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "13121:18:6",
																	"nodeType": "YulTypedName",
																	"src": "13121:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13194:51:6",
																"nodeType": "YulBlock",
																"src": "13194:51:6",
																"statements": [
																	{
																		"nativeSrc": "13208:27:6",
																		"nodeType": "YulAssignment",
																		"src": "13208:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "13222:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "13222:6:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "13230:4:6",
																					"nodeType": "YulLiteral",
																					"src": "13230:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "13218:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "13218:3:6"
																			},
																			"nativeSrc": "13218:17:6",
																			"nodeType": "YulFunctionCall",
																			"src": "13218:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "13208:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "13208:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "13174:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "13174:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "13167:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "13167:6:6"
																},
																"nativeSrc": "13167:26:6",
																"nodeType": "YulFunctionCall",
																"src": "13167:26:6"
															},
															"nativeSrc": "13164:81:6",
															"nodeType": "YulIf",
															"src": "13164:81:6"
														},
														{
															"body": {
																"nativeSrc": "13297:42:6",
																"nodeType": "YulBlock",
																"src": "13297:42:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "13311:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "13311:16:6"
																			},
																			"nativeSrc": "13311:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "13311:18:6"
																		},
																		"nativeSrc": "13311:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "13311:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "13261:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "13261:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "13284:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "13284:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13292:2:6",
																				"nodeType": "YulLiteral",
																				"src": "13292:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "13281:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "13281:2:6"
																		},
																		"nativeSrc": "13281:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "13281:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "13258:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "13258:2:6"
																},
																"nativeSrc": "13258:38:6",
																"nodeType": "YulFunctionCall",
																"src": "13258:38:6"
															},
															"nativeSrc": "13255:84:6",
															"nodeType": "YulIf",
															"src": "13255:84:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "13025:320:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "13060:4:6",
														"nodeType": "YulTypedName",
														"src": "13060:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "13069:6:6",
														"nodeType": "YulTypedName",
														"src": "13069:6:6",
														"type": ""
													}
												],
												"src": "13025:320:6"
											},
											{
												"body": {
													"nativeSrc": "13457:70:6",
													"nodeType": "YulBlock",
													"src": "13457:70:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13479:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "13479:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13487:1:6",
																				"nodeType": "YulLiteral",
																				"src": "13487:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13475:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "13475:3:6"
																		},
																		"nativeSrc": "13475:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "13475:14:6"
																	},
																	{
																		"hexValue": "494e53554646494349454e545f4f55545055545f414d4f554e54",
																		"kind": "string",
																		"nativeSrc": "13491:28:6",
																		"nodeType": "YulLiteral",
																		"src": "13491:28:6",
																		"type": "",
																		"value": "INSUFFICIENT_OUTPUT_AMOUNT"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13468:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "13468:6:6"
																},
																"nativeSrc": "13468:52:6",
																"nodeType": "YulFunctionCall",
																"src": "13468:52:6"
															},
															"nativeSrc": "13468:52:6",
															"nodeType": "YulExpressionStatement",
															"src": "13468:52:6"
														}
													]
												},
												"name": "store_literal_in_memory_bbbb4868217c0daeb6721d77d471da8aa8a80672b4258dd2de9d7ccde9bf2146",
												"nativeSrc": "13351:176:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13449:6:6",
														"nodeType": "YulTypedName",
														"src": "13449:6:6",
														"type": ""
													}
												],
												"src": "13351:176:6"
											},
											{
												"body": {
													"nativeSrc": "13679:220:6",
													"nodeType": "YulBlock",
													"src": "13679:220:6",
													"statements": [
														{
															"nativeSrc": "13689:74:6",
															"nodeType": "YulAssignment",
															"src": "13689:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13755:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "13755:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13760:2:6",
																		"nodeType": "YulLiteral",
																		"src": "13760:2:6",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13696:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "13696:58:6"
																},
																"nativeSrc": "13696:67:6",
																"nodeType": "YulFunctionCall",
																"src": "13696:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13689:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "13689:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13861:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "13861:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_bbbb4868217c0daeb6721d77d471da8aa8a80672b4258dd2de9d7ccde9bf2146",
																	"nativeSrc": "13772:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "13772:88:6"
																},
																"nativeSrc": "13772:93:6",
																"nodeType": "YulFunctionCall",
																"src": "13772:93:6"
															},
															"nativeSrc": "13772:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "13772:93:6"
														},
														{
															"nativeSrc": "13874:19:6",
															"nodeType": "YulAssignment",
															"src": "13874:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13885:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "13885:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13890:2:6",
																		"nodeType": "YulLiteral",
																		"src": "13890:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13881:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "13881:3:6"
																},
																"nativeSrc": "13881:12:6",
																"nodeType": "YulFunctionCall",
																"src": "13881:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13874:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "13874:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_bbbb4868217c0daeb6721d77d471da8aa8a80672b4258dd2de9d7ccde9bf2146_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13533:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13667:3:6",
														"nodeType": "YulTypedName",
														"src": "13667:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13675:3:6",
														"nodeType": "YulTypedName",
														"src": "13675:3:6",
														"type": ""
													}
												],
												"src": "13533:366:6"
											},
											{
												"body": {
													"nativeSrc": "14076:248:6",
													"nodeType": "YulBlock",
													"src": "14076:248:6",
													"statements": [
														{
															"nativeSrc": "14086:26:6",
															"nodeType": "YulAssignment",
															"src": "14086:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14098:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "14098:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14109:2:6",
																		"nodeType": "YulLiteral",
																		"src": "14109:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14094:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "14094:3:6"
																},
																"nativeSrc": "14094:18:6",
																"nodeType": "YulFunctionCall",
																"src": "14094:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14086:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "14086:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14133:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "14133:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14144:1:6",
																				"nodeType": "YulLiteral",
																				"src": "14144:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14129:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "14129:3:6"
																		},
																		"nativeSrc": "14129:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "14129:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14152:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "14152:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14158:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "14158:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14148:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "14148:3:6"
																		},
																		"nativeSrc": "14148:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "14148:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14122:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "14122:6:6"
																},
																"nativeSrc": "14122:47:6",
																"nodeType": "YulFunctionCall",
																"src": "14122:47:6"
															},
															"nativeSrc": "14122:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "14122:47:6"
														},
														{
															"nativeSrc": "14178:139:6",
															"nodeType": "YulAssignment",
															"src": "14178:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14312:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "14312:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_bbbb4868217c0daeb6721d77d471da8aa8a80672b4258dd2de9d7ccde9bf2146_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14186:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "14186:124:6"
																},
																"nativeSrc": "14186:131:6",
																"nodeType": "YulFunctionCall",
																"src": "14186:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14178:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "14178:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_bbbb4868217c0daeb6721d77d471da8aa8a80672b4258dd2de9d7ccde9bf2146__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13905:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14056:9:6",
														"nodeType": "YulTypedName",
														"src": "14056:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14071:4:6",
														"nodeType": "YulTypedName",
														"src": "14071:4:6",
														"type": ""
													}
												],
												"src": "13905:419:6"
											},
											{
												"body": {
													"nativeSrc": "14436:57:6",
													"nodeType": "YulBlock",
													"src": "14436:57:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14458:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "14458:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14466:1:6",
																				"nodeType": "YulLiteral",
																				"src": "14466:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14454:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "14454:3:6"
																		},
																		"nativeSrc": "14454:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "14454:14:6"
																	},
																	{
																		"hexValue": "494e56414c49445f544f4b454e",
																		"kind": "string",
																		"nativeSrc": "14470:15:6",
																		"nodeType": "YulLiteral",
																		"src": "14470:15:6",
																		"type": "",
																		"value": "INVALID_TOKEN"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14447:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "14447:6:6"
																},
																"nativeSrc": "14447:39:6",
																"nodeType": "YulFunctionCall",
																"src": "14447:39:6"
															},
															"nativeSrc": "14447:39:6",
															"nodeType": "YulExpressionStatement",
															"src": "14447:39:6"
														}
													]
												},
												"name": "store_literal_in_memory_436b5627177a9781148596ddddd93f72d53dd82575a018216d5aaf2a8219ec9e",
												"nativeSrc": "14330:163:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14428:6:6",
														"nodeType": "YulTypedName",
														"src": "14428:6:6",
														"type": ""
													}
												],
												"src": "14330:163:6"
											},
											{
												"body": {
													"nativeSrc": "14645:220:6",
													"nodeType": "YulBlock",
													"src": "14645:220:6",
													"statements": [
														{
															"nativeSrc": "14655:74:6",
															"nodeType": "YulAssignment",
															"src": "14655:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14721:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "14721:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14726:2:6",
																		"nodeType": "YulLiteral",
																		"src": "14726:2:6",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14662:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "14662:58:6"
																},
																"nativeSrc": "14662:67:6",
																"nodeType": "YulFunctionCall",
																"src": "14662:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14655:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "14655:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14827:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "14827:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_436b5627177a9781148596ddddd93f72d53dd82575a018216d5aaf2a8219ec9e",
																	"nativeSrc": "14738:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "14738:88:6"
																},
																"nativeSrc": "14738:93:6",
																"nodeType": "YulFunctionCall",
																"src": "14738:93:6"
															},
															"nativeSrc": "14738:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "14738:93:6"
														},
														{
															"nativeSrc": "14840:19:6",
															"nodeType": "YulAssignment",
															"src": "14840:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14851:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "14851:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14856:2:6",
																		"nodeType": "YulLiteral",
																		"src": "14856:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14847:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "14847:3:6"
																},
																"nativeSrc": "14847:12:6",
																"nodeType": "YulFunctionCall",
																"src": "14847:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14840:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "14840:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_436b5627177a9781148596ddddd93f72d53dd82575a018216d5aaf2a8219ec9e_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14499:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14633:3:6",
														"nodeType": "YulTypedName",
														"src": "14633:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14641:3:6",
														"nodeType": "YulTypedName",
														"src": "14641:3:6",
														"type": ""
													}
												],
												"src": "14499:366:6"
											},
											{
												"body": {
													"nativeSrc": "15042:248:6",
													"nodeType": "YulBlock",
													"src": "15042:248:6",
													"statements": [
														{
															"nativeSrc": "15052:26:6",
															"nodeType": "YulAssignment",
															"src": "15052:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15064:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "15064:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15075:2:6",
																		"nodeType": "YulLiteral",
																		"src": "15075:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15060:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "15060:3:6"
																},
																"nativeSrc": "15060:18:6",
																"nodeType": "YulFunctionCall",
																"src": "15060:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15052:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "15052:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15099:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "15099:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15110:1:6",
																				"nodeType": "YulLiteral",
																				"src": "15110:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15095:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "15095:3:6"
																		},
																		"nativeSrc": "15095:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "15095:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15118:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "15118:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15124:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "15124:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15114:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "15114:3:6"
																		},
																		"nativeSrc": "15114:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "15114:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15088:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "15088:6:6"
																},
																"nativeSrc": "15088:47:6",
																"nodeType": "YulFunctionCall",
																"src": "15088:47:6"
															},
															"nativeSrc": "15088:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "15088:47:6"
														},
														{
															"nativeSrc": "15144:139:6",
															"nodeType": "YulAssignment",
															"src": "15144:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15278:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "15278:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_436b5627177a9781148596ddddd93f72d53dd82575a018216d5aaf2a8219ec9e_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15152:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "15152:124:6"
																},
																"nativeSrc": "15152:131:6",
																"nodeType": "YulFunctionCall",
																"src": "15152:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15144:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "15144:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_436b5627177a9781148596ddddd93f72d53dd82575a018216d5aaf2a8219ec9e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14871:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15022:9:6",
														"nodeType": "YulTypedName",
														"src": "15022:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15037:4:6",
														"nodeType": "YulTypedName",
														"src": "15037:4:6",
														"type": ""
													}
												],
												"src": "14871:419:6"
											},
											{
												"body": {
													"nativeSrc": "15361:53:6",
													"nodeType": "YulBlock",
													"src": "15361:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15378:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "15378:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "15401:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "15401:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "15383:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "15383:17:6"
																		},
																		"nativeSrc": "15383:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "15383:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15371:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "15371:6:6"
																},
																"nativeSrc": "15371:37:6",
																"nodeType": "YulFunctionCall",
																"src": "15371:37:6"
															},
															"nativeSrc": "15371:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "15371:37:6"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "15296:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15349:5:6",
														"nodeType": "YulTypedName",
														"src": "15349:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "15356:3:6",
														"nodeType": "YulTypedName",
														"src": "15356:3:6",
														"type": ""
													}
												],
												"src": "15296:118:6"
											},
											{
												"body": {
													"nativeSrc": "15574:288:6",
													"nodeType": "YulBlock",
													"src": "15574:288:6",
													"statements": [
														{
															"nativeSrc": "15584:26:6",
															"nodeType": "YulAssignment",
															"src": "15584:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15596:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "15596:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15607:2:6",
																		"nodeType": "YulLiteral",
																		"src": "15607:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15592:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "15592:3:6"
																},
																"nativeSrc": "15592:18:6",
																"nodeType": "YulFunctionCall",
																"src": "15592:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15584:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "15584:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "15664:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "15664:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15677:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "15677:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15688:1:6",
																				"nodeType": "YulLiteral",
																				"src": "15688:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15673:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "15673:3:6"
																		},
																		"nativeSrc": "15673:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "15673:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "15620:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "15620:43:6"
																},
																"nativeSrc": "15620:71:6",
																"nodeType": "YulFunctionCall",
																"src": "15620:71:6"
															},
															"nativeSrc": "15620:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "15620:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "15745:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "15745:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15758:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "15758:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15769:2:6",
																				"nodeType": "YulLiteral",
																				"src": "15769:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15754:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "15754:3:6"
																		},
																		"nativeSrc": "15754:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "15754:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "15701:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "15701:43:6"
																},
																"nativeSrc": "15701:72:6",
																"nodeType": "YulFunctionCall",
																"src": "15701:72:6"
															},
															"nativeSrc": "15701:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "15701:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "15827:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "15827:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15840:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "15840:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15851:2:6",
																				"nodeType": "YulLiteral",
																				"src": "15851:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15836:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "15836:3:6"
																		},
																		"nativeSrc": "15836:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "15836:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "15783:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "15783:43:6"
																},
																"nativeSrc": "15783:72:6",
																"nodeType": "YulFunctionCall",
																"src": "15783:72:6"
															},
															"nativeSrc": "15783:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "15783:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "15420:442:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15530:9:6",
														"nodeType": "YulTypedName",
														"src": "15530:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "15542:6:6",
														"nodeType": "YulTypedName",
														"src": "15542:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "15550:6:6",
														"nodeType": "YulTypedName",
														"src": "15550:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "15558:6:6",
														"nodeType": "YulTypedName",
														"src": "15558:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15569:4:6",
														"nodeType": "YulTypedName",
														"src": "15569:4:6",
														"type": ""
													}
												],
												"src": "15420:442:6"
											},
											{
												"body": {
													"nativeSrc": "15908:76:6",
													"nodeType": "YulBlock",
													"src": "15908:76:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "15962:16:6",
																"nodeType": "YulBlock",
																"src": "15962:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "15971:1:6",
																					"nodeType": "YulLiteral",
																					"src": "15971:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "15974:1:6",
																					"nodeType": "YulLiteral",
																					"src": "15974:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "15964:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "15964:6:6"
																			},
																			"nativeSrc": "15964:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "15964:12:6"
																		},
																		"nativeSrc": "15964:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "15964:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "15931:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "15931:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "15953:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "15953:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "15938:14:6",
																					"nodeType": "YulIdentifier",
																					"src": "15938:14:6"
																				},
																				"nativeSrc": "15938:21:6",
																				"nodeType": "YulFunctionCall",
																				"src": "15938:21:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "15928:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "15928:2:6"
																		},
																		"nativeSrc": "15928:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "15928:32:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "15921:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "15921:6:6"
																},
																"nativeSrc": "15921:40:6",
																"nodeType": "YulFunctionCall",
																"src": "15921:40:6"
															},
															"nativeSrc": "15918:60:6",
															"nodeType": "YulIf",
															"src": "15918:60:6"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "15868:116:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15901:5:6",
														"nodeType": "YulTypedName",
														"src": "15901:5:6",
														"type": ""
													}
												],
												"src": "15868:116:6"
											},
											{
												"body": {
													"nativeSrc": "16050:77:6",
													"nodeType": "YulBlock",
													"src": "16050:77:6",
													"statements": [
														{
															"nativeSrc": "16060:22:6",
															"nodeType": "YulAssignment",
															"src": "16060:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "16075:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "16075:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "16069:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "16069:5:6"
																},
																"nativeSrc": "16069:13:6",
																"nodeType": "YulFunctionCall",
																"src": "16069:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "16060:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "16060:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "16115:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "16115:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "16091:23:6",
																	"nodeType": "YulIdentifier",
																	"src": "16091:23:6"
																},
																"nativeSrc": "16091:30:6",
																"nodeType": "YulFunctionCall",
																"src": "16091:30:6"
															},
															"nativeSrc": "16091:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "16091:30:6"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "15990:137:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "16028:6:6",
														"nodeType": "YulTypedName",
														"src": "16028:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "16036:3:6",
														"nodeType": "YulTypedName",
														"src": "16036:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "16044:5:6",
														"nodeType": "YulTypedName",
														"src": "16044:5:6",
														"type": ""
													}
												],
												"src": "15990:137:6"
											},
											{
												"body": {
													"nativeSrc": "16207:271:6",
													"nodeType": "YulBlock",
													"src": "16207:271:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "16253:83:6",
																"nodeType": "YulBlock",
																"src": "16253:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "16255:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "16255:77:6"
																			},
																			"nativeSrc": "16255:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "16255:79:6"
																		},
																		"nativeSrc": "16255:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "16255:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16228:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "16228:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16237:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "16237:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16224:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "16224:3:6"
																		},
																		"nativeSrc": "16224:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "16224:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16249:2:6",
																		"nodeType": "YulLiteral",
																		"src": "16249:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "16220:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "16220:3:6"
																},
																"nativeSrc": "16220:32:6",
																"nodeType": "YulFunctionCall",
																"src": "16220:32:6"
															},
															"nativeSrc": "16217:119:6",
															"nodeType": "YulIf",
															"src": "16217:119:6"
														},
														{
															"nativeSrc": "16346:125:6",
															"nodeType": "YulBlock",
															"src": "16346:125:6",
															"statements": [
																{
																	"nativeSrc": "16361:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "16361:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "16375:1:6",
																		"nodeType": "YulLiteral",
																		"src": "16375:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "16365:6:6",
																			"nodeType": "YulTypedName",
																			"src": "16365:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "16390:71:6",
																	"nodeType": "YulAssignment",
																	"src": "16390:71:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "16433:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "16433:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "16444:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "16444:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16429:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "16429:3:6"
																				},
																				"nativeSrc": "16429:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "16429:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16453:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "16453:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "16400:28:6",
																			"nodeType": "YulIdentifier",
																			"src": "16400:28:6"
																		},
																		"nativeSrc": "16400:61:6",
																		"nodeType": "YulFunctionCall",
																		"src": "16400:61:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "16390:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "16390:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "16133:345:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16177:9:6",
														"nodeType": "YulTypedName",
														"src": "16177:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "16188:7:6",
														"nodeType": "YulTypedName",
														"src": "16188:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "16200:6:6",
														"nodeType": "YulTypedName",
														"src": "16200:6:6",
														"type": ""
													}
												],
												"src": "16133:345:6"
											},
											{
												"body": {
													"nativeSrc": "16610:206:6",
													"nodeType": "YulBlock",
													"src": "16610:206:6",
													"statements": [
														{
															"nativeSrc": "16620:26:6",
															"nodeType": "YulAssignment",
															"src": "16620:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16632:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "16632:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16643:2:6",
																		"nodeType": "YulLiteral",
																		"src": "16643:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16628:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "16628:3:6"
																},
																"nativeSrc": "16628:18:6",
																"nodeType": "YulFunctionCall",
																"src": "16628:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16620:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "16620:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "16700:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "16700:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16713:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "16713:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16724:1:6",
																				"nodeType": "YulLiteral",
																				"src": "16724:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16709:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "16709:3:6"
																		},
																		"nativeSrc": "16709:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "16709:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "16656:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "16656:43:6"
																},
																"nativeSrc": "16656:71:6",
																"nodeType": "YulFunctionCall",
																"src": "16656:71:6"
															},
															"nativeSrc": "16656:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "16656:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "16781:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "16781:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16794:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "16794:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16805:2:6",
																				"nodeType": "YulLiteral",
																				"src": "16805:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16790:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "16790:3:6"
																		},
																		"nativeSrc": "16790:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "16790:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "16737:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "16737:43:6"
																},
																"nativeSrc": "16737:72:6",
																"nodeType": "YulFunctionCall",
																"src": "16737:72:6"
															},
															"nativeSrc": "16737:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "16737:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "16484:332:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16574:9:6",
														"nodeType": "YulTypedName",
														"src": "16574:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "16586:6:6",
														"nodeType": "YulTypedName",
														"src": "16586:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "16594:6:6",
														"nodeType": "YulTypedName",
														"src": "16594:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16605:4:6",
														"nodeType": "YulTypedName",
														"src": "16605:4:6",
														"type": ""
													}
												],
												"src": "16484:332:6"
											},
											{
												"body": {
													"nativeSrc": "16920:124:6",
													"nodeType": "YulBlock",
													"src": "16920:124:6",
													"statements": [
														{
															"nativeSrc": "16930:26:6",
															"nodeType": "YulAssignment",
															"src": "16930:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16942:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "16942:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16953:2:6",
																		"nodeType": "YulLiteral",
																		"src": "16953:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16938:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "16938:3:6"
																},
																"nativeSrc": "16938:18:6",
																"nodeType": "YulFunctionCall",
																"src": "16938:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16930:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "16930:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "17010:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "17010:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17023:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "17023:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17034:1:6",
																				"nodeType": "YulLiteral",
																				"src": "17034:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17019:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "17019:3:6"
																		},
																		"nativeSrc": "17019:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "17019:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "16966:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "16966:43:6"
																},
																"nativeSrc": "16966:71:6",
																"nodeType": "YulFunctionCall",
																"src": "16966:71:6"
															},
															"nativeSrc": "16966:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "16966:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "16822:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16892:9:6",
														"nodeType": "YulTypedName",
														"src": "16892:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "16904:6:6",
														"nodeType": "YulTypedName",
														"src": "16904:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16915:4:6",
														"nodeType": "YulTypedName",
														"src": "16915:4:6",
														"type": ""
													}
												],
												"src": "16822:222:6"
											},
											{
												"body": {
													"nativeSrc": "17113:80:6",
													"nodeType": "YulBlock",
													"src": "17113:80:6",
													"statements": [
														{
															"nativeSrc": "17123:22:6",
															"nodeType": "YulAssignment",
															"src": "17123:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "17138:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "17138:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "17132:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "17132:5:6"
																},
																"nativeSrc": "17132:13:6",
																"nodeType": "YulFunctionCall",
																"src": "17132:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "17123:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "17123:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "17181:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "17181:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "17154:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "17154:26:6"
																},
																"nativeSrc": "17154:33:6",
																"nodeType": "YulFunctionCall",
																"src": "17154:33:6"
															},
															"nativeSrc": "17154:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "17154:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "17050:143:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "17091:6:6",
														"nodeType": "YulTypedName",
														"src": "17091:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "17099:3:6",
														"nodeType": "YulTypedName",
														"src": "17099:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "17107:5:6",
														"nodeType": "YulTypedName",
														"src": "17107:5:6",
														"type": ""
													}
												],
												"src": "17050:143:6"
											},
											{
												"body": {
													"nativeSrc": "17276:274:6",
													"nodeType": "YulBlock",
													"src": "17276:274:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "17322:83:6",
																"nodeType": "YulBlock",
																"src": "17322:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "17324:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "17324:77:6"
																			},
																			"nativeSrc": "17324:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "17324:79:6"
																		},
																		"nativeSrc": "17324:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "17324:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "17297:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "17297:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17306:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "17306:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17293:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "17293:3:6"
																		},
																		"nativeSrc": "17293:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "17293:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17318:2:6",
																		"nodeType": "YulLiteral",
																		"src": "17318:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "17289:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "17289:3:6"
																},
																"nativeSrc": "17289:32:6",
																"nodeType": "YulFunctionCall",
																"src": "17289:32:6"
															},
															"nativeSrc": "17286:119:6",
															"nodeType": "YulIf",
															"src": "17286:119:6"
														},
														{
															"nativeSrc": "17415:128:6",
															"nodeType": "YulBlock",
															"src": "17415:128:6",
															"statements": [
																{
																	"nativeSrc": "17430:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "17430:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "17444:1:6",
																		"nodeType": "YulLiteral",
																		"src": "17444:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "17434:6:6",
																			"nodeType": "YulTypedName",
																			"src": "17434:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "17459:74:6",
																	"nodeType": "YulAssignment",
																	"src": "17459:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "17505:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "17505:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "17516:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "17516:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "17501:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "17501:3:6"
																				},
																				"nativeSrc": "17501:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "17501:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "17525:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "17525:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "17469:31:6",
																			"nodeType": "YulIdentifier",
																			"src": "17469:31:6"
																		},
																		"nativeSrc": "17469:64:6",
																		"nodeType": "YulFunctionCall",
																		"src": "17469:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "17459:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "17459:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "17199:351:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17246:9:6",
														"nodeType": "YulTypedName",
														"src": "17246:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "17257:7:6",
														"nodeType": "YulTypedName",
														"src": "17257:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "17269:6:6",
														"nodeType": "YulTypedName",
														"src": "17269:6:6",
														"type": ""
													}
												],
												"src": "17199:351:6"
											},
											{
												"body": {
													"nativeSrc": "17738:371:6",
													"nodeType": "YulBlock",
													"src": "17738:371:6",
													"statements": [
														{
															"nativeSrc": "17748:27:6",
															"nodeType": "YulAssignment",
															"src": "17748:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17760:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "17760:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17771:3:6",
																		"nodeType": "YulLiteral",
																		"src": "17771:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17756:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "17756:3:6"
																},
																"nativeSrc": "17756:19:6",
																"nodeType": "YulFunctionCall",
																"src": "17756:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17748:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "17748:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "17829:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "17829:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17842:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "17842:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17853:1:6",
																				"nodeType": "YulLiteral",
																				"src": "17853:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17838:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "17838:3:6"
																		},
																		"nativeSrc": "17838:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "17838:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "17785:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "17785:43:6"
																},
																"nativeSrc": "17785:71:6",
																"nodeType": "YulFunctionCall",
																"src": "17785:71:6"
															},
															"nativeSrc": "17785:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "17785:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "17910:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "17910:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17923:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "17923:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17934:2:6",
																				"nodeType": "YulLiteral",
																				"src": "17934:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17919:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "17919:3:6"
																		},
																		"nativeSrc": "17919:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "17919:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "17866:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "17866:43:6"
																},
																"nativeSrc": "17866:72:6",
																"nodeType": "YulFunctionCall",
																"src": "17866:72:6"
															},
															"nativeSrc": "17866:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "17866:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "17992:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "17992:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18005:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "18005:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18016:2:6",
																				"nodeType": "YulLiteral",
																				"src": "18016:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18001:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "18001:3:6"
																		},
																		"nativeSrc": "18001:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "18001:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "17948:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "17948:43:6"
																},
																"nativeSrc": "17948:72:6",
																"nodeType": "YulFunctionCall",
																"src": "17948:72:6"
															},
															"nativeSrc": "17948:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "17948:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "18074:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "18074:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18087:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "18087:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18098:2:6",
																				"nodeType": "YulLiteral",
																				"src": "18098:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18083:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "18083:3:6"
																		},
																		"nativeSrc": "18083:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "18083:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "18030:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "18030:43:6"
																},
																"nativeSrc": "18030:72:6",
																"nodeType": "YulFunctionCall",
																"src": "18030:72:6"
															},
															"nativeSrc": "18030:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "18030:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_address_t_uint256_t_address__to_t_uint256_t_address_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "17556:553:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17686:9:6",
														"nodeType": "YulTypedName",
														"src": "17686:9:6",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "17698:6:6",
														"nodeType": "YulTypedName",
														"src": "17698:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "17706:6:6",
														"nodeType": "YulTypedName",
														"src": "17706:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "17714:6:6",
														"nodeType": "YulTypedName",
														"src": "17714:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "17722:6:6",
														"nodeType": "YulTypedName",
														"src": "17722:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17733:4:6",
														"nodeType": "YulTypedName",
														"src": "17733:4:6",
														"type": ""
													}
												],
												"src": "17556:553:6"
											},
											{
												"body": {
													"nativeSrc": "18221:73:6",
													"nodeType": "YulBlock",
													"src": "18221:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "18243:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "18243:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18251:1:6",
																				"nodeType": "YulLiteral",
																				"src": "18251:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18239:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "18239:3:6"
																		},
																		"nativeSrc": "18239:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "18239:14:6"
																	},
																	{
																		"hexValue": "494e53554646494349454e545f4c49515549444954595f4d494e544544",
																		"kind": "string",
																		"nativeSrc": "18255:31:6",
																		"nodeType": "YulLiteral",
																		"src": "18255:31:6",
																		"type": "",
																		"value": "INSUFFICIENT_LIQUIDITY_MINTED"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18232:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "18232:6:6"
																},
																"nativeSrc": "18232:55:6",
																"nodeType": "YulFunctionCall",
																"src": "18232:55:6"
															},
															"nativeSrc": "18232:55:6",
															"nodeType": "YulExpressionStatement",
															"src": "18232:55:6"
														}
													]
												},
												"name": "store_literal_in_memory_56a253623294f4f4de6a9841388f033e113a22d6b37d1e786db69a7172923f8c",
												"nativeSrc": "18115:179:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "18213:6:6",
														"nodeType": "YulTypedName",
														"src": "18213:6:6",
														"type": ""
													}
												],
												"src": "18115:179:6"
											},
											{
												"body": {
													"nativeSrc": "18446:220:6",
													"nodeType": "YulBlock",
													"src": "18446:220:6",
													"statements": [
														{
															"nativeSrc": "18456:74:6",
															"nodeType": "YulAssignment",
															"src": "18456:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18522:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "18522:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18527:2:6",
																		"nodeType": "YulLiteral",
																		"src": "18527:2:6",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18463:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "18463:58:6"
																},
																"nativeSrc": "18463:67:6",
																"nodeType": "YulFunctionCall",
																"src": "18463:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18456:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "18456:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18628:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "18628:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_56a253623294f4f4de6a9841388f033e113a22d6b37d1e786db69a7172923f8c",
																	"nativeSrc": "18539:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "18539:88:6"
																},
																"nativeSrc": "18539:93:6",
																"nodeType": "YulFunctionCall",
																"src": "18539:93:6"
															},
															"nativeSrc": "18539:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "18539:93:6"
														},
														{
															"nativeSrc": "18641:19:6",
															"nodeType": "YulAssignment",
															"src": "18641:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18652:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "18652:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18657:2:6",
																		"nodeType": "YulLiteral",
																		"src": "18657:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18648:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "18648:3:6"
																},
																"nativeSrc": "18648:12:6",
																"nodeType": "YulFunctionCall",
																"src": "18648:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18641:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "18641:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_56a253623294f4f4de6a9841388f033e113a22d6b37d1e786db69a7172923f8c_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "18300:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18434:3:6",
														"nodeType": "YulTypedName",
														"src": "18434:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18442:3:6",
														"nodeType": "YulTypedName",
														"src": "18442:3:6",
														"type": ""
													}
												],
												"src": "18300:366:6"
											},
											{
												"body": {
													"nativeSrc": "18843:248:6",
													"nodeType": "YulBlock",
													"src": "18843:248:6",
													"statements": [
														{
															"nativeSrc": "18853:26:6",
															"nodeType": "YulAssignment",
															"src": "18853:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18865:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "18865:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18876:2:6",
																		"nodeType": "YulLiteral",
																		"src": "18876:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18861:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "18861:3:6"
																},
																"nativeSrc": "18861:18:6",
																"nodeType": "YulFunctionCall",
																"src": "18861:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18853:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "18853:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18900:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "18900:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18911:1:6",
																				"nodeType": "YulLiteral",
																				"src": "18911:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18896:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "18896:3:6"
																		},
																		"nativeSrc": "18896:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "18896:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "18919:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "18919:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18925:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "18925:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18915:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "18915:3:6"
																		},
																		"nativeSrc": "18915:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "18915:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18889:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "18889:6:6"
																},
																"nativeSrc": "18889:47:6",
																"nodeType": "YulFunctionCall",
																"src": "18889:47:6"
															},
															"nativeSrc": "18889:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "18889:47:6"
														},
														{
															"nativeSrc": "18945:139:6",
															"nodeType": "YulAssignment",
															"src": "18945:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "19079:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "19079:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_56a253623294f4f4de6a9841388f033e113a22d6b37d1e786db69a7172923f8c_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18953:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "18953:124:6"
																},
																"nativeSrc": "18953:131:6",
																"nodeType": "YulFunctionCall",
																"src": "18953:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18945:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "18945:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_56a253623294f4f4de6a9841388f033e113a22d6b37d1e786db69a7172923f8c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "18672:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18823:9:6",
														"nodeType": "YulTypedName",
														"src": "18823:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18838:4:6",
														"nodeType": "YulTypedName",
														"src": "18838:4:6",
														"type": ""
													}
												],
												"src": "18672:419:6"
											},
											{
												"body": {
													"nativeSrc": "19251:288:6",
													"nodeType": "YulBlock",
													"src": "19251:288:6",
													"statements": [
														{
															"nativeSrc": "19261:26:6",
															"nodeType": "YulAssignment",
															"src": "19261:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19273:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "19273:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19284:2:6",
																		"nodeType": "YulLiteral",
																		"src": "19284:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19269:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "19269:3:6"
																},
																"nativeSrc": "19269:18:6",
																"nodeType": "YulFunctionCall",
																"src": "19269:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19261:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "19261:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "19341:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "19341:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19354:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "19354:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19365:1:6",
																				"nodeType": "YulLiteral",
																				"src": "19365:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19350:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "19350:3:6"
																		},
																		"nativeSrc": "19350:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "19350:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "19297:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "19297:43:6"
																},
																"nativeSrc": "19297:71:6",
																"nodeType": "YulFunctionCall",
																"src": "19297:71:6"
															},
															"nativeSrc": "19297:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "19297:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "19422:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "19422:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19435:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "19435:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19446:2:6",
																				"nodeType": "YulLiteral",
																				"src": "19446:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19431:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "19431:3:6"
																		},
																		"nativeSrc": "19431:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "19431:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "19378:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "19378:43:6"
																},
																"nativeSrc": "19378:72:6",
																"nodeType": "YulFunctionCall",
																"src": "19378:72:6"
															},
															"nativeSrc": "19378:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "19378:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "19504:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "19504:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19517:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "19517:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19528:2:6",
																				"nodeType": "YulLiteral",
																				"src": "19528:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19513:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "19513:3:6"
																		},
																		"nativeSrc": "19513:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "19513:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "19460:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "19460:43:6"
																},
																"nativeSrc": "19460:72:6",
																"nodeType": "YulFunctionCall",
																"src": "19460:72:6"
															},
															"nativeSrc": "19460:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "19460:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "19097:442:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19207:9:6",
														"nodeType": "YulTypedName",
														"src": "19207:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "19219:6:6",
														"nodeType": "YulTypedName",
														"src": "19219:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "19227:6:6",
														"nodeType": "YulTypedName",
														"src": "19227:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "19235:6:6",
														"nodeType": "YulTypedName",
														"src": "19235:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19246:4:6",
														"nodeType": "YulTypedName",
														"src": "19246:4:6",
														"type": ""
													}
												],
												"src": "19097:442:6"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$729_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$729_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$729_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$729__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$729_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_contract$_IERC20_$729(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IERC20_$729(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$729(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IERC20_$729(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_IERC20_$729(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_contract$_IERC20_$729t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_contract$_IERC20_$729(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_contract$_IERC20_$729__to_t_uint256_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_contract$_IERC20_$729_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_e8788a811b2f03c33c54d190798bfa174d3e97deda56c09c1df2080dcc8d5158(memPtr) {\n\n        mstore(add(memPtr, 0), \"INSUFFICIENT_AMOUNT\")\n\n    }\n\n    function abi_encode_t_stringliteral_e8788a811b2f03c33c54d190798bfa174d3e97deda56c09c1df2080dcc8d5158_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_e8788a811b2f03c33c54d190798bfa174d3e97deda56c09c1df2080dcc8d5158(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e8788a811b2f03c33c54d190798bfa174d3e97deda56c09c1df2080dcc8d5158__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e8788a811b2f03c33c54d190798bfa174d3e97deda56c09c1df2080dcc8d5158_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_e8d3230d72418d9aed77f45ee412f45396c3f3cd599a1a457d8130d57af1a83e(memPtr) {\n\n        mstore(add(memPtr, 0), \"INSUFFICIENT_LIQUIDITY\")\n\n    }\n\n    function abi_encode_t_stringliteral_e8d3230d72418d9aed77f45ee412f45396c3f3cd599a1a457d8130d57af1a83e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_e8d3230d72418d9aed77f45ee412f45396c3f3cd599a1a457d8130d57af1a83e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e8d3230d72418d9aed77f45ee412f45396c3f3cd599a1a457d8130d57af1a83e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e8d3230d72418d9aed77f45ee412f45396c3f3cd599a1a457d8130d57af1a83e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_bbbb4868217c0daeb6721d77d471da8aa8a80672b4258dd2de9d7ccde9bf2146(memPtr) {\n\n        mstore(add(memPtr, 0), \"INSUFFICIENT_OUTPUT_AMOUNT\")\n\n    }\n\n    function abi_encode_t_stringliteral_bbbb4868217c0daeb6721d77d471da8aa8a80672b4258dd2de9d7ccde9bf2146_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_bbbb4868217c0daeb6721d77d471da8aa8a80672b4258dd2de9d7ccde9bf2146(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_bbbb4868217c0daeb6721d77d471da8aa8a80672b4258dd2de9d7ccde9bf2146__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_bbbb4868217c0daeb6721d77d471da8aa8a80672b4258dd2de9d7ccde9bf2146_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_436b5627177a9781148596ddddd93f72d53dd82575a018216d5aaf2a8219ec9e(memPtr) {\n\n        mstore(add(memPtr, 0), \"INVALID_TOKEN\")\n\n    }\n\n    function abi_encode_t_stringliteral_436b5627177a9781148596ddddd93f72d53dd82575a018216d5aaf2a8219ec9e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n        store_literal_in_memory_436b5627177a9781148596ddddd93f72d53dd82575a018216d5aaf2a8219ec9e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_436b5627177a9781148596ddddd93f72d53dd82575a018216d5aaf2a8219ec9e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_436b5627177a9781148596ddddd93f72d53dd82575a018216d5aaf2a8219ec9e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_address_t_uint256_t_address__to_t_uint256_t_address_t_uint256_t_address__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_address_to_t_address_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function store_literal_in_memory_56a253623294f4f4de6a9841388f033e113a22d6b37d1e786db69a7172923f8c(memPtr) {\n\n        mstore(add(memPtr, 0), \"INSUFFICIENT_LIQUIDITY_MINTED\")\n\n    }\n\n    function abi_encode_t_stringliteral_56a253623294f4f4de6a9841388f033e113a22d6b37d1e786db69a7172923f8c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_56a253623294f4f4de6a9841388f033e113a22d6b37d1e786db69a7172923f8c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_56a253623294f4f4de6a9841388f033e113a22d6b37d1e786db69a7172923f8c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_56a253623294f4f4de6a9841388f033e113a22d6b37d1e786db69a7172923f8c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x109 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x443CB4BC GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0x9C8F9F23 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x9C8F9F23 EQ PUSH2 0x2D0 JUMPI DUP1 PUSH4 0x9CD441DA EQ PUSH2 0x301 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x331 JUMPI DUP1 PUSH4 0xD21220A7 EQ PUSH2 0x361 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x37F JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x443CB4BC EQ PUSH2 0x246 JUMPI DUP1 PUSH4 0x5A76F25E EQ PUSH2 0x264 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x282 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2B2 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1C7 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1F7 JUMPI DUP1 PUSH4 0x43264349 EQ PUSH2 0x215 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x54D50D4 EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x15B JUMPI DUP1 PUSH4 0xDFE1681 EQ PUSH2 0x18B JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x127 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x122 SWAP2 SWAP1 PUSH2 0x1C99 JUMP JUMPDEST PUSH2 0x3AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x134 SWAP2 SWAP1 PUSH2 0x1CF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x145 PUSH2 0x46A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x152 SWAP2 SWAP1 PUSH2 0x1D81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x175 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x170 SWAP2 SWAP1 PUSH2 0x1DFB JUMP JUMPDEST PUSH2 0x4FA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x182 SWAP2 SWAP1 PUSH2 0x1E53 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x193 PUSH2 0x51C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A0 SWAP2 SWAP1 PUSH2 0x1EC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B1 PUSH2 0x541 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BE SWAP2 SWAP1 PUSH2 0x1CF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DC SWAP2 SWAP1 PUSH2 0x1EE0 JUMP JUMPDEST PUSH2 0x54A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EE SWAP2 SWAP1 PUSH2 0x1E53 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FF PUSH2 0x578 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20C SWAP2 SWAP1 PUSH2 0x1F4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22A SWAP2 SWAP1 PUSH2 0x1F9F JUMP JUMPDEST PUSH2 0x580 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP3 SWAP2 SWAP1 PUSH2 0x1FEF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24E PUSH2 0xB80 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25B SWAP2 SWAP1 PUSH2 0x1CF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26C PUSH2 0xB86 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x279 SWAP2 SWAP1 PUSH2 0x1CF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x297 SWAP2 SWAP1 PUSH2 0x2016 JUMP JUMPDEST PUSH2 0xB8C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A9 SWAP2 SWAP1 PUSH2 0x1CF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BA PUSH2 0xBD1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C7 SWAP2 SWAP1 PUSH2 0x1D81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2EA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E5 SWAP2 SWAP1 PUSH2 0x2041 JUMP JUMPDEST PUSH2 0xC61 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F8 SWAP3 SWAP2 SWAP1 PUSH2 0x206C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x316 SWAP2 SWAP1 PUSH2 0x2093 JUMP JUMPDEST PUSH2 0x10FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x328 SWAP2 SWAP1 PUSH2 0x1CF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x34B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x346 SWAP2 SWAP1 PUSH2 0x1DFB JUMP JUMPDEST PUSH2 0x1489 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x358 SWAP2 SWAP1 PUSH2 0x1E53 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x369 PUSH2 0x14AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x376 SWAP2 SWAP1 PUSH2 0x1EC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x399 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x394 SWAP2 SWAP1 PUSH2 0x20D1 JUMP JUMPDEST PUSH2 0x14D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A6 SWAP2 SWAP1 PUSH2 0x1CF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 DUP5 GT PUSH2 0x3F2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3E9 SWAP1 PUSH2 0x2159 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP4 GT DUP1 ISZERO PUSH2 0x400 JUMPI POP PUSH0 DUP3 GT JUMPDEST PUSH2 0x43F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x436 SWAP1 PUSH2 0x21C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 DUP4 PUSH2 0x44B SWAP2 SWAP1 PUSH2 0x220C JUMP JUMPDEST DUP3 DUP6 PUSH2 0x457 SWAP2 SWAP1 PUSH2 0x223F JUMP JUMPDEST PUSH2 0x461 SWAP2 SWAP1 PUSH2 0x22AD JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x479 SWAP1 PUSH2 0x230A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4A5 SWAP1 PUSH2 0x230A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4F0 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4C7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4F0 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4D3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x504 PUSH2 0x1552 JUMP JUMPDEST SWAP1 POP PUSH2 0x511 DUP2 DUP6 DUP6 PUSH2 0x1559 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x554 PUSH2 0x1552 JUMP JUMPDEST SWAP1 POP PUSH2 0x561 DUP6 DUP3 DUP6 PUSH2 0x156B JUMP JUMPDEST PUSH2 0x56C DUP6 DUP6 DUP6 PUSH2 0x15FD JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 GT PUSH2 0x5C4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5BB SWAP1 PUSH2 0x2384 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x66B JUMPI POP PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x6AA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A1 SWAP1 PUSH2 0x23EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x874 JUMPI PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH2 0x731 DUP6 PUSH1 0x7 SLOAD PUSH1 0x8 SLOAD PUSH2 0x3AF JUMP JUMPDEST SWAP2 POP DUP3 DUP3 GT PUSH2 0x775 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x76C SWAP1 PUSH2 0x2384 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP9 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7B2 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2419 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7CE JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7F2 SWAP2 SWAP1 PUSH2 0x2478 JUMP JUMPDEST POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82E SWAP3 SWAP2 SWAP1 PUSH2 0x24A3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x84A JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x86E SWAP2 SWAP1 PUSH2 0x2478 JUMP JUMPDEST POP PUSH2 0x9E6 JUMP JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH2 0x8A7 DUP6 PUSH1 0x8 SLOAD PUSH1 0x7 SLOAD PUSH2 0x3AF JUMP JUMPDEST SWAP2 POP DUP3 DUP3 GT PUSH2 0x8EB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8E2 SWAP1 PUSH2 0x2384 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP9 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x928 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2419 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x944 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x968 SWAP2 SWAP1 PUSH2 0x2478 JUMP JUMPDEST POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9A4 SWAP3 SWAP2 SWAP1 PUSH2 0x24A3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9C0 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9E4 SWAP2 SWAP1 PUSH2 0x2478 JUMP JUMPDEST POP JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA40 SWAP2 SWAP1 PUSH2 0x24CA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA5B JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA7F SWAP2 SWAP1 PUSH2 0x24F7 JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xADF SWAP2 SWAP1 PUSH2 0x24CA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAFA JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB1E SWAP2 SWAP1 PUSH2 0x24F7 JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x24043855BFBFEA0CCEA141E5A73D7116BF0BFE083EA900A791F4B407FF03E525 DUP7 DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0xB70 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2522 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xBE0 SWAP1 PUSH2 0x230A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xC0C SWAP1 PUSH2 0x230A JUMP JUMPDEST DUP1 ISZERO PUSH2 0xC57 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xC2E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC57 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC3A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCBE SWAP2 SWAP1 PUSH2 0x24CA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCD9 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCFD SWAP2 SWAP1 PUSH2 0x24F7 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD5A SWAP2 SWAP1 PUSH2 0x24CA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD75 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD99 SWAP2 SWAP1 PUSH2 0x24F7 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xDA4 PUSH2 0x541 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP8 PUSH2 0xDB3 SWAP2 SWAP1 PUSH2 0x223F JUMP JUMPDEST PUSH2 0xDBD SWAP2 SWAP1 PUSH2 0x22AD JUMP JUMPDEST SWAP5 POP DUP1 DUP3 DUP8 PUSH2 0xDCC SWAP2 SWAP1 PUSH2 0x223F JUMP JUMPDEST PUSH2 0xDD6 SWAP2 SWAP1 PUSH2 0x22AD JUMP JUMPDEST SWAP4 POP PUSH0 DUP6 GT DUP1 ISZERO PUSH2 0xDE6 JUMPI POP PUSH0 DUP5 GT JUMPDEST PUSH2 0xE25 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE1C SWAP1 PUSH2 0x25AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE2F CALLER DUP8 PUSH2 0x16ED JUMP JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP8 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE8B SWAP3 SWAP2 SWAP1 PUSH2 0x24A3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xEA7 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xECB SWAP2 SWAP1 PUSH2 0x2478 JUMP JUMPDEST POP PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP7 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF28 SWAP3 SWAP2 SWAP1 PUSH2 0x24A3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF44 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF68 SWAP2 SWAP1 PUSH2 0x2478 JUMP JUMPDEST POP PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFC3 SWAP2 SWAP1 PUSH2 0x24CA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xFDE JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1002 SWAP2 SWAP1 PUSH2 0x24F7 JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1062 SWAP2 SWAP1 PUSH2 0x24CA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x107D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10A1 SWAP2 SWAP1 PUSH2 0x24F7 JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x49995E5DD6158CF69AD3E9777C46755A1A826A446C6416992167462DAD033B2A DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x10EF SWAP3 SWAP2 SWAP1 PUSH2 0x206C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x115E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2419 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x117A JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x119E SWAP2 SWAP1 PUSH2 0x2478 JUMP JUMPDEST POP PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11FD SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2419 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1219 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x123D SWAP2 SWAP1 PUSH2 0x2478 JUMP JUMPDEST POP PUSH0 PUSH2 0x1247 PUSH2 0x541 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 SUB PUSH2 0x126B JUMPI PUSH2 0x1264 DUP4 DUP6 PUSH2 0x125F SWAP2 SWAP1 PUSH2 0x223F JUMP JUMPDEST PUSH2 0x176C JUMP JUMPDEST SWAP2 POP PUSH2 0x12A8 JUMP JUMPDEST PUSH2 0x12A5 PUSH1 0x7 SLOAD DUP3 DUP7 PUSH2 0x127D SWAP2 SWAP1 PUSH2 0x223F JUMP JUMPDEST PUSH2 0x1287 SWAP2 SWAP1 PUSH2 0x22AD JUMP JUMPDEST PUSH1 0x8 SLOAD DUP4 DUP7 PUSH2 0x1296 SWAP2 SWAP1 PUSH2 0x223F JUMP JUMPDEST PUSH2 0x12A0 SWAP2 SWAP1 PUSH2 0x22AD JUMP JUMPDEST PUSH2 0x17E3 JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH0 DUP3 GT PUSH2 0x12EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12E1 SWAP1 PUSH2 0x25AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1344 SWAP2 SWAP1 PUSH2 0x24CA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x135F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1383 SWAP2 SWAP1 PUSH2 0x24F7 JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13E3 SWAP2 SWAP1 PUSH2 0x24CA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x13FE JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1422 SWAP2 SWAP1 PUSH2 0x24F7 JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH2 0x1432 CALLER DUP4 PUSH2 0x17FB JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4C209B5FC8AD50758F13E2E1088BA56A560DFF690A1C6FEF26394F4C03821C4F DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x147A SWAP3 SWAP2 SWAP1 PUSH2 0x206C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x1493 PUSH2 0x1552 JUMP JUMPDEST SWAP1 POP PUSH2 0x14A0 DUP2 DUP6 DUP6 PUSH2 0x15FD JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1566 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x187A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1576 DUP5 DUP5 PUSH2 0x14D0 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x15F7 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x15E8 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15DF SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x25CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x15F6 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x187A JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x166D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1664 SWAP2 SWAP1 PUSH2 0x24CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x16DD JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16D4 SWAP2 SWAP1 PUSH2 0x24CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x16E8 DUP4 DUP4 DUP4 PUSH2 0x1A49 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x175D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1754 SWAP2 SWAP1 PUSH2 0x24CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1768 DUP3 PUSH0 DUP4 PUSH2 0x1A49 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 DUP3 GT ISZERO PUSH2 0x17D1 JUMPI DUP2 SWAP1 POP PUSH0 PUSH1 0x1 PUSH1 0x2 DUP5 PUSH2 0x1789 SWAP2 SWAP1 PUSH2 0x22AD JUMP JUMPDEST PUSH2 0x1793 SWAP2 SWAP1 PUSH2 0x220C JUMP JUMPDEST SWAP1 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x17CB JUMPI DUP1 SWAP2 POP PUSH1 0x2 DUP2 DUP3 DUP6 PUSH2 0x17B0 SWAP2 SWAP1 PUSH2 0x22AD JUMP JUMPDEST PUSH2 0x17BA SWAP2 SWAP1 PUSH2 0x220C JUMP JUMPDEST PUSH2 0x17C4 SWAP2 SWAP1 PUSH2 0x22AD JUMP JUMPDEST SWAP1 POP PUSH2 0x1796 JUMP JUMPDEST POP PUSH2 0x17DE JUMP JUMPDEST PUSH0 DUP3 EQ PUSH2 0x17DD JUMPI PUSH1 0x1 SWAP1 POP JUMPDEST JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 DUP4 GT PUSH2 0x17F1 JUMPI DUP3 PUSH2 0x17F3 JUMP JUMPDEST DUP2 JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x186B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1862 SWAP2 SWAP1 PUSH2 0x24CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1876 PUSH0 DUP4 DUP4 PUSH2 0x1A49 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x18EA JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18E1 SWAP2 SWAP1 PUSH2 0x24CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x195A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1951 SWAP2 SWAP1 PUSH2 0x24CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1A43 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1A3A SWAP2 SWAP1 PUSH2 0x1CF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1A99 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1A8D SWAP2 SWAP1 PUSH2 0x220C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1B67 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1B22 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B19 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x25CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1BAE JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1BF8 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1C55 SWAP2 SWAP1 PUSH2 0x1CF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C78 DUP2 PUSH2 0x1C66 JUMP JUMPDEST DUP2 EQ PUSH2 0x1C82 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C93 DUP2 PUSH2 0x1C6F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1CB0 JUMPI PUSH2 0x1CAF PUSH2 0x1C62 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1CBD DUP7 DUP3 DUP8 ADD PUSH2 0x1C85 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1CCE DUP7 DUP3 DUP8 ADD PUSH2 0x1C85 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1CDF DUP7 DUP3 DUP8 ADD PUSH2 0x1C85 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x1CF2 DUP2 PUSH2 0x1C66 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D0B PUSH0 DUP4 ADD DUP5 PUSH2 0x1CE9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1D53 DUP3 PUSH2 0x1D11 JUMP JUMPDEST PUSH2 0x1D5D DUP2 DUP6 PUSH2 0x1D1B JUMP JUMPDEST SWAP4 POP PUSH2 0x1D6D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1D2B JUMP JUMPDEST PUSH2 0x1D76 DUP2 PUSH2 0x1D39 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D99 DUP2 DUP5 PUSH2 0x1D49 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1DCA DUP3 PUSH2 0x1DA1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DDA DUP2 PUSH2 0x1DC0 JUMP JUMPDEST DUP2 EQ PUSH2 0x1DE4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1DF5 DUP2 PUSH2 0x1DD1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E11 JUMPI PUSH2 0x1E10 PUSH2 0x1C62 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E1E DUP6 DUP3 DUP7 ADD PUSH2 0x1DE7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1E2F DUP6 DUP3 DUP7 ADD PUSH2 0x1C85 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E4D DUP2 PUSH2 0x1E39 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E66 PUSH0 DUP4 ADD DUP5 PUSH2 0x1E44 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1E8F PUSH2 0x1E8A PUSH2 0x1E85 DUP5 PUSH2 0x1DA1 JUMP JUMPDEST PUSH2 0x1E6C JUMP JUMPDEST PUSH2 0x1DA1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1EA0 DUP3 PUSH2 0x1E75 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1EB1 DUP3 PUSH2 0x1E96 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1EC1 DUP2 PUSH2 0x1EA7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1EDA PUSH0 DUP4 ADD DUP5 PUSH2 0x1EB8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1EF7 JUMPI PUSH2 0x1EF6 PUSH2 0x1C62 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F04 DUP7 DUP3 DUP8 ADD PUSH2 0x1DE7 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1F15 DUP7 DUP3 DUP8 ADD PUSH2 0x1DE7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1F26 DUP7 DUP3 DUP8 ADD PUSH2 0x1C85 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F45 DUP2 PUSH2 0x1F30 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F5E PUSH0 DUP4 ADD DUP5 PUSH2 0x1F3C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1F6E DUP3 PUSH2 0x1DC0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F7E DUP2 PUSH2 0x1F64 JUMP JUMPDEST DUP2 EQ PUSH2 0x1F88 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1F99 DUP2 PUSH2 0x1F75 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1FB6 JUMPI PUSH2 0x1FB5 PUSH2 0x1C62 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1FC3 DUP7 DUP3 DUP8 ADD PUSH2 0x1C85 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1FD4 DUP7 DUP3 DUP8 ADD PUSH2 0x1F8B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1FE5 DUP7 DUP3 DUP8 ADD PUSH2 0x1C85 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2002 PUSH0 DUP4 ADD DUP6 PUSH2 0x1CE9 JUMP JUMPDEST PUSH2 0x200F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1EB8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x202B JUMPI PUSH2 0x202A PUSH2 0x1C62 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2038 DUP5 DUP3 DUP6 ADD PUSH2 0x1DE7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2056 JUMPI PUSH2 0x2055 PUSH2 0x1C62 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2063 DUP5 DUP3 DUP6 ADD PUSH2 0x1C85 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x207F PUSH0 DUP4 ADD DUP6 PUSH2 0x1CE9 JUMP JUMPDEST PUSH2 0x208C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1CE9 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x20A9 JUMPI PUSH2 0x20A8 PUSH2 0x1C62 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x20B6 DUP6 DUP3 DUP7 ADD PUSH2 0x1C85 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x20C7 DUP6 DUP3 DUP7 ADD PUSH2 0x1C85 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x20E7 JUMPI PUSH2 0x20E6 PUSH2 0x1C62 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x20F4 DUP6 DUP3 DUP7 ADD PUSH2 0x1DE7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2105 DUP6 DUP3 DUP7 ADD PUSH2 0x1DE7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x494E53554646494349454E545F414D4F554E5400000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2143 PUSH1 0x13 DUP4 PUSH2 0x1D1B JUMP JUMPDEST SWAP2 POP PUSH2 0x214E DUP3 PUSH2 0x210F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2170 DUP2 PUSH2 0x2137 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x494E53554646494349454E545F4C495155494449545900000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x21AB PUSH1 0x16 DUP4 PUSH2 0x1D1B JUMP JUMPDEST SWAP2 POP PUSH2 0x21B6 DUP3 PUSH2 0x2177 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x21D8 DUP2 PUSH2 0x219F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2216 DUP3 PUSH2 0x1C66 JUMP JUMPDEST SWAP2 POP PUSH2 0x2221 DUP4 PUSH2 0x1C66 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2239 JUMPI PUSH2 0x2238 PUSH2 0x21DF JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2249 DUP3 PUSH2 0x1C66 JUMP JUMPDEST SWAP2 POP PUSH2 0x2254 DUP4 PUSH2 0x1C66 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2262 DUP2 PUSH2 0x1C66 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2279 JUMPI PUSH2 0x2278 PUSH2 0x21DF JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x22B7 DUP3 PUSH2 0x1C66 JUMP JUMPDEST SWAP2 POP PUSH2 0x22C2 DUP4 PUSH2 0x1C66 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x22D2 JUMPI PUSH2 0x22D1 PUSH2 0x2280 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2321 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2334 JUMPI PUSH2 0x2333 PUSH2 0x22DD JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x494E53554646494349454E545F4F55545055545F414D4F554E54000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x236E PUSH1 0x1A DUP4 PUSH2 0x1D1B JUMP JUMPDEST SWAP2 POP PUSH2 0x2379 DUP3 PUSH2 0x233A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x239B DUP2 PUSH2 0x2362 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x494E56414C49445F544F4B454E00000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x23D6 PUSH1 0xD DUP4 PUSH2 0x1D1B JUMP JUMPDEST SWAP2 POP PUSH2 0x23E1 DUP3 PUSH2 0x23A2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2403 DUP2 PUSH2 0x23CA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2413 DUP2 PUSH2 0x1DC0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x242C PUSH0 DUP4 ADD DUP7 PUSH2 0x240A JUMP JUMPDEST PUSH2 0x2439 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x240A JUMP JUMPDEST PUSH2 0x2446 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1CE9 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x2457 DUP2 PUSH2 0x1E39 JUMP JUMPDEST DUP2 EQ PUSH2 0x2461 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2472 DUP2 PUSH2 0x244E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x248D JUMPI PUSH2 0x248C PUSH2 0x1C62 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x249A DUP5 DUP3 DUP6 ADD PUSH2 0x2464 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x24B6 PUSH0 DUP4 ADD DUP6 PUSH2 0x240A JUMP JUMPDEST PUSH2 0x24C3 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1CE9 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x24DD PUSH0 DUP4 ADD DUP5 PUSH2 0x240A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x24F1 DUP2 PUSH2 0x1C6F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x250C JUMPI PUSH2 0x250B PUSH2 0x1C62 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2519 DUP5 DUP3 DUP6 ADD PUSH2 0x24E3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2535 PUSH0 DUP4 ADD DUP8 PUSH2 0x1CE9 JUMP JUMPDEST PUSH2 0x2542 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x240A JUMP JUMPDEST PUSH2 0x254F PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1CE9 JUMP JUMPDEST PUSH2 0x255C PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x240A JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x494E53554646494349454E545F4C49515549444954595F4D494E544544000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2599 PUSH1 0x1D DUP4 PUSH2 0x1D1B JUMP JUMPDEST SWAP2 POP PUSH2 0x25A4 DUP3 PUSH2 0x2565 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x25C6 DUP2 PUSH2 0x258D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x25E0 PUSH0 DUP4 ADD DUP7 PUSH2 0x240A JUMP JUMPDEST PUSH2 0x25ED PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1CE9 JUMP JUMPDEST PUSH2 0x25FA PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1CE9 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAB 0xBD 0xA7 0xE4 DUP15 REVERT EXTCODEHASH 0xCD 0xE7 OR PUSH10 0xAAC16418257904E48201 0xF PUSH25 0xE51AC5CFA70CCE265964736F6C634300081A00330000000000 ",
							"sourceMap": "432:4822:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3107:319;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2074:89:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4293:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;525:20:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3144:97:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5039:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3002:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3550:1162:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;611:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;638;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3299:116:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2276:93;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2160:910:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;1022:961;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3610:178:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;552:20:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3846:140:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3107:319:5;3198:14;3244:1;3233:8;:12;3225:44;;;;;;;;;;;;:::i;:::-;;;;;;;;;3300:1;3288:9;:13;:31;;;;;3318:1;3305:10;:14;3288:31;3280:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;3409:8;3397:9;:20;;;;:::i;:::-;3383:10;3372:8;:21;;;;:::i;:::-;:46;;;;:::i;:::-;3360:58;;3107:319;;;;;:::o;2074:89:1:-;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;4293:186::-;4366:4;4382:13;4398:12;:10;:12::i;:::-;4382:28;;4420:31;4429:5;4436:7;4445:5;4420:8;:31::i;:::-;4468:4;4461:11;;;4293:186;;;;:::o;525:20:5:-;;;;;;;;;;;;;:::o;3144:97:1:-;3196:7;3222:12;;3215:19;;3144:97;:::o;5039:244::-;5126:4;5142:15;5160:12;:10;:12::i;:::-;5142:30;;5182:37;5198:4;5204:7;5213:5;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;:::-;5272:4;5265:11;;;5039:244;;;;;:::o;3002:82::-;3051:5;3075:2;3068:9;;3002:82;:::o;3550:1162:5:-;3631:14;3647:15;3694:1;3683:8;:12;3675:51;;;;;;;;;;;;:::i;:::-;;;;;;;;;3756:6;;;;;;;;;;;3745:17;;:7;:17;;;:38;;;;3777:6;;;;;;;;;;;3766:17;;:7;:17;;;3745:38;3737:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;3829:6;;;;;;;;;;;3818:17;;:7;:17;;;3814:663;;3863:6;;;;;;;;;;;3852:17;;3896:42;3909:8;3919;;3929;;3896:12;:42::i;:::-;3884:54;;3973:11;3961:9;:23;3953:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;4030:7;:20;;;4051:10;4071:4;4078:8;4030:57;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4102:8;:17;;;4120:10;4132:9;4102:40;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3814:663;;;4186:6;;;;;;;;;;;4175:17;;4219:42;4232:8;4242;;4252;;4219:12;:42::i;:::-;4207:54;;4296:11;4284:9;:23;4276:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;4353:7;:20;;;4374:10;4394:4;4401:8;4353:57;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4425:8;:17;;;4443:10;4455:9;4425:40;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3814:663;4528:6;;;;;;;;;;;:16;;;4553:4;4528:31;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4517:8;:42;;;;4581:6;;;;;;;;;;;:16;;;4606:4;4581:31;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4570:8;:42;;;;4635:10;4630:74;;;4647:8;4665:7;4675:9;4694:8;4630:74;;;;;;;;;:::i;:::-;;;;;;;;3550:1162;;;;;;:::o;611:20::-;;;;:::o;638:::-;;;;:::o;3299:116:1:-;3364:7;3390:9;:18;3400:7;3390:18;;;;;;;;;;;;;;;;3383:25;;3299:116;;;:::o;2276:93::-;2323:13;2355:7;2348:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2276:93;:::o;2160:910:5:-;2220:12;2234;2308:14;2325:6;;;;;;;;;;;:16;;;2350:4;2325:31;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2308:48;;2367:14;2384:6;;;;;;;;;;;:16;;;2409:4;2384:31;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2367:48;;2450:17;2470:13;:11;:13::i;:::-;2450:33;;2528:12;2516:9;2504;:21;;;;:::i;:::-;:36;;;;:::i;:::-;2494:46;;2585:12;2573:9;2561;:21;;;;:::i;:::-;:36;;;;:::i;:::-;2551:46;;2628:1;2618:7;:11;:26;;;;;2643:1;2633:7;:11;2618:26;2610:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2718:28;2724:10;2736:9;2718:5;:28::i;:::-;2788:6;;;;;;;;;;;:15;;;2804:10;2816:7;2788:36;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2835:6;;;;;;;;;;;:15;;;2851:10;2863:7;2835:36;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2926:6;;;;;;;;;;;:16;;;2951:4;2926:31;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2915:8;:42;;;;2979:6;;;;;;;;;;;:16;;;3004:4;2979:31;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2968:8;:42;;;;3033:10;3028:34;;;3045:7;3054;3028:34;;;;;;;:::i;:::-;;;;;;;;2248:822;;;2160:910;;;:::o;1022:961::-;1097:14;1167:6;;;;;;;;;;;:19;;;1187:10;1207:4;1214:12;1167:60;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1238:6;;;;;;;;;;;:19;;;1258:10;1278:4;1285:12;1238:60;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1333:17;1353:13;:11;:13::i;:::-;1333:33;;1398:1;1382:12;:17;1379:220;;1428:33;1448:12;1433;:27;;;;:::i;:::-;1428:4;:33::i;:::-;1416:45;;1379:220;;;1506:81;1540:8;;1525:12;1510;:27;;;;:::i;:::-;:38;;;;:::i;:::-;1578:8;;1565:12;1550;:27;;;;:::i;:::-;:36;;;;:::i;:::-;1506:3;:81::i;:::-;1494:93;;1379:220;1639:1;1627:9;:13;1619:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;1776:6;;;;;;;;;;;:16;;;1801:4;1776:31;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1765:8;:42;;;;1829:6;;;;;;;;;;;:16;;;1854:4;1829:31;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1818:8;:42;;;;1885:28;1891:10;1903:9;1885:5;:28::i;:::-;1936:10;1931:44;;;1948:12;1962;1931:44;;;;;;;:::i;:::-;;;;;;;;1113:870;1022:961;;;;:::o;3610:178:1:-;3679:4;3695:13;3711:12;:10;:12::i;:::-;3695:28;;3733:27;3743:5;3750:2;3754:5;3733:9;:27::i;:::-;3777:4;3770:11;;;3610:178;;;;:::o;552:20:5:-;;;;;;;;;;;;;:::o;3846:140:1:-;3926:7;3952:11;:18;3964:5;3952:18;;;;;;;;;;;;;;;:27;3971:7;3952:27;;;;;;;;;;;;;;;;3945:34;;3846:140;;;;:::o;656:96:4:-;709:7;735:10;728:17;;656:96;:::o;8989:128:1:-;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;:::-;8989:128;;;:::o;10663:477::-;10762:24;10789:25;10799:5;10806:7;10789:9;:25::i;:::-;10762:52;;10848:17;10828:16;:37;10824:310;;10904:5;10885:16;:24;10881:130;;;10963:7;10972:16;10990:5;10936:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10881:130;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;:::-;10824:310;10752:388;10663:477;;;:::o;5656:300::-;5755:1;5739:18;;:4;:18;;;5735:86;;5807:1;5780:30;;;;;;;;;;;:::i;:::-;;;;;;;;5735:86;5848:1;5834:16;;:2;:16;;;5830:86;;5902:1;5873:32;;;;;;;;;;;:::i;:::-;;;;;;;;5830:86;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;:::-;5656:300;;;:::o;8247:206::-;8336:1;8317:21;;:7;:21;;;8313:89;;8388:1;8361:30;;;;;;;;;;;:::i;:::-;;;;;;;;8313:89;8411:35;8419:7;8436:1;8440:5;8411:7;:35::i;:::-;8247:206;;:::o;4720:304:5:-;4766:6;4793:1;4789;:5;4785:232;;;4815:1;4811:5;;4831:6;4848:1;4844;4840;:5;;;;:::i;:::-;:9;;;;:::i;:::-;4831:18;;4864:92;4875:1;4871;:5;4864:92;;;4901:1;4897:5;;4939:1;4934;4930;4926;:5;;;;:::i;:::-;:9;;;;:::i;:::-;4925:15;;;;:::i;:::-;4921:19;;4864:92;;;4796:171;4785:232;;;4982:1;4977;:6;4973:44;;5004:1;5000:5;;4973:44;4785:232;4720:304;;;:::o;5032:98::-;5085:6;5112:1;5108;:5;:13;;5120:1;5108:13;;;5116:1;5108:13;5104:17;;5032:98;;;;:::o;7721:208:1:-;7810:1;7791:21;;:7;:21;;;7787:91;;7864:1;7835:32;;;;;;;;;;;:::i;:::-;;;;;;;;7787:91;7887:35;7903:1;7907:7;7916:5;7887:7;:35::i;:::-;7721:208;;:::o;9949:432::-;10078:1;10061:19;;:5;:19;;;10057:89;;10132:1;10103:32;;;;;;;;;;;:::i;:::-;;;;;;;;10057:89;10178:1;10159:21;;:7;:21;;;10155:90;;10231:1;10203:31;;;;;;;;;;;:::i;:::-;;;;;;;;10155:90;10284:5;10254:11;:18;10266:5;10254:18;;;;;;;;;;;;;;;:27;10273:7;10254:27;;;;;;;;;;;;;;;:35;;;;10303:9;10299:76;;;10349:7;10333:31;;10342:5;10333:31;;;10358:5;10333:31;;;;;;:::i;:::-;;;;;;;;10299:76;9949:432;;;;:::o;6271:1107::-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;88:117:6:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:619::-;767:6;775;783;832:2;820:9;811:7;807:23;803:32;800:119;;;838:79;;:::i;:::-;800:119;958:1;983:53;1028:7;1019:6;1008:9;1004:22;983:53;:::i;:::-;973:63;;929:117;1085:2;1111:53;1156:7;1147:6;1136:9;1132:22;1111:53;:::i;:::-;1101:63;;1056:118;1213:2;1239:53;1284:7;1275:6;1264:9;1260:22;1239:53;:::i;:::-;1229:63;;1184:118;690:619;;;;;:::o;1315:118::-;1402:24;1420:5;1402:24;:::i;:::-;1397:3;1390:37;1315:118;;:::o;1439:222::-;1532:4;1570:2;1559:9;1555:18;1547:26;;1583:71;1651:1;1640:9;1636:17;1627:6;1583:71;:::i;:::-;1439:222;;;;:::o;1667:99::-;1719:6;1753:5;1747:12;1737:22;;1667:99;;;:::o;1772:169::-;1856:11;1890:6;1885:3;1878:19;1930:4;1925:3;1921:14;1906:29;;1772:169;;;;:::o;1947:139::-;2036:6;2031:3;2026;2020:23;2077:1;2068:6;2063:3;2059:16;2052:27;1947:139;;;:::o;2092:102::-;2133:6;2184:2;2180:7;2175:2;2168:5;2164:14;2160:28;2150:38;;2092:102;;;:::o;2200:377::-;2288:3;2316:39;2349:5;2316:39;:::i;:::-;2371:71;2435:6;2430:3;2371:71;:::i;:::-;2364:78;;2451:65;2509:6;2504:3;2497:4;2490:5;2486:16;2451:65;:::i;:::-;2541:29;2563:6;2541:29;:::i;:::-;2536:3;2532:39;2525:46;;2292:285;2200:377;;;;:::o;2583:313::-;2696:4;2734:2;2723:9;2719:18;2711:26;;2783:9;2777:4;2773:20;2769:1;2758:9;2754:17;2747:47;2811:78;2884:4;2875:6;2811:78;:::i;:::-;2803:86;;2583:313;;;;:::o;2902:126::-;2939:7;2979:42;2972:5;2968:54;2957:65;;2902:126;;;:::o;3034:96::-;3071:7;3100:24;3118:5;3100:24;:::i;:::-;3089:35;;3034:96;;;:::o;3136:122::-;3209:24;3227:5;3209:24;:::i;:::-;3202:5;3199:35;3189:63;;3248:1;3245;3238:12;3189:63;3136:122;:::o;3264:139::-;3310:5;3348:6;3335:20;3326:29;;3364:33;3391:5;3364:33;:::i;:::-;3264:139;;;;:::o;3409:474::-;3477:6;3485;3534:2;3522:9;3513:7;3509:23;3505:32;3502:119;;;3540:79;;:::i;:::-;3502:119;3660:1;3685:53;3730:7;3721:6;3710:9;3706:22;3685:53;:::i;:::-;3675:63;;3631:117;3787:2;3813:53;3858:7;3849:6;3838:9;3834:22;3813:53;:::i;:::-;3803:63;;3758:118;3409:474;;;;;:::o;3889:90::-;3923:7;3966:5;3959:13;3952:21;3941:32;;3889:90;;;:::o;3985:109::-;4066:21;4081:5;4066:21;:::i;:::-;4061:3;4054:34;3985:109;;:::o;4100:210::-;4187:4;4225:2;4214:9;4210:18;4202:26;;4238:65;4300:1;4289:9;4285:17;4276:6;4238:65;:::i;:::-;4100:210;;;;:::o;4316:60::-;4344:3;4365:5;4358:12;;4316:60;;;:::o;4382:142::-;4432:9;4465:53;4483:34;4492:24;4510:5;4492:24;:::i;:::-;4483:34;:::i;:::-;4465:53;:::i;:::-;4452:66;;4382:142;;;:::o;4530:126::-;4580:9;4613:37;4644:5;4613:37;:::i;:::-;4600:50;;4530:126;;;:::o;4662:140::-;4726:9;4759:37;4790:5;4759:37;:::i;:::-;4746:50;;4662:140;;;:::o;4808:159::-;4909:51;4954:5;4909:51;:::i;:::-;4904:3;4897:64;4808:159;;:::o;4973:250::-;5080:4;5118:2;5107:9;5103:18;5095:26;;5131:85;5213:1;5202:9;5198:17;5189:6;5131:85;:::i;:::-;4973:250;;;;:::o;5229:619::-;5306:6;5314;5322;5371:2;5359:9;5350:7;5346:23;5342:32;5339:119;;;5377:79;;:::i;:::-;5339:119;5497:1;5522:53;5567:7;5558:6;5547:9;5543:22;5522:53;:::i;:::-;5512:63;;5468:117;5624:2;5650:53;5695:7;5686:6;5675:9;5671:22;5650:53;:::i;:::-;5640:63;;5595:118;5752:2;5778:53;5823:7;5814:6;5803:9;5799:22;5778:53;:::i;:::-;5768:63;;5723:118;5229:619;;;;;:::o;5854:86::-;5889:7;5929:4;5922:5;5918:16;5907:27;;5854:86;;;:::o;5946:112::-;6029:22;6045:5;6029:22;:::i;:::-;6024:3;6017:35;5946:112;;:::o;6064:214::-;6153:4;6191:2;6180:9;6176:18;6168:26;;6204:67;6268:1;6257:9;6253:17;6244:6;6204:67;:::i;:::-;6064:214;;;;:::o;6284:110::-;6335:7;6364:24;6382:5;6364:24;:::i;:::-;6353:35;;6284:110;;;:::o;6400:150::-;6487:38;6519:5;6487:38;:::i;:::-;6480:5;6477:49;6467:77;;6540:1;6537;6530:12;6467:77;6400:150;:::o;6556:167::-;6616:5;6654:6;6641:20;6632:29;;6670:47;6711:5;6670:47;:::i;:::-;6556:167;;;;:::o;6729:647::-;6820:6;6828;6836;6885:2;6873:9;6864:7;6860:23;6856:32;6853:119;;;6891:79;;:::i;:::-;6853:119;7011:1;7036:53;7081:7;7072:6;7061:9;7057:22;7036:53;:::i;:::-;7026:63;;6982:117;7138:2;7164:67;7223:7;7214:6;7203:9;7199:22;7164:67;:::i;:::-;7154:77;;7109:132;7280:2;7306:53;7351:7;7342:6;7331:9;7327:22;7306:53;:::i;:::-;7296:63;;7251:118;6729:647;;;;;:::o;7382:360::-;7517:4;7555:2;7544:9;7540:18;7532:26;;7568:71;7636:1;7625:9;7621:17;7612:6;7568:71;:::i;:::-;7649:86;7731:2;7720:9;7716:18;7707:6;7649:86;:::i;:::-;7382:360;;;;;:::o;7748:329::-;7807:6;7856:2;7844:9;7835:7;7831:23;7827:32;7824:119;;;7862:79;;:::i;:::-;7824:119;7982:1;8007:53;8052:7;8043:6;8032:9;8028:22;8007:53;:::i;:::-;7997:63;;7953:117;7748:329;;;;:::o;8083:::-;8142:6;8191:2;8179:9;8170:7;8166:23;8162:32;8159:119;;;8197:79;;:::i;:::-;8159:119;8317:1;8342:53;8387:7;8378:6;8367:9;8363:22;8342:53;:::i;:::-;8332:63;;8288:117;8083:329;;;;:::o;8418:332::-;8539:4;8577:2;8566:9;8562:18;8554:26;;8590:71;8658:1;8647:9;8643:17;8634:6;8590:71;:::i;:::-;8671:72;8739:2;8728:9;8724:18;8715:6;8671:72;:::i;:::-;8418:332;;;;;:::o;8756:474::-;8824:6;8832;8881:2;8869:9;8860:7;8856:23;8852:32;8849:119;;;8887:79;;:::i;:::-;8849:119;9007:1;9032:53;9077:7;9068:6;9057:9;9053:22;9032:53;:::i;:::-;9022:63;;8978:117;9134:2;9160:53;9205:7;9196:6;9185:9;9181:22;9160:53;:::i;:::-;9150:63;;9105:118;8756:474;;;;;:::o;9236:::-;9304:6;9312;9361:2;9349:9;9340:7;9336:23;9332:32;9329:119;;;9367:79;;:::i;:::-;9329:119;9487:1;9512:53;9557:7;9548:6;9537:9;9533:22;9512:53;:::i;:::-;9502:63;;9458:117;9614:2;9640:53;9685:7;9676:6;9665:9;9661:22;9640:53;:::i;:::-;9630:63;;9585:118;9236:474;;;;;:::o;9716:169::-;9856:21;9852:1;9844:6;9840:14;9833:45;9716:169;:::o;9891:366::-;10033:3;10054:67;10118:2;10113:3;10054:67;:::i;:::-;10047:74;;10130:93;10219:3;10130:93;:::i;:::-;10248:2;10243:3;10239:12;10232:19;;9891:366;;;:::o;10263:419::-;10429:4;10467:2;10456:9;10452:18;10444:26;;10516:9;10510:4;10506:20;10502:1;10491:9;10487:17;10480:47;10544:131;10670:4;10544:131;:::i;:::-;10536:139;;10263:419;;;:::o;10688:172::-;10828:24;10824:1;10816:6;10812:14;10805:48;10688:172;:::o;10866:366::-;11008:3;11029:67;11093:2;11088:3;11029:67;:::i;:::-;11022:74;;11105:93;11194:3;11105:93;:::i;:::-;11223:2;11218:3;11214:12;11207:19;;10866:366;;;:::o;11238:419::-;11404:4;11442:2;11431:9;11427:18;11419:26;;11491:9;11485:4;11481:20;11477:1;11466:9;11462:17;11455:47;11519:131;11645:4;11519:131;:::i;:::-;11511:139;;11238:419;;;:::o;11663:180::-;11711:77;11708:1;11701:88;11808:4;11805:1;11798:15;11832:4;11829:1;11822:15;11849:191;11889:3;11908:20;11926:1;11908:20;:::i;:::-;11903:25;;11942:20;11960:1;11942:20;:::i;:::-;11937:25;;11985:1;11982;11978:9;11971:16;;12006:3;12003:1;12000:10;11997:36;;;12013:18;;:::i;:::-;11997:36;11849:191;;;;:::o;12046:410::-;12086:7;12109:20;12127:1;12109:20;:::i;:::-;12104:25;;12143:20;12161:1;12143:20;:::i;:::-;12138:25;;12198:1;12195;12191:9;12220:30;12238:11;12220:30;:::i;:::-;12209:41;;12399:1;12390:7;12386:15;12383:1;12380:22;12360:1;12353:9;12333:83;12310:139;;12429:18;;:::i;:::-;12310:139;12094:362;12046:410;;;;:::o;12462:180::-;12510:77;12507:1;12500:88;12607:4;12604:1;12597:15;12631:4;12628:1;12621:15;12648:185;12688:1;12705:20;12723:1;12705:20;:::i;:::-;12700:25;;12739:20;12757:1;12739:20;:::i;:::-;12734:25;;12778:1;12768:35;;12783:18;;:::i;:::-;12768:35;12825:1;12822;12818:9;12813:14;;12648:185;;;;:::o;12839:180::-;12887:77;12884:1;12877:88;12984:4;12981:1;12974:15;13008:4;13005:1;12998:15;13025:320;13069:6;13106:1;13100:4;13096:12;13086:22;;13153:1;13147:4;13143:12;13174:18;13164:81;;13230:4;13222:6;13218:17;13208:27;;13164:81;13292:2;13284:6;13281:14;13261:18;13258:38;13255:84;;13311:18;;:::i;:::-;13255:84;13076:269;13025:320;;;:::o;13351:176::-;13491:28;13487:1;13479:6;13475:14;13468:52;13351:176;:::o;13533:366::-;13675:3;13696:67;13760:2;13755:3;13696:67;:::i;:::-;13689:74;;13772:93;13861:3;13772:93;:::i;:::-;13890:2;13885:3;13881:12;13874:19;;13533:366;;;:::o;13905:419::-;14071:4;14109:2;14098:9;14094:18;14086:26;;14158:9;14152:4;14148:20;14144:1;14133:9;14129:17;14122:47;14186:131;14312:4;14186:131;:::i;:::-;14178:139;;13905:419;;;:::o;14330:163::-;14470:15;14466:1;14458:6;14454:14;14447:39;14330:163;:::o;14499:366::-;14641:3;14662:67;14726:2;14721:3;14662:67;:::i;:::-;14655:74;;14738:93;14827:3;14738:93;:::i;:::-;14856:2;14851:3;14847:12;14840:19;;14499:366;;;:::o;14871:419::-;15037:4;15075:2;15064:9;15060:18;15052:26;;15124:9;15118:4;15114:20;15110:1;15099:9;15095:17;15088:47;15152:131;15278:4;15152:131;:::i;:::-;15144:139;;14871:419;;;:::o;15296:118::-;15383:24;15401:5;15383:24;:::i;:::-;15378:3;15371:37;15296:118;;:::o;15420:442::-;15569:4;15607:2;15596:9;15592:18;15584:26;;15620:71;15688:1;15677:9;15673:17;15664:6;15620:71;:::i;:::-;15701:72;15769:2;15758:9;15754:18;15745:6;15701:72;:::i;:::-;15783;15851:2;15840:9;15836:18;15827:6;15783:72;:::i;:::-;15420:442;;;;;;:::o;15868:116::-;15938:21;15953:5;15938:21;:::i;:::-;15931:5;15928:32;15918:60;;15974:1;15971;15964:12;15918:60;15868:116;:::o;15990:137::-;16044:5;16075:6;16069:13;16060:22;;16091:30;16115:5;16091:30;:::i;:::-;15990:137;;;;:::o;16133:345::-;16200:6;16249:2;16237:9;16228:7;16224:23;16220:32;16217:119;;;16255:79;;:::i;:::-;16217:119;16375:1;16400:61;16453:7;16444:6;16433:9;16429:22;16400:61;:::i;:::-;16390:71;;16346:125;16133:345;;;;:::o;16484:332::-;16605:4;16643:2;16632:9;16628:18;16620:26;;16656:71;16724:1;16713:9;16709:17;16700:6;16656:71;:::i;:::-;16737:72;16805:2;16794:9;16790:18;16781:6;16737:72;:::i;:::-;16484:332;;;;;:::o;16822:222::-;16915:4;16953:2;16942:9;16938:18;16930:26;;16966:71;17034:1;17023:9;17019:17;17010:6;16966:71;:::i;:::-;16822:222;;;;:::o;17050:143::-;17107:5;17138:6;17132:13;17123:22;;17154:33;17181:5;17154:33;:::i;:::-;17050:143;;;;:::o;17199:351::-;17269:6;17318:2;17306:9;17297:7;17293:23;17289:32;17286:119;;;17324:79;;:::i;:::-;17286:119;17444:1;17469:64;17525:7;17516:6;17505:9;17501:22;17469:64;:::i;:::-;17459:74;;17415:128;17199:351;;;;:::o;17556:553::-;17733:4;17771:3;17760:9;17756:19;17748:27;;17785:71;17853:1;17842:9;17838:17;17829:6;17785:71;:::i;:::-;17866:72;17934:2;17923:9;17919:18;17910:6;17866:72;:::i;:::-;17948;18016:2;18005:9;18001:18;17992:6;17948:72;:::i;:::-;18030;18098:2;18087:9;18083:18;18074:6;18030:72;:::i;:::-;17556:553;;;;;;;:::o;18115:179::-;18255:31;18251:1;18243:6;18239:14;18232:55;18115:179;:::o;18300:366::-;18442:3;18463:67;18527:2;18522:3;18463:67;:::i;:::-;18456:74;;18539:93;18628:3;18539:93;:::i;:::-;18657:2;18652:3;18648:12;18641:19;;18300:366;;;:::o;18672:419::-;18838:4;18876:2;18865:9;18861:18;18853:26;;18925:9;18919:4;18915:20;18911:1;18900:9;18896:17;18889:47;18953:131;19079:4;18953:131;:::i;:::-;18945:139;;18672:419;;;:::o;19097:442::-;19246:4;19284:2;19273:9;19269:18;19261:26;;19297:71;19365:1;19354:9;19350:17;19341:6;19297:71;:::i;:::-;19378:72;19446:2;19435:9;19431:18;19422:6;19378:72;:::i;:::-;19460;19528:2;19517:9;19513:18;19504:6;19460:72;:::i;:::-;19097:442;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1956800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"addLiquidity(uint256,uint256)": "infinite",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2896",
								"decimals()": "405",
								"getAmountOut(uint256,uint256,uint256)": "infinite",
								"name()": "infinite",
								"removeLiquidity(uint256)": "infinite",
								"reserve0()": "2448",
								"reserve1()": "2470",
								"swap(uint256,address,uint256)": "infinite",
								"symbol()": "infinite",
								"token0()": "infinite",
								"token1()": "infinite",
								"totalSupply()": "2455",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"min(uint256,uint256)": "63",
								"sqrt(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 432,
									"end": 5254,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 432,
									"end": 5254,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 432,
									"end": 5254,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 667,
									"end": 798,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 667,
									"end": 798,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 667,
									"end": 798,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 667,
									"end": 798,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 667,
									"end": 798,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 667,
									"end": 798,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 667,
									"end": 798,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 667,
									"end": 798,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 667,
									"end": 798,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 667,
									"end": 798,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 667,
									"end": 798,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 667,
									"end": 798,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 667,
									"end": 798,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 667,
									"end": 798,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 667,
									"end": 798,
									"name": "CODESIZE",
									"source": 5
								},
								{
									"begin": 667,
									"end": 798,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 667,
									"end": 798,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 667,
									"end": 798,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 667,
									"end": 798,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 667,
									"end": 798,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 667,
									"end": 798,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 667,
									"end": 798,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 667,
									"end": 798,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 667,
									"end": 798,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 667,
									"end": 798,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 667,
									"end": 798,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 667,
									"end": 798,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 667,
									"end": 798,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 667,
									"end": 798,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 667,
									"end": 798,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 667,
									"end": 798,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 667,
									"end": 798,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 667,
									"end": 798,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 667,
									"end": 798,
									"name": "tag",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 667,
									"end": 798,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "A"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "53696D706C655377617000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "5353000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1970,
									"end": 1975,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1967,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1962,
									"end": 1975,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1995,
									"end": 2002,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1985,
									"end": 1992,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1985,
									"end": 2002,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 756,
									"end": 763,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 747,
									"end": 753,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 747,
									"end": 753,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 747,
									"end": 763,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 747,
									"end": 763,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 5
								},
								{
									"begin": 747,
									"end": 763,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 747,
									"end": 763,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 747,
									"end": 763,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 747,
									"end": 763,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 747,
									"end": 763,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 747,
									"end": 763,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 747,
									"end": 763,
									"modifierDepth": 1,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 747,
									"end": 763,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 747,
									"end": 763,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 747,
									"end": 763,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 747,
									"end": 763,
									"modifierDepth": 1,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 747,
									"end": 763,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 747,
									"end": 763,
									"modifierDepth": 1,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 747,
									"end": 763,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 747,
									"end": 763,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 747,
									"end": 763,
									"modifierDepth": 1,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 783,
									"end": 790,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 774,
									"end": 780,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 774,
									"end": 780,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 774,
									"end": 790,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 774,
									"end": 790,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 5
								},
								{
									"begin": 774,
									"end": 790,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 774,
									"end": 790,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 774,
									"end": 790,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 774,
									"end": 790,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 774,
									"end": 790,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 774,
									"end": 790,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 774,
									"end": 790,
									"modifierDepth": 1,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 774,
									"end": 790,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 774,
									"end": 790,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 774,
									"end": 790,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 774,
									"end": 790,
									"modifierDepth": 1,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 774,
									"end": 790,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 774,
									"end": 790,
									"modifierDepth": 1,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 774,
									"end": 790,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 774,
									"end": 790,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 774,
									"end": 790,
									"modifierDepth": 1,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 667,
									"end": 798,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 667,
									"end": 798,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 432,
									"end": 5254,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 432,
									"end": 5254,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "46"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 6,
									"value": "46"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 568,
									"end": 678,
									"name": "tag",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 568,
									"end": 678,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 619,
									"end": 626,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 648,
									"end": 672,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "48"
								},
								{
									"begin": 666,
									"end": 671,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 648,
									"end": 672,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 648,
									"end": 672,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 648,
									"end": 672,
									"name": "tag",
									"source": 6,
									"value": "48"
								},
								{
									"begin": 648,
									"end": 672,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 637,
									"end": 672,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 637,
									"end": 672,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 568,
									"end": 678,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 568,
									"end": 678,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 568,
									"end": 678,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 568,
									"end": 678,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 684,
									"end": 834,
									"name": "tag",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 684,
									"end": 834,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 771,
									"end": 809,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 803,
									"end": 808,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 771,
									"end": 809,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 771,
									"end": 809,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 771,
									"end": 809,
									"name": "tag",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 771,
									"end": 809,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 764,
									"end": 769,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 761,
									"end": 810,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 751,
									"end": 828,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "51"
								},
								{
									"begin": 751,
									"end": 828,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 824,
									"end": 825,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 821,
									"end": 822,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 814,
									"end": 826,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 751,
									"end": 828,
									"name": "tag",
									"source": 6,
									"value": "51"
								},
								{
									"begin": 751,
									"end": 828,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 684,
									"end": 834,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 684,
									"end": 834,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "tag",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 911,
									"end": 916,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 942,
									"end": 948,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 936,
									"end": 949,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 927,
									"end": 949,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 927,
									"end": 949,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 958,
									"end": 1005,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "53"
								},
								{
									"begin": 999,
									"end": 1004,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 958,
									"end": 1005,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 958,
									"end": 1005,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 958,
									"end": 1005,
									"name": "tag",
									"source": 6,
									"value": "53"
								},
								{
									"begin": 958,
									"end": 1005,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 840,
									"end": 1011,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1017,
									"end": 1580,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1017,
									"end": 1580,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1124,
									"end": 1130,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1132,
									"end": 1138,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1181,
									"end": 1183,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1169,
									"end": 1178,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1160,
									"end": 1167,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1156,
									"end": 1179,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1152,
									"end": 1184,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 1149,
									"end": 1268,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1149,
									"end": 1268,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "55"
								},
								{
									"begin": 1149,
									"end": 1268,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1187,
									"end": 1266,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "56"
								},
								{
									"begin": 1187,
									"end": 1266,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 1187,
									"end": 1266,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1187,
									"end": 1266,
									"name": "tag",
									"source": 6,
									"value": "56"
								},
								{
									"begin": 1187,
									"end": 1266,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1149,
									"end": 1268,
									"name": "tag",
									"source": 6,
									"value": "55"
								},
								{
									"begin": 1149,
									"end": 1268,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1307,
									"end": 1308,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1332,
									"end": 1410,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "57"
								},
								{
									"begin": 1402,
									"end": 1409,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1393,
									"end": 1399,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1382,
									"end": 1391,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1378,
									"end": 1400,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1332,
									"end": 1410,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 1332,
									"end": 1410,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1332,
									"end": 1410,
									"name": "tag",
									"source": 6,
									"value": "57"
								},
								{
									"begin": 1332,
									"end": 1410,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1322,
									"end": 1410,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1322,
									"end": 1410,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1278,
									"end": 1420,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1459,
									"end": 1461,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1485,
									"end": 1563,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 1555,
									"end": 1562,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1546,
									"end": 1552,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1535,
									"end": 1544,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1531,
									"end": 1553,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1485,
									"end": 1563,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 1485,
									"end": 1563,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1485,
									"end": 1563,
									"name": "tag",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 1485,
									"end": 1563,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1475,
									"end": 1563,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1475,
									"end": 1563,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1430,
									"end": 1573,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1017,
									"end": 1580,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1017,
									"end": 1580,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1017,
									"end": 1580,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1017,
									"end": 1580,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1017,
									"end": 1580,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1017,
									"end": 1580,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1586,
									"end": 1685,
									"name": "tag",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1586,
									"end": 1685,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1638,
									"end": 1644,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1672,
									"end": 1677,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1666,
									"end": 1678,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1656,
									"end": 1678,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1656,
									"end": 1678,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1586,
									"end": 1685,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1586,
									"end": 1685,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1586,
									"end": 1685,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1586,
									"end": 1685,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1691,
									"end": 1871,
									"name": "tag",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 1691,
									"end": 1871,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1739,
									"end": 1816,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1736,
									"end": 1737,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1729,
									"end": 1817,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1836,
									"end": 1840,
									"name": "PUSH",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 1833,
									"end": 1834,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 1826,
									"end": 1841,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1860,
									"end": 1864,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 1857,
									"end": 1858,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1850,
									"end": 1865,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1877,
									"end": 2057,
									"name": "tag",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 1877,
									"end": 2057,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1925,
									"end": 2002,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1922,
									"end": 1923,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1915,
									"end": 2003,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2022,
									"end": 2026,
									"name": "PUSH",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 2019,
									"end": 2020,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 2012,
									"end": 2027,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2046,
									"end": 2050,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 2043,
									"end": 2044,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2036,
									"end": 2051,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 2063,
									"end": 2383,
									"name": "tag",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 2063,
									"end": 2383,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2107,
									"end": 2113,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2144,
									"end": 2145,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 2138,
									"end": 2142,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2134,
									"end": 2146,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 2124,
									"end": 2146,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2124,
									"end": 2146,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2191,
									"end": 2192,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 2185,
									"end": 2189,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2181,
									"end": 2193,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2212,
									"end": 2230,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2202,
									"end": 2283,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "63"
								},
								{
									"begin": 2202,
									"end": 2283,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2268,
									"end": 2272,
									"name": "PUSH",
									"source": 6,
									"value": "7F"
								},
								{
									"begin": 2260,
									"end": 2266,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2256,
									"end": 2273,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2246,
									"end": 2273,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2246,
									"end": 2273,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2202,
									"end": 2283,
									"name": "tag",
									"source": 6,
									"value": "63"
								},
								{
									"begin": 2202,
									"end": 2283,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2330,
									"end": 2332,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2322,
									"end": 2328,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2319,
									"end": 2333,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 2299,
									"end": 2317,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2296,
									"end": 2334,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 2293,
									"end": 2377,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 2293,
									"end": 2377,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2349,
									"end": 2367,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "65"
								},
								{
									"begin": 2349,
									"end": 2367,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 2349,
									"end": 2367,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2349,
									"end": 2367,
									"name": "tag",
									"source": 6,
									"value": "65"
								},
								{
									"begin": 2349,
									"end": 2367,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2293,
									"end": 2377,
									"name": "tag",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 2293,
									"end": 2377,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2114,
									"end": 2383,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2063,
									"end": 2383,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2063,
									"end": 2383,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2063,
									"end": 2383,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2063,
									"end": 2383,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2389,
									"end": 2530,
									"name": "tag",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 2389,
									"end": 2530,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2438,
									"end": 2442,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2461,
									"end": 2464,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2453,
									"end": 2464,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2453,
									"end": 2464,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2484,
									"end": 2487,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2481,
									"end": 2482,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2474,
									"end": 2488,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2518,
									"end": 2522,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2515,
									"end": 2516,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2505,
									"end": 2523,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 2497,
									"end": 2523,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2497,
									"end": 2523,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2389,
									"end": 2530,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2389,
									"end": 2530,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2389,
									"end": 2530,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2389,
									"end": 2530,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2536,
									"end": 2629,
									"name": "tag",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 2536,
									"end": 2629,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2573,
									"end": 2579,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2620,
									"end": 2622,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2615,
									"end": 2617,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 2608,
									"end": 2613,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2604,
									"end": 2618,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2600,
									"end": 2623,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 2590,
									"end": 2623,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2590,
									"end": 2623,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2536,
									"end": 2629,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2536,
									"end": 2629,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2536,
									"end": 2629,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2536,
									"end": 2629,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2635,
									"end": 2742,
									"name": "tag",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 2635,
									"end": 2742,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2679,
									"end": 2687,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2729,
									"end": 2734,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2723,
									"end": 2727,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2719,
									"end": 2735,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 2698,
									"end": 2735,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2698,
									"end": 2735,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2635,
									"end": 2742,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 2635,
									"end": 2742,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2635,
									"end": 2742,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2635,
									"end": 2742,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2635,
									"end": 2742,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2748,
									"end": 3141,
									"name": "tag",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 2748,
									"end": 3141,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2817,
									"end": 2823,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2867,
									"end": 2868,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 2855,
									"end": 2865,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2851,
									"end": 2869,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 2890,
									"end": 2987,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "70"
								},
								{
									"begin": 2920,
									"end": 2986,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2909,
									"end": 2918,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2890,
									"end": 2987,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 2890,
									"end": 2987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2890,
									"end": 2987,
									"name": "tag",
									"source": 6,
									"value": "70"
								},
								{
									"begin": 2890,
									"end": 2987,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3008,
									"end": 3047,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "71"
								},
								{
									"begin": 3038,
									"end": 3046,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 3027,
									"end": 3036,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 3008,
									"end": 3047,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 3008,
									"end": 3047,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3008,
									"end": 3047,
									"name": "tag",
									"source": 6,
									"value": "71"
								},
								{
									"begin": 3008,
									"end": 3047,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2996,
									"end": 3047,
									"name": "SWAP6",
									"source": 6
								},
								{
									"begin": 2996,
									"end": 3047,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3080,
									"end": 3084,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 3076,
									"end": 3085,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 3069,
									"end": 3074,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3065,
									"end": 3086,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3056,
									"end": 3086,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 3056,
									"end": 3086,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3129,
									"end": 3133,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 3119,
									"end": 3127,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 3115,
									"end": 3134,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3108,
									"end": 3113,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3105,
									"end": 3135,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 3095,
									"end": 3135,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 3095,
									"end": 3135,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2824,
									"end": 3141,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2824,
									"end": 3141,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2748,
									"end": 3141,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 2748,
									"end": 3141,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 2748,
									"end": 3141,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2748,
									"end": 3141,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2748,
									"end": 3141,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2748,
									"end": 3141,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3147,
									"end": 3224,
									"name": "tag",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 3147,
									"end": 3224,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3184,
									"end": 3191,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3213,
									"end": 3218,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3202,
									"end": 3218,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3202,
									"end": 3218,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3147,
									"end": 3224,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3147,
									"end": 3224,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3147,
									"end": 3224,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3147,
									"end": 3224,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3230,
									"end": 3290,
									"name": "tag",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 3230,
									"end": 3290,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3258,
									"end": 3261,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3279,
									"end": 3284,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3272,
									"end": 3284,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3272,
									"end": 3284,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3230,
									"end": 3290,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3230,
									"end": 3290,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3230,
									"end": 3290,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3230,
									"end": 3290,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3296,
									"end": 3438,
									"name": "tag",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 3296,
									"end": 3438,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3346,
									"end": 3355,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3379,
									"end": 3432,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "75"
								},
								{
									"begin": 3397,
									"end": 3431,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "76"
								},
								{
									"begin": 3406,
									"end": 3430,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "77"
								},
								{
									"begin": 3424,
									"end": 3429,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3406,
									"end": 3430,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 3406,
									"end": 3430,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3406,
									"end": 3430,
									"name": "tag",
									"source": 6,
									"value": "77"
								},
								{
									"begin": 3406,
									"end": 3430,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3397,
									"end": 3431,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 3397,
									"end": 3431,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3397,
									"end": 3431,
									"name": "tag",
									"source": 6,
									"value": "76"
								},
								{
									"begin": 3397,
									"end": 3431,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3379,
									"end": 3432,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 3379,
									"end": 3432,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3379,
									"end": 3432,
									"name": "tag",
									"source": 6,
									"value": "75"
								},
								{
									"begin": 3379,
									"end": 3432,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3366,
									"end": 3432,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3366,
									"end": 3432,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3296,
									"end": 3438,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3296,
									"end": 3438,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3296,
									"end": 3438,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3296,
									"end": 3438,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3444,
									"end": 3519,
									"name": "tag",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 3444,
									"end": 3519,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3487,
									"end": 3490,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3508,
									"end": 3513,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3501,
									"end": 3513,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3501,
									"end": 3513,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3444,
									"end": 3519,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3444,
									"end": 3519,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3444,
									"end": 3519,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3444,
									"end": 3519,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3525,
									"end": 3794,
									"name": "tag",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 3525,
									"end": 3794,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3635,
									"end": 3674,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 3666,
									"end": 3673,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 3635,
									"end": 3674,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 3635,
									"end": 3674,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3635,
									"end": 3674,
									"name": "tag",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 3635,
									"end": 3674,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3696,
									"end": 3787,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "81"
								},
								{
									"begin": 3745,
									"end": 3786,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "82"
								},
								{
									"begin": 3769,
									"end": 3785,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3745,
									"end": 3786,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 3745,
									"end": 3786,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3745,
									"end": 3786,
									"name": "tag",
									"source": 6,
									"value": "82"
								},
								{
									"begin": 3745,
									"end": 3786,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3737,
									"end": 3743,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3730,
									"end": 3734,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3724,
									"end": 3735,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 3696,
									"end": 3787,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 3696,
									"end": 3787,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3696,
									"end": 3787,
									"name": "tag",
									"source": 6,
									"value": "81"
								},
								{
									"begin": 3696,
									"end": 3787,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3690,
									"end": 3694,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3683,
									"end": 3788,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 3601,
									"end": 3794,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3525,
									"end": 3794,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3525,
									"end": 3794,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3525,
									"end": 3794,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3525,
									"end": 3794,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3800,
									"end": 3873,
									"name": "tag",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 3800,
									"end": 3873,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3845,
									"end": 3848,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3800,
									"end": 3873,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3800,
									"end": 3873,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3879,
									"end": 4068,
									"name": "tag",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 3879,
									"end": 4068,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3956,
									"end": 3988,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "85"
								},
								{
									"begin": 3956,
									"end": 3988,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 3956,
									"end": 3988,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3956,
									"end": 3988,
									"name": "tag",
									"source": 6,
									"value": "85"
								},
								{
									"begin": 3956,
									"end": 3988,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3997,
									"end": 4062,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "86"
								},
								{
									"begin": 4055,
									"end": 4061,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4047,
									"end": 4053,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 4041,
									"end": 4045,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3997,
									"end": 4062,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 3997,
									"end": 4062,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3997,
									"end": 4062,
									"name": "tag",
									"source": 6,
									"value": "86"
								},
								{
									"begin": 3997,
									"end": 4062,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3932,
									"end": 4068,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3879,
									"end": 4068,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3879,
									"end": 4068,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3879,
									"end": 4068,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4074,
									"end": 4260,
									"name": "tag",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 4074,
									"end": 4260,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4134,
									"end": 4254,
									"name": "tag",
									"source": 6,
									"value": "88"
								},
								{
									"begin": 4134,
									"end": 4254,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4151,
									"end": 4154,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4144,
									"end": 4149,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4141,
									"end": 4155,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 4134,
									"end": 4254,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 4134,
									"end": 4254,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "90"
								},
								{
									"begin": 4134,
									"end": 4254,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 4205,
									"end": 4244,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "91"
								},
								{
									"begin": 4242,
									"end": 4243,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4235,
									"end": 4240,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4205,
									"end": 4244,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 4205,
									"end": 4244,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4205,
									"end": 4244,
									"name": "tag",
									"source": 6,
									"value": "91"
								},
								{
									"begin": 4205,
									"end": 4244,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4178,
									"end": 4179,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 4171,
									"end": 4176,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4167,
									"end": 4180,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4158,
									"end": 4180,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4158,
									"end": 4180,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4134,
									"end": 4254,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "88"
								},
								{
									"begin": 4134,
									"end": 4254,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4134,
									"end": 4254,
									"name": "tag",
									"source": 6,
									"value": "90"
								},
								{
									"begin": 4134,
									"end": 4254,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4074,
									"end": 4260,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4074,
									"end": 4260,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4074,
									"end": 4260,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4266,
									"end": 4809,
									"name": "tag",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 4266,
									"end": 4809,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4367,
									"end": 4369,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 4362,
									"end": 4365,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4359,
									"end": 4370,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 4356,
									"end": 4802,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 4356,
									"end": 4802,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "93"
								},
								{
									"begin": 4356,
									"end": 4802,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 4401,
									"end": 4439,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "94"
								},
								{
									"begin": 4433,
									"end": 4438,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4401,
									"end": 4439,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 4401,
									"end": 4439,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4401,
									"end": 4439,
									"name": "tag",
									"source": 6,
									"value": "94"
								},
								{
									"begin": 4401,
									"end": 4439,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4485,
									"end": 4514,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "95"
								},
								{
									"begin": 4503,
									"end": 4513,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 4485,
									"end": 4514,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 4485,
									"end": 4514,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4485,
									"end": 4514,
									"name": "tag",
									"source": 6,
									"value": "95"
								},
								{
									"begin": 4485,
									"end": 4514,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4475,
									"end": 4483,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4471,
									"end": 4515,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4668,
									"end": 4670,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 4656,
									"end": 4666,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 4653,
									"end": 4671,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 4650,
									"end": 4699,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 4650,
									"end": 4699,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "96"
								},
								{
									"begin": 4650,
									"end": 4699,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 4689,
									"end": 4697,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4674,
									"end": 4697,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4674,
									"end": 4697,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4650,
									"end": 4699,
									"name": "tag",
									"source": 6,
									"value": "96"
								},
								{
									"begin": 4650,
									"end": 4699,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4712,
									"end": 4792,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "97"
								},
								{
									"begin": 4768,
									"end": 4790,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "98"
								},
								{
									"begin": 4786,
									"end": 4789,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 4768,
									"end": 4790,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 4768,
									"end": 4790,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4768,
									"end": 4790,
									"name": "tag",
									"source": 6,
									"value": "98"
								},
								{
									"begin": 4768,
									"end": 4790,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4758,
									"end": 4766,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 4754,
									"end": 4791,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4741,
									"end": 4752,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4712,
									"end": 4792,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 4712,
									"end": 4792,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4712,
									"end": 4792,
									"name": "tag",
									"source": 6,
									"value": "97"
								},
								{
									"begin": 4712,
									"end": 4792,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4371,
									"end": 4802,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4371,
									"end": 4802,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4356,
									"end": 4802,
									"name": "tag",
									"source": 6,
									"value": "93"
								},
								{
									"begin": 4356,
									"end": 4802,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4266,
									"end": 4809,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4266,
									"end": 4809,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4266,
									"end": 4809,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4266,
									"end": 4809,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4815,
									"end": 4932,
									"name": "tag",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 4815,
									"end": 4932,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4869,
									"end": 4877,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4919,
									"end": 4924,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4913,
									"end": 4917,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4909,
									"end": 4925,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 4888,
									"end": 4925,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4888,
									"end": 4925,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4815,
									"end": 4932,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 4815,
									"end": 4932,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4815,
									"end": 4932,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4815,
									"end": 4932,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4815,
									"end": 4932,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4938,
									"end": 5107,
									"name": "tag",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 4938,
									"end": 5107,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4982,
									"end": 4988,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5015,
									"end": 5066,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "101"
								},
								{
									"begin": 5063,
									"end": 5064,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5059,
									"end": 5065,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 5051,
									"end": 5056,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 5048,
									"end": 5049,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 5044,
									"end": 5057,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 5015,
									"end": 5066,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 5015,
									"end": 5066,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5015,
									"end": 5066,
									"name": "tag",
									"source": 6,
									"value": "101"
								},
								{
									"begin": 5015,
									"end": 5066,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5011,
									"end": 5067,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 5096,
									"end": 5100,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 5090,
									"end": 5094,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 5086,
									"end": 5101,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 5076,
									"end": 5101,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 5076,
									"end": 5101,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4989,
									"end": 5107,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4938,
									"end": 5107,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 4938,
									"end": 5107,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4938,
									"end": 5107,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4938,
									"end": 5107,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4938,
									"end": 5107,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5112,
									"end": 5407,
									"name": "tag",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 5112,
									"end": 5407,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5188,
									"end": 5192,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5334,
									"end": 5363,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "103"
								},
								{
									"begin": 5359,
									"end": 5362,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 5353,
									"end": 5357,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 5334,
									"end": 5363,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 5334,
									"end": 5363,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5334,
									"end": 5363,
									"name": "tag",
									"source": 6,
									"value": "103"
								},
								{
									"begin": 5334,
									"end": 5363,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5326,
									"end": 5363,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 5326,
									"end": 5363,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5396,
									"end": 5399,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5393,
									"end": 5394,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 5389,
									"end": 5400,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 5383,
									"end": 5387,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5380,
									"end": 5401,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 5372,
									"end": 5401,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5372,
									"end": 5401,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5112,
									"end": 5407,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 5112,
									"end": 5407,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 5112,
									"end": 5407,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5112,
									"end": 5407,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5112,
									"end": 5407,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5412,
									"end": 6807,
									"name": "tag",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 5412,
									"end": 6807,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5529,
									"end": 5566,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "105"
								},
								{
									"begin": 5562,
									"end": 5565,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5529,
									"end": 5566,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 5529,
									"end": 5566,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5529,
									"end": 5566,
									"name": "tag",
									"source": 6,
									"value": "105"
								},
								{
									"begin": 5529,
									"end": 5566,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5631,
									"end": 5649,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5623,
									"end": 5629,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5620,
									"end": 5650,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 5617,
									"end": 5673,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 5617,
									"end": 5673,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "106"
								},
								{
									"begin": 5617,
									"end": 5673,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 5653,
									"end": 5671,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "107"
								},
								{
									"begin": 5653,
									"end": 5671,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 5653,
									"end": 5671,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5653,
									"end": 5671,
									"name": "tag",
									"source": 6,
									"value": "107"
								},
								{
									"begin": 5653,
									"end": 5671,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5617,
									"end": 5673,
									"name": "tag",
									"source": 6,
									"value": "106"
								},
								{
									"begin": 5617,
									"end": 5673,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5697,
									"end": 5735,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "108"
								},
								{
									"begin": 5729,
									"end": 5733,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5723,
									"end": 5734,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 5697,
									"end": 5735,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 5697,
									"end": 5735,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5697,
									"end": 5735,
									"name": "tag",
									"source": 6,
									"value": "108"
								},
								{
									"begin": 5697,
									"end": 5735,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5782,
									"end": 5849,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "109"
								},
								{
									"begin": 5842,
									"end": 5848,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5834,
									"end": 5840,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5828,
									"end": 5832,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 5782,
									"end": 5849,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 5782,
									"end": 5849,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5782,
									"end": 5849,
									"name": "tag",
									"source": 6,
									"value": "109"
								},
								{
									"begin": 5782,
									"end": 5849,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5876,
									"end": 5877,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5900,
									"end": 5904,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 5887,
									"end": 5904,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5887,
									"end": 5904,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5932,
									"end": 5934,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 5924,
									"end": 5930,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 5921,
									"end": 5935,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 5949,
									"end": 5950,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 5944,
									"end": 6562,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5944,
									"end": 6562,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 5944,
									"end": 6562,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "111"
								},
								{
									"begin": 5944,
									"end": 6562,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 6606,
									"end": 6607,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6623,
									"end": 6629,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 6620,
									"end": 6697,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 6620,
									"end": 6697,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "112"
								},
								{
									"begin": 6620,
									"end": 6697,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 6672,
									"end": 6681,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6667,
									"end": 6670,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 6663,
									"end": 6682,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 6657,
									"end": 6683,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 6648,
									"end": 6683,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6648,
									"end": 6683,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6620,
									"end": 6697,
									"name": "tag",
									"source": 6,
									"value": "112"
								},
								{
									"begin": 6620,
									"end": 6697,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6723,
									"end": 6790,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "113"
								},
								{
									"begin": 6783,
									"end": 6789,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 6776,
									"end": 6781,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6723,
									"end": 6790,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 6723,
									"end": 6790,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6723,
									"end": 6790,
									"name": "tag",
									"source": 6,
									"value": "113"
								},
								{
									"begin": 6723,
									"end": 6790,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6717,
									"end": 6721,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 6710,
									"end": 6791,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 6579,
									"end": 6801,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5914,
									"end": 6801,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "110"
								},
								{
									"begin": 5914,
									"end": 6801,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5944,
									"end": 6562,
									"name": "tag",
									"source": 6,
									"value": "111"
								},
								{
									"begin": 5944,
									"end": 6562,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5996,
									"end": 6000,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 5992,
									"end": 6001,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 5984,
									"end": 5990,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 5980,
									"end": 6002,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 6030,
									"end": 6067,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "114"
								},
								{
									"begin": 6062,
									"end": 6066,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 6030,
									"end": 6067,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 6030,
									"end": 6067,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6030,
									"end": 6067,
									"name": "tag",
									"source": 6,
									"value": "114"
								},
								{
									"begin": 6030,
									"end": 6067,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6089,
									"end": 6090,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6103,
									"end": 6311,
									"name": "tag",
									"source": 6,
									"value": "115"
								},
								{
									"begin": 6103,
									"end": 6311,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6117,
									"end": 6124,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6114,
									"end": 6115,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6111,
									"end": 6125,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 6103,
									"end": 6311,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 6103,
									"end": 6311,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "117"
								},
								{
									"begin": 6103,
									"end": 6311,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 6196,
									"end": 6205,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 6191,
									"end": 6194,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 6187,
									"end": 6206,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 6181,
									"end": 6207,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 6173,
									"end": 6179,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6166,
									"end": 6208,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 6247,
									"end": 6248,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 6239,
									"end": 6245,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6235,
									"end": 6249,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 6225,
									"end": 6249,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 6225,
									"end": 6249,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6294,
									"end": 6296,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 6283,
									"end": 6292,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 6279,
									"end": 6297,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 6266,
									"end": 6297,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 6266,
									"end": 6297,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6140,
									"end": 6144,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 6137,
									"end": 6138,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6133,
									"end": 6145,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 6128,
									"end": 6145,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6128,
									"end": 6145,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6103,
									"end": 6311,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "115"
								},
								{
									"begin": 6103,
									"end": 6311,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6103,
									"end": 6311,
									"name": "tag",
									"source": 6,
									"value": "117"
								},
								{
									"begin": 6103,
									"end": 6311,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6339,
									"end": 6345,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 6330,
									"end": 6337,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 6327,
									"end": 6346,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 6324,
									"end": 6503,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 6324,
									"end": 6503,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "118"
								},
								{
									"begin": 6324,
									"end": 6503,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 6397,
									"end": 6406,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 6392,
									"end": 6395,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 6388,
									"end": 6407,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 6382,
									"end": 6408,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 6440,
									"end": 6488,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "119"
								},
								{
									"begin": 6482,
									"end": 6486,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 6474,
									"end": 6480,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 6470,
									"end": 6487,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 6459,
									"end": 6468,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6440,
									"end": 6488,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 6440,
									"end": 6488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6440,
									"end": 6488,
									"name": "tag",
									"source": 6,
									"value": "119"
								},
								{
									"begin": 6440,
									"end": 6488,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6432,
									"end": 6438,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 6425,
									"end": 6489,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 6347,
									"end": 6503,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6324,
									"end": 6503,
									"name": "tag",
									"source": 6,
									"value": "118"
								},
								{
									"begin": 6324,
									"end": 6503,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6549,
									"end": 6550,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 6545,
									"end": 6546,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 6537,
									"end": 6543,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 6533,
									"end": 6547,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 6529,
									"end": 6551,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 6523,
									"end": 6527,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 6516,
									"end": 6552,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 5951,
									"end": 6562,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5951,
									"end": 6562,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5951,
									"end": 6562,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5914,
									"end": 6801,
									"name": "tag",
									"source": 6,
									"value": "110"
								},
								{
									"begin": 5914,
									"end": 6801,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5914,
									"end": 6801,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5504,
									"end": 6807,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5504,
									"end": 6807,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5504,
									"end": 6807,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5412,
									"end": 6807,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5412,
									"end": 6807,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5412,
									"end": 6807,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 432,
									"end": 5254,
									"name": "tag",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 432,
									"end": 5254,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 432,
									"end": 5254,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 432,
									"end": 5254,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 432,
									"end": 5254,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 432,
									"end": 5254,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 432,
									"end": 5254,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 432,
									"end": 5254,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 432,
									"end": 5254,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220abbda7e48efd3fcde71769aac16418257904e482010f78e51ac5cfa70cce265964736f6c634300081a0033",
									".code": [
										{
											"begin": 432,
											"end": 5254,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "PUSH",
											"source": 5,
											"value": "443CB4BC"
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "PUSH",
											"source": 5,
											"value": "9C8F9F23"
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "PUSH",
											"source": 5,
											"value": "9C8F9F23"
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "PUSH",
											"source": 5,
											"value": "9CD441DA"
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "PUSH",
											"source": 5,
											"value": "D21220A7"
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "PUSH",
											"source": 5,
											"value": "DD62ED3E"
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "PUSH",
											"source": 5,
											"value": "443CB4BC"
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "PUSH",
											"source": 5,
											"value": "5A76F25E"
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "PUSH",
											"source": 5,
											"value": "95D89B41"
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "tag",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "PUSH",
											"source": 5,
											"value": "18160DDD"
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "PUSH",
											"source": 5,
											"value": "18160DDD"
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "PUSH",
											"source": 5,
											"value": "313CE567"
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "PUSH",
											"source": 5,
											"value": "43264349"
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "tag",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "PUSH",
											"source": 5,
											"value": "54D50D4"
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "PUSH",
											"source": 5,
											"value": "6FDDE03"
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "PUSH",
											"source": 5,
											"value": "95EA7B3"
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "PUSH",
											"source": 5,
											"value": "DFE1681"
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 432,
											"end": 5254,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3107,
											"end": 3426,
											"name": "tag",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 3107,
											"end": 3426,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3107,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 3107,
											"end": 3426,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3107,
											"end": 3426,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3107,
											"end": 3426,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3107,
											"end": 3426,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3107,
											"end": 3426,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3107,
											"end": 3426,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3107,
											"end": 3426,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3107,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3107,
											"end": 3426,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3107,
											"end": 3426,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3107,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 3107,
											"end": 3426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3107,
											"end": 3426,
											"name": "tag",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3107,
											"end": 3426,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3107,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 3107,
											"end": 3426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3107,
											"end": 3426,
											"name": "tag",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 3107,
											"end": 3426,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3107,
											"end": 3426,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3107,
											"end": 3426,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3107,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 3107,
											"end": 3426,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3107,
											"end": 3426,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3107,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 3107,
											"end": 3426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3107,
											"end": 3426,
											"name": "tag",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 3107,
											"end": 3426,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3107,
											"end": 3426,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3107,
											"end": 3426,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3107,
											"end": 3426,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3107,
											"end": 3426,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3107,
											"end": 3426,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3107,
											"end": 3426,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3107,
											"end": 3426,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 525,
											"end": 545,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 525,
											"end": 545,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 525,
											"end": 545,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 525,
											"end": 545,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 525,
											"end": 545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 525,
											"end": 545,
											"name": "tag",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 525,
											"end": 545,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 525,
											"end": 545,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 525,
											"end": 545,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 525,
											"end": 545,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 525,
											"end": 545,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 525,
											"end": 545,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 525,
											"end": 545,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 525,
											"end": 545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 525,
											"end": 545,
											"name": "tag",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 525,
											"end": 545,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 525,
											"end": 545,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 525,
											"end": 545,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 525,
											"end": 545,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 525,
											"end": 545,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 525,
											"end": 545,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 525,
											"end": 545,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 525,
											"end": 545,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3550,
											"end": 4712,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 3550,
											"end": 4712,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3550,
											"end": 4712,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 3550,
											"end": 4712,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3550,
											"end": 4712,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3550,
											"end": 4712,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3550,
											"end": 4712,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3550,
											"end": 4712,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3550,
											"end": 4712,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3550,
											"end": 4712,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3550,
											"end": 4712,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 3550,
											"end": 4712,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3550,
											"end": 4712,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3550,
											"end": 4712,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 3550,
											"end": 4712,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3550,
											"end": 4712,
											"name": "tag",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 3550,
											"end": 4712,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3550,
											"end": 4712,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 3550,
											"end": 4712,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3550,
											"end": 4712,
											"name": "tag",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 3550,
											"end": 4712,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3550,
											"end": 4712,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3550,
											"end": 4712,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3550,
											"end": 4712,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 3550,
											"end": 4712,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3550,
											"end": 4712,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3550,
											"end": 4712,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3550,
											"end": 4712,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 3550,
											"end": 4712,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3550,
											"end": 4712,
											"name": "tag",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 3550,
											"end": 4712,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3550,
											"end": 4712,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3550,
											"end": 4712,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3550,
											"end": 4712,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3550,
											"end": 4712,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3550,
											"end": 4712,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3550,
											"end": 4712,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3550,
											"end": 4712,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 611,
											"end": 631,
											"name": "tag",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 611,
											"end": 631,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 611,
											"end": 631,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 611,
											"end": 631,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 611,
											"end": 631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 611,
											"end": 631,
											"name": "tag",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 611,
											"end": 631,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 611,
											"end": 631,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 611,
											"end": 631,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 611,
											"end": 631,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 611,
											"end": 631,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 611,
											"end": 631,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 611,
											"end": 631,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 611,
											"end": 631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 611,
											"end": 631,
											"name": "tag",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 611,
											"end": 631,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 611,
											"end": 631,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 611,
											"end": 631,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 611,
											"end": 631,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 611,
											"end": 631,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 611,
											"end": 631,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 611,
											"end": 631,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 611,
											"end": 631,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 638,
											"end": 658,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 638,
											"end": 658,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 638,
											"end": 658,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 638,
											"end": 658,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 638,
											"end": 658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 638,
											"end": 658,
											"name": "tag",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 638,
											"end": 658,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 638,
											"end": 658,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 638,
											"end": 658,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 638,
											"end": 658,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 638,
											"end": 658,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 638,
											"end": 658,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 638,
											"end": 658,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 638,
											"end": 658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 638,
											"end": 658,
											"name": "tag",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 638,
											"end": 658,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 638,
											"end": 658,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 638,
											"end": 658,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 638,
											"end": 658,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 638,
											"end": 658,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 638,
											"end": 658,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 638,
											"end": 658,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 638,
											"end": 658,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2160,
											"end": 3070,
											"name": "tag",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 2160,
											"end": 3070,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2160,
											"end": 3070,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 2160,
											"end": 3070,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2160,
											"end": 3070,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2160,
											"end": 3070,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 2160,
											"end": 3070,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2160,
											"end": 3070,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2160,
											"end": 3070,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2160,
											"end": 3070,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2160,
											"end": 3070,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 2160,
											"end": 3070,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2160,
											"end": 3070,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2160,
											"end": 3070,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 2160,
											"end": 3070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2160,
											"end": 3070,
											"name": "tag",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 2160,
											"end": 3070,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2160,
											"end": 3070,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 2160,
											"end": 3070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2160,
											"end": 3070,
											"name": "tag",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 2160,
											"end": 3070,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2160,
											"end": 3070,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2160,
											"end": 3070,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2160,
											"end": 3070,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 2160,
											"end": 3070,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2160,
											"end": 3070,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2160,
											"end": 3070,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2160,
											"end": 3070,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 2160,
											"end": 3070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2160,
											"end": 3070,
											"name": "tag",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 2160,
											"end": 3070,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2160,
											"end": 3070,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2160,
											"end": 3070,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2160,
											"end": 3070,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2160,
											"end": 3070,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2160,
											"end": 3070,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2160,
											"end": 3070,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2160,
											"end": 3070,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1022,
											"end": 1983,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 1022,
											"end": 1983,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1022,
											"end": 1983,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 1022,
											"end": 1983,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1022,
											"end": 1983,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1022,
											"end": 1983,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1022,
											"end": 1983,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1022,
											"end": 1983,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1022,
											"end": 1983,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1022,
											"end": 1983,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1022,
											"end": 1983,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 1022,
											"end": 1983,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1022,
											"end": 1983,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1022,
											"end": 1983,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 1022,
											"end": 1983,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1022,
											"end": 1983,
											"name": "tag",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 1022,
											"end": 1983,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1022,
											"end": 1983,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 1022,
											"end": 1983,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1022,
											"end": 1983,
											"name": "tag",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 1022,
											"end": 1983,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1022,
											"end": 1983,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1022,
											"end": 1983,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1022,
											"end": 1983,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 1022,
											"end": 1983,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1022,
											"end": 1983,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1022,
											"end": 1983,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 1022,
											"end": 1983,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1022,
											"end": 1983,
											"name": "tag",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 1022,
											"end": 1983,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1022,
											"end": 1983,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1022,
											"end": 1983,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1022,
											"end": 1983,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1022,
											"end": 1983,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1022,
											"end": 1983,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1022,
											"end": 1983,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1022,
											"end": 1983,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 552,
											"end": 572,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 552,
											"end": 572,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 552,
											"end": 572,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 552,
											"end": 572,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 552,
											"end": 572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 552,
											"end": 572,
											"name": "tag",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 552,
											"end": 572,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 552,
											"end": 572,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 552,
											"end": 572,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 552,
											"end": 572,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 552,
											"end": 572,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 552,
											"end": 572,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 552,
											"end": 572,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 552,
											"end": 572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 552,
											"end": 572,
											"name": "tag",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 552,
											"end": 572,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 552,
											"end": 572,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 552,
											"end": 572,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 552,
											"end": 572,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 552,
											"end": 572,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 552,
											"end": 572,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 552,
											"end": 572,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 552,
											"end": 572,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3107,
											"end": 3426,
											"name": "tag",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 3107,
											"end": 3426,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3198,
											"end": 3212,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3244,
											"end": 3245,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3233,
											"end": 3241,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3233,
											"end": 3245,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 3225,
											"end": 3269,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 3225,
											"end": 3269,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3225,
											"end": 3269,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3225,
											"end": 3269,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3225,
											"end": 3269,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3225,
											"end": 3269,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3225,
											"end": 3269,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3225,
											"end": 3269,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3225,
											"end": 3269,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3225,
											"end": 3269,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 3225,
											"end": 3269,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3225,
											"end": 3269,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 3225,
											"end": 3269,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3225,
											"end": 3269,
											"name": "tag",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 3225,
											"end": 3269,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3225,
											"end": 3269,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3225,
											"end": 3269,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3225,
											"end": 3269,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3225,
											"end": 3269,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3225,
											"end": 3269,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3225,
											"end": 3269,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3225,
											"end": 3269,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3225,
											"end": 3269,
											"name": "tag",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 3225,
											"end": 3269,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3300,
											"end": 3301,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3288,
											"end": 3297,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3288,
											"end": 3301,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 3288,
											"end": 3319,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3288,
											"end": 3319,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3288,
											"end": 3319,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 3288,
											"end": 3319,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3288,
											"end": 3319,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3318,
											"end": 3319,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3305,
											"end": 3315,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3305,
											"end": 3319,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 3288,
											"end": 3319,
											"name": "tag",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 3288,
											"end": 3319,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3280,
											"end": 3347,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 3280,
											"end": 3347,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3280,
											"end": 3347,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3280,
											"end": 3347,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3280,
											"end": 3347,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3280,
											"end": 3347,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3280,
											"end": 3347,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3280,
											"end": 3347,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3280,
											"end": 3347,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3280,
											"end": 3347,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 3280,
											"end": 3347,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3280,
											"end": 3347,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 3280,
											"end": 3347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3280,
											"end": 3347,
											"name": "tag",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 3280,
											"end": 3347,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3280,
											"end": 3347,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3280,
											"end": 3347,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3280,
											"end": 3347,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3280,
											"end": 3347,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3280,
											"end": 3347,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3280,
											"end": 3347,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3280,
											"end": 3347,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3280,
											"end": 3347,
											"name": "tag",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 3280,
											"end": 3347,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3409,
											"end": 3417,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3397,
											"end": 3406,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3397,
											"end": 3417,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 3397,
											"end": 3417,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3397,
											"end": 3417,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3397,
											"end": 3417,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 3397,
											"end": 3417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3397,
											"end": 3417,
											"name": "tag",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 3397,
											"end": 3417,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3383,
											"end": 3393,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3372,
											"end": 3380,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3372,
											"end": 3393,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 3372,
											"end": 3393,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3372,
											"end": 3393,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3372,
											"end": 3393,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 3372,
											"end": 3393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3372,
											"end": 3393,
											"name": "tag",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 3372,
											"end": 3393,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3372,
											"end": 3418,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 3372,
											"end": 3418,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3372,
											"end": 3418,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3372,
											"end": 3418,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 3372,
											"end": 3418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3372,
											"end": 3418,
											"name": "tag",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 3372,
											"end": 3418,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3360,
											"end": 3418,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3360,
											"end": 3418,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3107,
											"end": 3426,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 3107,
											"end": 3426,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3107,
											"end": 3426,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3107,
											"end": 3426,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3107,
											"end": 3426,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3107,
											"end": 3426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2119,
											"end": 2132,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2151,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4366,
											"end": 4370,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4382,
											"end": 4395,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 4398,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 4398,
											"end": 4410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4382,
											"end": 4410,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4382,
											"end": 4410,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 4429,
											"end": 4434,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4436,
											"end": 4443,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4445,
											"end": 4450,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4420,
											"end": 4428,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 4420,
											"end": 4451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4468,
											"end": 4472,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 525,
											"end": 545,
											"name": "tag",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 525,
											"end": 545,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 525,
											"end": 545,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 525,
											"end": 545,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 525,
											"end": 545,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 525,
											"end": 545,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 525,
											"end": 545,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 525,
											"end": 545,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 525,
											"end": 545,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 525,
											"end": 545,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 525,
											"end": 545,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 525,
											"end": 545,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 525,
											"end": 545,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 525,
											"end": 545,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 525,
											"end": 545,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3196,
											"end": 3203,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3215,
											"end": 3234,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3215,
											"end": 3234,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5126,
											"end": 5130,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5142,
											"end": 5157,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 5160,
											"end": 5170,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 5160,
											"end": 5172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5172,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5172,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 5198,
											"end": 5202,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5204,
											"end": 5211,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5213,
											"end": 5218,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5182,
											"end": 5197,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 5182,
											"end": 5219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 5239,
											"end": 5243,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5245,
											"end": 5247,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5249,
											"end": 5254,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5229,
											"end": 5238,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 5229,
											"end": 5255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5272,
											"end": 5276,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3051,
											"end": 3056,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3075,
											"end": 3077,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 3068,
											"end": 3077,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3077,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3550,
											"end": 4712,
											"name": "tag",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 3550,
											"end": 4712,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3631,
											"end": 3645,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3647,
											"end": 3662,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3694,
											"end": 3695,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3683,
											"end": 3691,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3683,
											"end": 3695,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 3675,
											"end": 3726,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 3675,
											"end": 3726,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3675,
											"end": 3726,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3675,
											"end": 3726,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3675,
											"end": 3726,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3675,
											"end": 3726,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3675,
											"end": 3726,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3675,
											"end": 3726,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3675,
											"end": 3726,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3675,
											"end": 3726,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 3675,
											"end": 3726,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3675,
											"end": 3726,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 3675,
											"end": 3726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3675,
											"end": 3726,
											"name": "tag",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 3675,
											"end": 3726,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3675,
											"end": 3726,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3675,
											"end": 3726,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3675,
											"end": 3726,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3675,
											"end": 3726,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3675,
											"end": 3726,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3675,
											"end": 3726,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3675,
											"end": 3726,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3675,
											"end": 3726,
											"name": "tag",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 3675,
											"end": 3726,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3756,
											"end": 3762,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 3756,
											"end": 3762,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3756,
											"end": 3762,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3756,
											"end": 3762,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3756,
											"end": 3762,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3756,
											"end": 3762,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 3756,
											"end": 3762,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 3756,
											"end": 3762,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3756,
											"end": 3762,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 3756,
											"end": 3762,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3756,
											"end": 3762,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3745,
											"end": 3762,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3745,
											"end": 3762,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3745,
											"end": 3752,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3745,
											"end": 3762,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3745,
											"end": 3762,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3745,
											"end": 3762,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 3745,
											"end": 3783,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3745,
											"end": 3783,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 3745,
											"end": 3783,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3745,
											"end": 3783,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3777,
											"end": 3783,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 3777,
											"end": 3783,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3777,
											"end": 3783,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3777,
											"end": 3783,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3777,
											"end": 3783,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3777,
											"end": 3783,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 3777,
											"end": 3783,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 3777,
											"end": 3783,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3777,
											"end": 3783,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 3777,
											"end": 3783,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3777,
											"end": 3783,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3766,
											"end": 3783,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3766,
											"end": 3783,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3766,
											"end": 3773,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3766,
											"end": 3783,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3766,
											"end": 3783,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3766,
											"end": 3783,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 3745,
											"end": 3783,
											"name": "tag",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 3745,
											"end": 3783,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3737,
											"end": 3801,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 3737,
											"end": 3801,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3737,
											"end": 3801,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3737,
											"end": 3801,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3737,
											"end": 3801,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3737,
											"end": 3801,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3737,
											"end": 3801,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3737,
											"end": 3801,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3737,
											"end": 3801,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3737,
											"end": 3801,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 3737,
											"end": 3801,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3737,
											"end": 3801,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 3737,
											"end": 3801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3737,
											"end": 3801,
											"name": "tag",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 3737,
											"end": 3801,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3737,
											"end": 3801,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3737,
											"end": 3801,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3737,
											"end": 3801,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3737,
											"end": 3801,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3737,
											"end": 3801,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3737,
											"end": 3801,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3737,
											"end": 3801,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3737,
											"end": 3801,
											"name": "tag",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 3737,
											"end": 3801,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3829,
											"end": 3835,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 3829,
											"end": 3835,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3829,
											"end": 3835,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3829,
											"end": 3835,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3829,
											"end": 3835,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3829,
											"end": 3835,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 3829,
											"end": 3835,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 3829,
											"end": 3835,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3829,
											"end": 3835,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 3829,
											"end": 3835,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3829,
											"end": 3835,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3818,
											"end": 3835,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3818,
											"end": 3835,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3818,
											"end": 3825,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3818,
											"end": 3835,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3818,
											"end": 3835,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3818,
											"end": 3835,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3814,
											"end": 4477,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 3814,
											"end": 4477,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3863,
											"end": 3869,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 3863,
											"end": 3869,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3863,
											"end": 3869,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3863,
											"end": 3869,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3863,
											"end": 3869,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3863,
											"end": 3869,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 3863,
											"end": 3869,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 3863,
											"end": 3869,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3863,
											"end": 3869,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 3863,
											"end": 3869,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3863,
											"end": 3869,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3852,
											"end": 3869,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3852,
											"end": 3869,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3896,
											"end": 3938,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 3909,
											"end": 3917,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3919,
											"end": 3927,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 3919,
											"end": 3927,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3929,
											"end": 3937,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 3929,
											"end": 3937,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3896,
											"end": 3908,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 3896,
											"end": 3938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3896,
											"end": 3938,
											"name": "tag",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 3896,
											"end": 3938,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3884,
											"end": 3938,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3884,
											"end": 3938,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3973,
											"end": 3984,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3961,
											"end": 3970,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3961,
											"end": 3984,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 3953,
											"end": 4015,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 3953,
											"end": 4015,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3953,
											"end": 4015,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3953,
											"end": 4015,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3953,
											"end": 4015,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3953,
											"end": 4015,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3953,
											"end": 4015,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3953,
											"end": 4015,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3953,
											"end": 4015,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3953,
											"end": 4015,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 3953,
											"end": 4015,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3953,
											"end": 4015,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 3953,
											"end": 4015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3953,
											"end": 4015,
											"name": "tag",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 3953,
											"end": 4015,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3953,
											"end": 4015,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3953,
											"end": 4015,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3953,
											"end": 4015,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3953,
											"end": 4015,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3953,
											"end": 4015,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3953,
											"end": 4015,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3953,
											"end": 4015,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3953,
											"end": 4015,
											"name": "tag",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 3953,
											"end": 4015,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4030,
											"end": 4037,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4030,
											"end": 4050,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4030,
											"end": 4050,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4030,
											"end": 4050,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 4051,
											"end": 4061,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 4071,
											"end": 4075,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 4078,
											"end": 4086,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 4030,
											"end": 4087,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4030,
											"end": 4087,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4030,
											"end": 4087,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4030,
											"end": 4087,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4030,
											"end": 4087,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4030,
											"end": 4087,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 4030,
											"end": 4087,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 4030,
											"end": 4087,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4030,
											"end": 4087,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4030,
											"end": 4087,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4030,
											"end": 4087,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4030,
											"end": 4087,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 4030,
											"end": 4087,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 4030,
											"end": 4087,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4030,
											"end": 4087,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4030,
											"end": 4087,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4030,
											"end": 4087,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 4030,
											"end": 4087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4030,
											"end": 4087,
											"name": "tag",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 4030,
											"end": 4087,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4030,
											"end": 4087,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4030,
											"end": 4087,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4030,
											"end": 4087,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4030,
											"end": 4087,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4030,
											"end": 4087,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4030,
											"end": 4087,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4030,
											"end": 4087,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4030,
											"end": 4087,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4030,
											"end": 4087,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 4030,
											"end": 4087,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 4030,
											"end": 4087,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 4030,
											"end": 4087,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4030,
											"end": 4087,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4030,
											"end": 4087,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4030,
											"end": 4087,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 4030,
											"end": 4087,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4030,
											"end": 4087,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 4030,
											"end": 4087,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4030,
											"end": 4087,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4030,
											"end": 4087,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 4030,
											"end": 4087,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 4030,
											"end": 4087,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4030,
											"end": 4087,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4030,
											"end": 4087,
											"name": "tag",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 4030,
											"end": 4087,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4030,
											"end": 4087,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4030,
											"end": 4087,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4030,
											"end": 4087,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4030,
											"end": 4087,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4030,
											"end": 4087,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4030,
											"end": 4087,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4030,
											"end": 4087,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 4030,
											"end": 4087,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 4030,
											"end": 4087,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 4030,
											"end": 4087,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 4030,
											"end": 4087,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4030,
											"end": 4087,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4030,
											"end": 4087,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4030,
											"end": 4087,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4030,
											"end": 4087,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4030,
											"end": 4087,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4030,
											"end": 4087,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4030,
											"end": 4087,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4030,
											"end": 4087,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4030,
											"end": 4087,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4030,
											"end": 4087,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4030,
											"end": 4087,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4030,
											"end": 4087,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 4030,
											"end": 4087,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4030,
											"end": 4087,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4030,
											"end": 4087,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 4030,
											"end": 4087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4030,
											"end": 4087,
											"name": "tag",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 4030,
											"end": 4087,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4030,
											"end": 4087,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4102,
											"end": 4110,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4102,
											"end": 4119,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4102,
											"end": 4119,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4102,
											"end": 4119,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 4120,
											"end": 4130,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 4132,
											"end": 4141,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4102,
											"end": 4142,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4102,
											"end": 4142,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4102,
											"end": 4142,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4102,
											"end": 4142,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4102,
											"end": 4142,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4102,
											"end": 4142,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 4102,
											"end": 4142,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 4102,
											"end": 4142,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4102,
											"end": 4142,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4102,
											"end": 4142,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4102,
											"end": 4142,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4102,
											"end": 4142,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 4102,
											"end": 4142,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4102,
											"end": 4142,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4102,
											"end": 4142,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4102,
											"end": 4142,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 4102,
											"end": 4142,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4102,
											"end": 4142,
											"name": "tag",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 4102,
											"end": 4142,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4102,
											"end": 4142,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4102,
											"end": 4142,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4102,
											"end": 4142,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4102,
											"end": 4142,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4102,
											"end": 4142,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4102,
											"end": 4142,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4102,
											"end": 4142,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4102,
											"end": 4142,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4102,
											"end": 4142,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 4102,
											"end": 4142,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 4102,
											"end": 4142,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 4102,
											"end": 4142,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4102,
											"end": 4142,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4102,
											"end": 4142,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4102,
											"end": 4142,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 4102,
											"end": 4142,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4102,
											"end": 4142,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 4102,
											"end": 4142,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4102,
											"end": 4142,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4102,
											"end": 4142,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 4102,
											"end": 4142,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 4102,
											"end": 4142,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4102,
											"end": 4142,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4102,
											"end": 4142,
											"name": "tag",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 4102,
											"end": 4142,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4102,
											"end": 4142,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4102,
											"end": 4142,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4102,
											"end": 4142,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4102,
											"end": 4142,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4102,
											"end": 4142,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4102,
											"end": 4142,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4102,
											"end": 4142,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 4102,
											"end": 4142,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 4102,
											"end": 4142,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 4102,
											"end": 4142,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 4102,
											"end": 4142,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4102,
											"end": 4142,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4102,
											"end": 4142,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4102,
											"end": 4142,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4102,
											"end": 4142,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4102,
											"end": 4142,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4102,
											"end": 4142,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4102,
											"end": 4142,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4102,
											"end": 4142,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4102,
											"end": 4142,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4102,
											"end": 4142,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4102,
											"end": 4142,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4102,
											"end": 4142,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 4102,
											"end": 4142,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4102,
											"end": 4142,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4102,
											"end": 4142,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 4102,
											"end": 4142,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4102,
											"end": 4142,
											"name": "tag",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 4102,
											"end": 4142,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4102,
											"end": 4142,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3814,
											"end": 4477,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 3814,
											"end": 4477,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3814,
											"end": 4477,
											"name": "tag",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 3814,
											"end": 4477,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4186,
											"end": 4192,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 4186,
											"end": 4192,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4186,
											"end": 4192,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4186,
											"end": 4192,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4186,
											"end": 4192,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4186,
											"end": 4192,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 4186,
											"end": 4192,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 4186,
											"end": 4192,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4186,
											"end": 4192,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 4186,
											"end": 4192,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4186,
											"end": 4192,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4175,
											"end": 4192,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4175,
											"end": 4192,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4219,
											"end": 4261,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 4232,
											"end": 4240,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4242,
											"end": 4250,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 4242,
											"end": 4250,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4252,
											"end": 4260,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 4252,
											"end": 4260,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4219,
											"end": 4231,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 4219,
											"end": 4261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4219,
											"end": 4261,
											"name": "tag",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 4219,
											"end": 4261,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4207,
											"end": 4261,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4207,
											"end": 4261,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4296,
											"end": 4307,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4284,
											"end": 4293,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4284,
											"end": 4307,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 4276,
											"end": 4338,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 4276,
											"end": 4338,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4276,
											"end": 4338,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4276,
											"end": 4338,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4276,
											"end": 4338,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4276,
											"end": 4338,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4276,
											"end": 4338,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4276,
											"end": 4338,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4276,
											"end": 4338,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4276,
											"end": 4338,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 4276,
											"end": 4338,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4276,
											"end": 4338,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 4276,
											"end": 4338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4276,
											"end": 4338,
											"name": "tag",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 4276,
											"end": 4338,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4276,
											"end": 4338,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4276,
											"end": 4338,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4276,
											"end": 4338,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4276,
											"end": 4338,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4276,
											"end": 4338,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4276,
											"end": 4338,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4276,
											"end": 4338,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4276,
											"end": 4338,
											"name": "tag",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 4276,
											"end": 4338,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4353,
											"end": 4360,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4353,
											"end": 4373,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4353,
											"end": 4373,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4353,
											"end": 4373,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 4374,
											"end": 4384,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 4394,
											"end": 4398,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 4401,
											"end": 4409,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 4353,
											"end": 4410,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4353,
											"end": 4410,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4353,
											"end": 4410,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4353,
											"end": 4410,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4353,
											"end": 4410,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4353,
											"end": 4410,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 4353,
											"end": 4410,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 4353,
											"end": 4410,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4353,
											"end": 4410,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4353,
											"end": 4410,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4353,
											"end": 4410,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4353,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 4353,
											"end": 4410,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 4353,
											"end": 4410,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4353,
											"end": 4410,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4353,
											"end": 4410,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4353,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 4353,
											"end": 4410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4353,
											"end": 4410,
											"name": "tag",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 4353,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4353,
											"end": 4410,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4353,
											"end": 4410,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4353,
											"end": 4410,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4353,
											"end": 4410,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4353,
											"end": 4410,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4353,
											"end": 4410,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4353,
											"end": 4410,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4353,
											"end": 4410,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4353,
											"end": 4410,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 4353,
											"end": 4410,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 4353,
											"end": 4410,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 4353,
											"end": 4410,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4353,
											"end": 4410,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4353,
											"end": 4410,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4353,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 4353,
											"end": 4410,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4353,
											"end": 4410,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 4353,
											"end": 4410,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4353,
											"end": 4410,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4353,
											"end": 4410,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 4353,
											"end": 4410,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 4353,
											"end": 4410,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4353,
											"end": 4410,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4353,
											"end": 4410,
											"name": "tag",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 4353,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4353,
											"end": 4410,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4353,
											"end": 4410,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4353,
											"end": 4410,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4353,
											"end": 4410,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4353,
											"end": 4410,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4353,
											"end": 4410,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4353,
											"end": 4410,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 4353,
											"end": 4410,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 4353,
											"end": 4410,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 4353,
											"end": 4410,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 4353,
											"end": 4410,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4353,
											"end": 4410,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4353,
											"end": 4410,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4353,
											"end": 4410,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4353,
											"end": 4410,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4353,
											"end": 4410,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4353,
											"end": 4410,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4353,
											"end": 4410,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4353,
											"end": 4410,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4353,
											"end": 4410,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4353,
											"end": 4410,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4353,
											"end": 4410,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4353,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 4353,
											"end": 4410,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4353,
											"end": 4410,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4353,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 4353,
											"end": 4410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4353,
											"end": 4410,
											"name": "tag",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 4353,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4353,
											"end": 4410,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4425,
											"end": 4433,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4425,
											"end": 4442,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4425,
											"end": 4442,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4425,
											"end": 4442,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 4443,
											"end": 4453,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 4455,
											"end": 4464,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4425,
											"end": 4465,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4425,
											"end": 4465,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4425,
											"end": 4465,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4425,
											"end": 4465,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4425,
											"end": 4465,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4425,
											"end": 4465,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 4425,
											"end": 4465,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 4425,
											"end": 4465,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4425,
											"end": 4465,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4425,
											"end": 4465,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4425,
											"end": 4465,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4425,
											"end": 4465,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 4425,
											"end": 4465,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4425,
											"end": 4465,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4425,
											"end": 4465,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4425,
											"end": 4465,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 4425,
											"end": 4465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4425,
											"end": 4465,
											"name": "tag",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 4425,
											"end": 4465,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4425,
											"end": 4465,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4425,
											"end": 4465,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4425,
											"end": 4465,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4425,
											"end": 4465,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4425,
											"end": 4465,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4425,
											"end": 4465,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4425,
											"end": 4465,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4425,
											"end": 4465,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4425,
											"end": 4465,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 4425,
											"end": 4465,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 4425,
											"end": 4465,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 4425,
											"end": 4465,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4425,
											"end": 4465,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4425,
											"end": 4465,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4425,
											"end": 4465,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 4425,
											"end": 4465,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4425,
											"end": 4465,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 4425,
											"end": 4465,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4425,
											"end": 4465,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4425,
											"end": 4465,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 4425,
											"end": 4465,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 4425,
											"end": 4465,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4425,
											"end": 4465,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4425,
											"end": 4465,
											"name": "tag",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 4425,
											"end": 4465,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4425,
											"end": 4465,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4425,
											"end": 4465,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4425,
											"end": 4465,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4425,
											"end": 4465,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4425,
											"end": 4465,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4425,
											"end": 4465,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4425,
											"end": 4465,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 4425,
											"end": 4465,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 4425,
											"end": 4465,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 4425,
											"end": 4465,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 4425,
											"end": 4465,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4425,
											"end": 4465,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4425,
											"end": 4465,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4425,
											"end": 4465,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4425,
											"end": 4465,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4425,
											"end": 4465,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4425,
											"end": 4465,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4425,
											"end": 4465,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4425,
											"end": 4465,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4425,
											"end": 4465,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4425,
											"end": 4465,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4425,
											"end": 4465,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4425,
											"end": 4465,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 4425,
											"end": 4465,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4425,
											"end": 4465,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4425,
											"end": 4465,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 4425,
											"end": 4465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4425,
											"end": 4465,
											"name": "tag",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 4425,
											"end": 4465,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4425,
											"end": 4465,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3814,
											"end": 4477,
											"name": "tag",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 3814,
											"end": 4477,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4528,
											"end": 4534,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 4528,
											"end": 4534,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4528,
											"end": 4534,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4528,
											"end": 4534,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4528,
											"end": 4534,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4528,
											"end": 4534,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 4528,
											"end": 4534,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 4528,
											"end": 4534,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4528,
											"end": 4534,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 4528,
											"end": 4534,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4528,
											"end": 4534,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4528,
											"end": 4544,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4528,
											"end": 4544,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4528,
											"end": 4544,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 4553,
											"end": 4557,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 4528,
											"end": 4559,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4528,
											"end": 4559,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4528,
											"end": 4559,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4528,
											"end": 4559,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4528,
											"end": 4559,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4528,
											"end": 4559,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 4528,
											"end": 4559,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 4528,
											"end": 4559,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4528,
											"end": 4559,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4528,
											"end": 4559,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4528,
											"end": 4559,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4528,
											"end": 4559,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 4528,
											"end": 4559,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4528,
											"end": 4559,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4528,
											"end": 4559,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 4528,
											"end": 4559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4528,
											"end": 4559,
											"name": "tag",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 4528,
											"end": 4559,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4528,
											"end": 4559,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4528,
											"end": 4559,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4528,
											"end": 4559,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4528,
											"end": 4559,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4528,
											"end": 4559,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4528,
											"end": 4559,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4528,
											"end": 4559,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4528,
											"end": 4559,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 4528,
											"end": 4559,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 4528,
											"end": 4559,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 4528,
											"end": 4559,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4528,
											"end": 4559,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4528,
											"end": 4559,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4528,
											"end": 4559,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 4528,
											"end": 4559,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4528,
											"end": 4559,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 4528,
											"end": 4559,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4528,
											"end": 4559,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4528,
											"end": 4559,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 4528,
											"end": 4559,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 4528,
											"end": 4559,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4528,
											"end": 4559,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4528,
											"end": 4559,
											"name": "tag",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 4528,
											"end": 4559,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4528,
											"end": 4559,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4528,
											"end": 4559,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4528,
											"end": 4559,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4528,
											"end": 4559,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4528,
											"end": 4559,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4528,
											"end": 4559,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4528,
											"end": 4559,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 4528,
											"end": 4559,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 4528,
											"end": 4559,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 4528,
											"end": 4559,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 4528,
											"end": 4559,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4528,
											"end": 4559,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4528,
											"end": 4559,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4528,
											"end": 4559,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4528,
											"end": 4559,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4528,
											"end": 4559,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4528,
											"end": 4559,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4528,
											"end": 4559,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4528,
											"end": 4559,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4528,
											"end": 4559,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4528,
											"end": 4559,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4528,
											"end": 4559,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4528,
											"end": 4559,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 4528,
											"end": 4559,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4528,
											"end": 4559,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4528,
											"end": 4559,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 4528,
											"end": 4559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4528,
											"end": 4559,
											"name": "tag",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 4528,
											"end": 4559,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4517,
											"end": 4525,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 4517,
											"end": 4559,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4517,
											"end": 4559,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4517,
											"end": 4559,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 4517,
											"end": 4559,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4581,
											"end": 4587,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 4581,
											"end": 4587,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4581,
											"end": 4587,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4581,
											"end": 4587,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4581,
											"end": 4587,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4581,
											"end": 4587,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 4581,
											"end": 4587,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 4581,
											"end": 4587,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4581,
											"end": 4587,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 4581,
											"end": 4587,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4581,
											"end": 4587,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4581,
											"end": 4597,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4581,
											"end": 4597,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4581,
											"end": 4597,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 4606,
											"end": 4610,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 4581,
											"end": 4612,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4581,
											"end": 4612,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4581,
											"end": 4612,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4581,
											"end": 4612,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4581,
											"end": 4612,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4581,
											"end": 4612,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 4581,
											"end": 4612,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 4581,
											"end": 4612,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4581,
											"end": 4612,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4581,
											"end": 4612,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4581,
											"end": 4612,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4581,
											"end": 4612,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 4581,
											"end": 4612,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4581,
											"end": 4612,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4581,
											"end": 4612,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 4581,
											"end": 4612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4581,
											"end": 4612,
											"name": "tag",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 4581,
											"end": 4612,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4581,
											"end": 4612,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4581,
											"end": 4612,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4581,
											"end": 4612,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4581,
											"end": 4612,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4581,
											"end": 4612,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4581,
											"end": 4612,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4581,
											"end": 4612,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4581,
											"end": 4612,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 4581,
											"end": 4612,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 4581,
											"end": 4612,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 4581,
											"end": 4612,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4581,
											"end": 4612,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4581,
											"end": 4612,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4581,
											"end": 4612,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 4581,
											"end": 4612,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4581,
											"end": 4612,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 4581,
											"end": 4612,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4581,
											"end": 4612,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4581,
											"end": 4612,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 4581,
											"end": 4612,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 4581,
											"end": 4612,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4581,
											"end": 4612,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4581,
											"end": 4612,
											"name": "tag",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 4581,
											"end": 4612,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4581,
											"end": 4612,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4581,
											"end": 4612,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4581,
											"end": 4612,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4581,
											"end": 4612,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4581,
											"end": 4612,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4581,
											"end": 4612,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4581,
											"end": 4612,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 4581,
											"end": 4612,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 4581,
											"end": 4612,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 4581,
											"end": 4612,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 4581,
											"end": 4612,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4581,
											"end": 4612,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4581,
											"end": 4612,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4581,
											"end": 4612,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4581,
											"end": 4612,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4581,
											"end": 4612,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4581,
											"end": 4612,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4581,
											"end": 4612,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4581,
											"end": 4612,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4581,
											"end": 4612,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4581,
											"end": 4612,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4581,
											"end": 4612,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4581,
											"end": 4612,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 4581,
											"end": 4612,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4581,
											"end": 4612,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4581,
											"end": 4612,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 4581,
											"end": 4612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4581,
											"end": 4612,
											"name": "tag",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 4581,
											"end": 4612,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4570,
											"end": 4578,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 4570,
											"end": 4612,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4570,
											"end": 4612,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4570,
											"end": 4612,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 4570,
											"end": 4612,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4635,
											"end": 4645,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 4630,
											"end": 4704,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4630,
											"end": 4704,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4630,
											"end": 4704,
											"name": "PUSH",
											"source": 5,
											"value": "24043855BFBFEA0CCEA141E5A73D7116BF0BFE083EA900A791F4B407FF03E525"
										},
										{
											"begin": 4647,
											"end": 4655,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 4665,
											"end": 4672,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 4675,
											"end": 4684,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4694,
											"end": 4702,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4630,
											"end": 4704,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4630,
											"end": 4704,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4630,
											"end": 4704,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 4630,
											"end": 4704,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 4630,
											"end": 4704,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 4630,
											"end": 4704,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4630,
											"end": 4704,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4630,
											"end": 4704,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4630,
											"end": 4704,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 4630,
											"end": 4704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4630,
											"end": 4704,
											"name": "tag",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 4630,
											"end": 4704,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4630,
											"end": 4704,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4630,
											"end": 4704,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4630,
											"end": 4704,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4630,
											"end": 4704,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4630,
											"end": 4704,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4630,
											"end": 4704,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4630,
											"end": 4704,
											"name": "LOG2",
											"source": 5
										},
										{
											"begin": 3550,
											"end": 4712,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 3550,
											"end": 4712,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3550,
											"end": 4712,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 3550,
											"end": 4712,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3550,
											"end": 4712,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3550,
											"end": 4712,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3550,
											"end": 4712,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 611,
											"end": 631,
											"name": "tag",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 611,
											"end": 631,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 611,
											"end": 631,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 611,
											"end": 631,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 611,
											"end": 631,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 611,
											"end": 631,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 638,
											"end": 658,
											"name": "tag",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 638,
											"end": 658,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 638,
											"end": 658,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 638,
											"end": 658,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 638,
											"end": 658,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 638,
											"end": 658,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3364,
											"end": 3371,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3399,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3407,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3383,
											"end": 3408,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3383,
											"end": 3408,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2323,
											"end": 2336,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2355,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2160,
											"end": 3070,
											"name": "tag",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 2160,
											"end": 3070,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2234,
											"end": 2246,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2308,
											"end": 2322,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2325,
											"end": 2331,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 2325,
											"end": 2331,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2325,
											"end": 2331,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2325,
											"end": 2331,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2325,
											"end": 2331,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2325,
											"end": 2331,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2325,
											"end": 2331,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 2325,
											"end": 2331,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2325,
											"end": 2331,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2325,
											"end": 2331,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2325,
											"end": 2331,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2325,
											"end": 2341,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2325,
											"end": 2341,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2325,
											"end": 2341,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 2350,
											"end": 2354,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 2325,
											"end": 2356,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2325,
											"end": 2356,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2325,
											"end": 2356,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2325,
											"end": 2356,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2325,
											"end": 2356,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2325,
											"end": 2356,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 2325,
											"end": 2356,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 2325,
											"end": 2356,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2325,
											"end": 2356,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2325,
											"end": 2356,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2325,
											"end": 2356,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2325,
											"end": 2356,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 2325,
											"end": 2356,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2325,
											"end": 2356,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2325,
											"end": 2356,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 2325,
											"end": 2356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2325,
											"end": 2356,
											"name": "tag",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 2325,
											"end": 2356,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2325,
											"end": 2356,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2325,
											"end": 2356,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2325,
											"end": 2356,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2325,
											"end": 2356,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2325,
											"end": 2356,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2325,
											"end": 2356,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2325,
											"end": 2356,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2325,
											"end": 2356,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2325,
											"end": 2356,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 2325,
											"end": 2356,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 2325,
											"end": 2356,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2325,
											"end": 2356,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2325,
											"end": 2356,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2325,
											"end": 2356,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 2325,
											"end": 2356,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2325,
											"end": 2356,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2325,
											"end": 2356,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2325,
											"end": 2356,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2325,
											"end": 2356,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 2325,
											"end": 2356,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2325,
											"end": 2356,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2325,
											"end": 2356,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2325,
											"end": 2356,
											"name": "tag",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 2325,
											"end": 2356,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2325,
											"end": 2356,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2325,
											"end": 2356,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2325,
											"end": 2356,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2325,
											"end": 2356,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2325,
											"end": 2356,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2325,
											"end": 2356,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2325,
											"end": 2356,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2325,
											"end": 2356,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2325,
											"end": 2356,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 2325,
											"end": 2356,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2325,
											"end": 2356,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2325,
											"end": 2356,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2325,
											"end": 2356,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2325,
											"end": 2356,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2325,
											"end": 2356,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2325,
											"end": 2356,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2325,
											"end": 2356,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2325,
											"end": 2356,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2325,
											"end": 2356,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2325,
											"end": 2356,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2325,
											"end": 2356,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2325,
											"end": 2356,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2325,
											"end": 2356,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 2325,
											"end": 2356,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2325,
											"end": 2356,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2325,
											"end": 2356,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 2325,
											"end": 2356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2325,
											"end": 2356,
											"name": "tag",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 2325,
											"end": 2356,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2308,
											"end": 2356,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2308,
											"end": 2356,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2367,
											"end": 2381,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2384,
											"end": 2390,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 2384,
											"end": 2390,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2384,
											"end": 2390,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2384,
											"end": 2390,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2384,
											"end": 2390,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2384,
											"end": 2390,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2384,
											"end": 2390,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 2384,
											"end": 2390,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2384,
											"end": 2390,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2384,
											"end": 2390,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2384,
											"end": 2390,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2384,
											"end": 2400,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2384,
											"end": 2400,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2384,
											"end": 2400,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 2409,
											"end": 2413,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 2384,
											"end": 2415,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2384,
											"end": 2415,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2384,
											"end": 2415,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2384,
											"end": 2415,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2384,
											"end": 2415,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2384,
											"end": 2415,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 2384,
											"end": 2415,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 2384,
											"end": 2415,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2384,
											"end": 2415,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2384,
											"end": 2415,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2384,
											"end": 2415,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2384,
											"end": 2415,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 2384,
											"end": 2415,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2384,
											"end": 2415,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2384,
											"end": 2415,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 2384,
											"end": 2415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2384,
											"end": 2415,
											"name": "tag",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 2384,
											"end": 2415,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2384,
											"end": 2415,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2384,
											"end": 2415,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2384,
											"end": 2415,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2384,
											"end": 2415,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2384,
											"end": 2415,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2384,
											"end": 2415,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2384,
											"end": 2415,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2384,
											"end": 2415,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2384,
											"end": 2415,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 2384,
											"end": 2415,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 2384,
											"end": 2415,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2384,
											"end": 2415,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2384,
											"end": 2415,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2384,
											"end": 2415,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 2384,
											"end": 2415,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2384,
											"end": 2415,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2384,
											"end": 2415,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2384,
											"end": 2415,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2384,
											"end": 2415,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 2384,
											"end": 2415,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2384,
											"end": 2415,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2384,
											"end": 2415,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2384,
											"end": 2415,
											"name": "tag",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 2384,
											"end": 2415,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2384,
											"end": 2415,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2384,
											"end": 2415,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2384,
											"end": 2415,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2384,
											"end": 2415,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2384,
											"end": 2415,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2384,
											"end": 2415,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2384,
											"end": 2415,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2384,
											"end": 2415,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2384,
											"end": 2415,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 2384,
											"end": 2415,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2384,
											"end": 2415,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2384,
											"end": 2415,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2384,
											"end": 2415,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2384,
											"end": 2415,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2384,
											"end": 2415,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2384,
											"end": 2415,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2384,
											"end": 2415,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2384,
											"end": 2415,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2384,
											"end": 2415,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2384,
											"end": 2415,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2384,
											"end": 2415,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2384,
											"end": 2415,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2384,
											"end": 2415,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 2384,
											"end": 2415,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2384,
											"end": 2415,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2384,
											"end": 2415,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 2384,
											"end": 2415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2384,
											"end": 2415,
											"name": "tag",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 2384,
											"end": 2415,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2367,
											"end": 2415,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2367,
											"end": 2415,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2450,
											"end": 2467,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2470,
											"end": 2483,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 2470,
											"end": 2481,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 2470,
											"end": 2483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2470,
											"end": 2483,
											"name": "tag",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 2470,
											"end": 2483,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2450,
											"end": 2483,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2450,
											"end": 2483,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2528,
											"end": 2540,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2516,
											"end": 2525,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2504,
											"end": 2513,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2504,
											"end": 2525,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 2504,
											"end": 2525,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2504,
											"end": 2525,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2504,
											"end": 2525,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 2504,
											"end": 2525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2504,
											"end": 2525,
											"name": "tag",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 2504,
											"end": 2525,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2504,
											"end": 2540,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 2504,
											"end": 2540,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2504,
											"end": 2540,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2504,
											"end": 2540,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 2504,
											"end": 2540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2504,
											"end": 2540,
											"name": "tag",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 2504,
											"end": 2540,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2494,
											"end": 2540,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 2494,
											"end": 2540,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2585,
											"end": 2597,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2573,
											"end": 2582,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2561,
											"end": 2570,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2561,
											"end": 2582,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 2561,
											"end": 2582,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2561,
											"end": 2582,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2561,
											"end": 2582,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 2561,
											"end": 2582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2561,
											"end": 2582,
											"name": "tag",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 2561,
											"end": 2582,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2561,
											"end": 2597,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 2561,
											"end": 2597,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2561,
											"end": 2597,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2561,
											"end": 2597,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 2561,
											"end": 2597,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2561,
											"end": 2597,
											"name": "tag",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 2561,
											"end": 2597,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2551,
											"end": 2597,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2551,
											"end": 2597,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2628,
											"end": 2629,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2618,
											"end": 2625,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2618,
											"end": 2629,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2618,
											"end": 2644,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2618,
											"end": 2644,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2618,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 2618,
											"end": 2644,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2618,
											"end": 2644,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2643,
											"end": 2644,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2633,
											"end": 2640,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2633,
											"end": 2644,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2618,
											"end": 2644,
											"name": "tag",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 2618,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2610,
											"end": 2678,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 2610,
											"end": 2678,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2610,
											"end": 2678,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2610,
											"end": 2678,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2610,
											"end": 2678,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2610,
											"end": 2678,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2610,
											"end": 2678,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2610,
											"end": 2678,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2610,
											"end": 2678,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2610,
											"end": 2678,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 2610,
											"end": 2678,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2610,
											"end": 2678,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 2610,
											"end": 2678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2610,
											"end": 2678,
											"name": "tag",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 2610,
											"end": 2678,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2610,
											"end": 2678,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2610,
											"end": 2678,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2610,
											"end": 2678,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2610,
											"end": 2678,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2610,
											"end": 2678,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2610,
											"end": 2678,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2610,
											"end": 2678,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2610,
											"end": 2678,
											"name": "tag",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 2610,
											"end": 2678,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2718,
											"end": 2746,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 2724,
											"end": 2734,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2736,
											"end": 2745,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2718,
											"end": 2723,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 2718,
											"end": 2746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2718,
											"end": 2746,
											"name": "tag",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 2718,
											"end": 2746,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2788,
											"end": 2794,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 2788,
											"end": 2794,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2788,
											"end": 2794,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2788,
											"end": 2794,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2788,
											"end": 2794,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2788,
											"end": 2794,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2788,
											"end": 2794,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 2788,
											"end": 2794,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2788,
											"end": 2794,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2788,
											"end": 2794,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2788,
											"end": 2794,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2788,
											"end": 2803,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2788,
											"end": 2803,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2788,
											"end": 2803,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 2804,
											"end": 2814,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2816,
											"end": 2823,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2788,
											"end": 2824,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2788,
											"end": 2824,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2788,
											"end": 2824,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2788,
											"end": 2824,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2788,
											"end": 2824,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2788,
											"end": 2824,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 2788,
											"end": 2824,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 2788,
											"end": 2824,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2788,
											"end": 2824,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2788,
											"end": 2824,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2788,
											"end": 2824,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2788,
											"end": 2824,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 2788,
											"end": 2824,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2788,
											"end": 2824,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2788,
											"end": 2824,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2788,
											"end": 2824,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 2788,
											"end": 2824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2788,
											"end": 2824,
											"name": "tag",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 2788,
											"end": 2824,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2788,
											"end": 2824,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2788,
											"end": 2824,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2788,
											"end": 2824,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2788,
											"end": 2824,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2788,
											"end": 2824,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2788,
											"end": 2824,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2788,
											"end": 2824,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2788,
											"end": 2824,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2788,
											"end": 2824,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2788,
											"end": 2824,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 2788,
											"end": 2824,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 2788,
											"end": 2824,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2788,
											"end": 2824,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2788,
											"end": 2824,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2788,
											"end": 2824,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 2788,
											"end": 2824,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2788,
											"end": 2824,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2788,
											"end": 2824,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2788,
											"end": 2824,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2788,
											"end": 2824,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 2788,
											"end": 2824,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2788,
											"end": 2824,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2788,
											"end": 2824,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2788,
											"end": 2824,
											"name": "tag",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 2788,
											"end": 2824,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2788,
											"end": 2824,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2788,
											"end": 2824,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2788,
											"end": 2824,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2788,
											"end": 2824,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2788,
											"end": 2824,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2788,
											"end": 2824,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2788,
											"end": 2824,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2788,
											"end": 2824,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2788,
											"end": 2824,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 2788,
											"end": 2824,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2788,
											"end": 2824,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2788,
											"end": 2824,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2788,
											"end": 2824,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2788,
											"end": 2824,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2788,
											"end": 2824,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2788,
											"end": 2824,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2788,
											"end": 2824,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2788,
											"end": 2824,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2788,
											"end": 2824,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2788,
											"end": 2824,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2788,
											"end": 2824,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2788,
											"end": 2824,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2788,
											"end": 2824,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 2788,
											"end": 2824,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2788,
											"end": 2824,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2788,
											"end": 2824,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 2788,
											"end": 2824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2788,
											"end": 2824,
											"name": "tag",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 2788,
											"end": 2824,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2788,
											"end": 2824,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2835,
											"end": 2841,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 2835,
											"end": 2841,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2835,
											"end": 2841,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2835,
											"end": 2841,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2835,
											"end": 2841,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2835,
											"end": 2841,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2835,
											"end": 2841,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 2835,
											"end": 2841,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2835,
											"end": 2841,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2835,
											"end": 2841,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2835,
											"end": 2841,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2835,
											"end": 2850,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2835,
											"end": 2850,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2835,
											"end": 2850,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 2851,
											"end": 2861,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2863,
											"end": 2870,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2835,
											"end": 2871,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2835,
											"end": 2871,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2835,
											"end": 2871,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2835,
											"end": 2871,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2835,
											"end": 2871,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2835,
											"end": 2871,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 2835,
											"end": 2871,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 2835,
											"end": 2871,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2835,
											"end": 2871,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2835,
											"end": 2871,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2835,
											"end": 2871,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2835,
											"end": 2871,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 2835,
											"end": 2871,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2835,
											"end": 2871,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2835,
											"end": 2871,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2835,
											"end": 2871,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 2835,
											"end": 2871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2835,
											"end": 2871,
											"name": "tag",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 2835,
											"end": 2871,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2835,
											"end": 2871,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2835,
											"end": 2871,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2835,
											"end": 2871,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2835,
											"end": 2871,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2835,
											"end": 2871,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2835,
											"end": 2871,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2835,
											"end": 2871,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2835,
											"end": 2871,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2835,
											"end": 2871,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2835,
											"end": 2871,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 2835,
											"end": 2871,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 2835,
											"end": 2871,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2835,
											"end": 2871,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2835,
											"end": 2871,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2835,
											"end": 2871,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 2835,
											"end": 2871,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2835,
											"end": 2871,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2835,
											"end": 2871,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2835,
											"end": 2871,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2835,
											"end": 2871,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 2835,
											"end": 2871,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2835,
											"end": 2871,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2835,
											"end": 2871,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2835,
											"end": 2871,
											"name": "tag",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 2835,
											"end": 2871,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2835,
											"end": 2871,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2835,
											"end": 2871,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2835,
											"end": 2871,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2835,
											"end": 2871,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2835,
											"end": 2871,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2835,
											"end": 2871,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2835,
											"end": 2871,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2835,
											"end": 2871,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2835,
											"end": 2871,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 2835,
											"end": 2871,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2835,
											"end": 2871,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2835,
											"end": 2871,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2835,
											"end": 2871,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2835,
											"end": 2871,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2835,
											"end": 2871,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2835,
											"end": 2871,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2835,
											"end": 2871,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2835,
											"end": 2871,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2835,
											"end": 2871,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2835,
											"end": 2871,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2835,
											"end": 2871,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2835,
											"end": 2871,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2835,
											"end": 2871,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 2835,
											"end": 2871,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2835,
											"end": 2871,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2835,
											"end": 2871,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 2835,
											"end": 2871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2835,
											"end": 2871,
											"name": "tag",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 2835,
											"end": 2871,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2835,
											"end": 2871,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2926,
											"end": 2932,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 2926,
											"end": 2932,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2926,
											"end": 2932,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2926,
											"end": 2932,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2926,
											"end": 2932,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2926,
											"end": 2932,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2926,
											"end": 2932,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 2926,
											"end": 2932,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2926,
											"end": 2932,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2926,
											"end": 2932,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2926,
											"end": 2932,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2926,
											"end": 2942,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2926,
											"end": 2942,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2926,
											"end": 2942,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 2951,
											"end": 2955,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 2926,
											"end": 2957,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2926,
											"end": 2957,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2926,
											"end": 2957,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2926,
											"end": 2957,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2926,
											"end": 2957,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2926,
											"end": 2957,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 2926,
											"end": 2957,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 2926,
											"end": 2957,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2926,
											"end": 2957,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2926,
											"end": 2957,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2926,
											"end": 2957,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2926,
											"end": 2957,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 2926,
											"end": 2957,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2926,
											"end": 2957,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2926,
											"end": 2957,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 2926,
											"end": 2957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2926,
											"end": 2957,
											"name": "tag",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 2926,
											"end": 2957,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2926,
											"end": 2957,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2926,
											"end": 2957,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2926,
											"end": 2957,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2926,
											"end": 2957,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2926,
											"end": 2957,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2926,
											"end": 2957,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2926,
											"end": 2957,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2926,
											"end": 2957,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2926,
											"end": 2957,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 2926,
											"end": 2957,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 2926,
											"end": 2957,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2926,
											"end": 2957,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2926,
											"end": 2957,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2926,
											"end": 2957,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 2926,
											"end": 2957,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2926,
											"end": 2957,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2926,
											"end": 2957,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2926,
											"end": 2957,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2926,
											"end": 2957,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 2926,
											"end": 2957,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2926,
											"end": 2957,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2926,
											"end": 2957,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2926,
											"end": 2957,
											"name": "tag",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 2926,
											"end": 2957,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2926,
											"end": 2957,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2926,
											"end": 2957,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2926,
											"end": 2957,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2926,
											"end": 2957,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2926,
											"end": 2957,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2926,
											"end": 2957,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2926,
											"end": 2957,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2926,
											"end": 2957,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2926,
											"end": 2957,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 2926,
											"end": 2957,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2926,
											"end": 2957,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2926,
											"end": 2957,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2926,
											"end": 2957,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2926,
											"end": 2957,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2926,
											"end": 2957,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2926,
											"end": 2957,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2926,
											"end": 2957,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2926,
											"end": 2957,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2926,
											"end": 2957,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2926,
											"end": 2957,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2926,
											"end": 2957,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2926,
											"end": 2957,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2926,
											"end": 2957,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 2926,
											"end": 2957,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2926,
											"end": 2957,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2926,
											"end": 2957,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 2926,
											"end": 2957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2926,
											"end": 2957,
											"name": "tag",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 2926,
											"end": 2957,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2915,
											"end": 2923,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 2915,
											"end": 2957,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2915,
											"end": 2957,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2915,
											"end": 2957,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2915,
											"end": 2957,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2979,
											"end": 2985,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 2979,
											"end": 2985,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2979,
											"end": 2985,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2979,
											"end": 2985,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2979,
											"end": 2985,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2979,
											"end": 2985,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2979,
											"end": 2985,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 2979,
											"end": 2985,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2979,
											"end": 2985,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2979,
											"end": 2985,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2979,
											"end": 2985,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2979,
											"end": 2995,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2979,
											"end": 2995,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2979,
											"end": 2995,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 3004,
											"end": 3008,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 2979,
											"end": 3010,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2979,
											"end": 3010,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2979,
											"end": 3010,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2979,
											"end": 3010,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2979,
											"end": 3010,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2979,
											"end": 3010,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 2979,
											"end": 3010,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 2979,
											"end": 3010,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2979,
											"end": 3010,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2979,
											"end": 3010,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2979,
											"end": 3010,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2979,
											"end": 3010,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 2979,
											"end": 3010,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2979,
											"end": 3010,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2979,
											"end": 3010,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 2979,
											"end": 3010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2979,
											"end": 3010,
											"name": "tag",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 2979,
											"end": 3010,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2979,
											"end": 3010,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2979,
											"end": 3010,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2979,
											"end": 3010,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2979,
											"end": 3010,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2979,
											"end": 3010,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2979,
											"end": 3010,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2979,
											"end": 3010,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2979,
											"end": 3010,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2979,
											"end": 3010,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 2979,
											"end": 3010,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 2979,
											"end": 3010,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2979,
											"end": 3010,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2979,
											"end": 3010,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2979,
											"end": 3010,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 2979,
											"end": 3010,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2979,
											"end": 3010,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2979,
											"end": 3010,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2979,
											"end": 3010,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2979,
											"end": 3010,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 2979,
											"end": 3010,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2979,
											"end": 3010,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2979,
											"end": 3010,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2979,
											"end": 3010,
											"name": "tag",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 2979,
											"end": 3010,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2979,
											"end": 3010,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2979,
											"end": 3010,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2979,
											"end": 3010,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2979,
											"end": 3010,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2979,
											"end": 3010,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2979,
											"end": 3010,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2979,
											"end": 3010,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2979,
											"end": 3010,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2979,
											"end": 3010,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 2979,
											"end": 3010,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2979,
											"end": 3010,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2979,
											"end": 3010,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2979,
											"end": 3010,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2979,
											"end": 3010,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2979,
											"end": 3010,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2979,
											"end": 3010,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2979,
											"end": 3010,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2979,
											"end": 3010,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2979,
											"end": 3010,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2979,
											"end": 3010,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2979,
											"end": 3010,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2979,
											"end": 3010,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2979,
											"end": 3010,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 2979,
											"end": 3010,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2979,
											"end": 3010,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2979,
											"end": 3010,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 2979,
											"end": 3010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2979,
											"end": 3010,
											"name": "tag",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 2979,
											"end": 3010,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2968,
											"end": 2976,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 2968,
											"end": 3010,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2968,
											"end": 3010,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2968,
											"end": 3010,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2968,
											"end": 3010,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3033,
											"end": 3043,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3028,
											"end": 3062,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3028,
											"end": 3062,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3028,
											"end": 3062,
											"name": "PUSH",
											"source": 5,
											"value": "49995E5DD6158CF69AD3E9777C46755A1A826A446C6416992167462DAD033B2A"
										},
										{
											"begin": 3045,
											"end": 3052,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3054,
											"end": 3061,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3028,
											"end": 3062,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3028,
											"end": 3062,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3028,
											"end": 3062,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 3028,
											"end": 3062,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3028,
											"end": 3062,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3028,
											"end": 3062,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3028,
											"end": 3062,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 3028,
											"end": 3062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3028,
											"end": 3062,
											"name": "tag",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 3028,
											"end": 3062,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3028,
											"end": 3062,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3028,
											"end": 3062,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3028,
											"end": 3062,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3028,
											"end": 3062,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3028,
											"end": 3062,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3028,
											"end": 3062,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3028,
											"end": 3062,
											"name": "LOG2",
											"source": 5
										},
										{
											"begin": 2248,
											"end": 3070,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2248,
											"end": 3070,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2248,
											"end": 3070,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2160,
											"end": 3070,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2160,
											"end": 3070,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2160,
											"end": 3070,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2160,
											"end": 3070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1022,
											"end": 1983,
											"name": "tag",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 1022,
											"end": 1983,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1097,
											"end": 1111,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1167,
											"end": 1173,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 1167,
											"end": 1173,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1167,
											"end": 1173,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1167,
											"end": 1173,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1167,
											"end": 1173,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1167,
											"end": 1173,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1167,
											"end": 1173,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 1167,
											"end": 1173,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1167,
											"end": 1173,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1167,
											"end": 1173,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1167,
											"end": 1173,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1167,
											"end": 1186,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1167,
											"end": 1186,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1167,
											"end": 1186,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 1187,
											"end": 1197,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1207,
											"end": 1211,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 1214,
											"end": 1226,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1167,
											"end": 1227,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1167,
											"end": 1227,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1167,
											"end": 1227,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1167,
											"end": 1227,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1167,
											"end": 1227,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1167,
											"end": 1227,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1167,
											"end": 1227,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1167,
											"end": 1227,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1167,
											"end": 1227,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1167,
											"end": 1227,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1167,
											"end": 1227,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1167,
											"end": 1227,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 1167,
											"end": 1227,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1167,
											"end": 1227,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1167,
											"end": 1227,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1167,
											"end": 1227,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1167,
											"end": 1227,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 1167,
											"end": 1227,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1167,
											"end": 1227,
											"name": "tag",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 1167,
											"end": 1227,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1167,
											"end": 1227,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1167,
											"end": 1227,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1167,
											"end": 1227,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1167,
											"end": 1227,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1167,
											"end": 1227,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1167,
											"end": 1227,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1167,
											"end": 1227,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1167,
											"end": 1227,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1167,
											"end": 1227,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1167,
											"end": 1227,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 1167,
											"end": 1227,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 1167,
											"end": 1227,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1167,
											"end": 1227,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1167,
											"end": 1227,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1167,
											"end": 1227,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 1167,
											"end": 1227,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1167,
											"end": 1227,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1167,
											"end": 1227,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1167,
											"end": 1227,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1167,
											"end": 1227,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 1167,
											"end": 1227,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1167,
											"end": 1227,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1167,
											"end": 1227,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1167,
											"end": 1227,
											"name": "tag",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 1167,
											"end": 1227,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1167,
											"end": 1227,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1167,
											"end": 1227,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1167,
											"end": 1227,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1167,
											"end": 1227,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1167,
											"end": 1227,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1167,
											"end": 1227,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1167,
											"end": 1227,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1167,
											"end": 1227,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1167,
											"end": 1227,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1167,
											"end": 1227,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1167,
											"end": 1227,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1167,
											"end": 1227,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1167,
											"end": 1227,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1167,
											"end": 1227,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1167,
											"end": 1227,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1167,
											"end": 1227,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1167,
											"end": 1227,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1167,
											"end": 1227,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1167,
											"end": 1227,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1167,
											"end": 1227,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1167,
											"end": 1227,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1167,
											"end": 1227,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1167,
											"end": 1227,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 1167,
											"end": 1227,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1167,
											"end": 1227,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1167,
											"end": 1227,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 1167,
											"end": 1227,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1167,
											"end": 1227,
											"name": "tag",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 1167,
											"end": 1227,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1167,
											"end": 1227,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1238,
											"end": 1244,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 1238,
											"end": 1244,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1238,
											"end": 1244,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1238,
											"end": 1244,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1238,
											"end": 1244,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1238,
											"end": 1244,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1238,
											"end": 1244,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 1238,
											"end": 1244,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1238,
											"end": 1244,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1238,
											"end": 1244,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1238,
											"end": 1244,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1238,
											"end": 1257,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1238,
											"end": 1257,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1238,
											"end": 1257,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 1258,
											"end": 1268,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1278,
											"end": 1282,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 1285,
											"end": 1297,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1238,
											"end": 1298,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1238,
											"end": 1298,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1238,
											"end": 1298,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1238,
											"end": 1298,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1238,
											"end": 1298,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1238,
											"end": 1298,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1238,
											"end": 1298,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1238,
											"end": 1298,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1238,
											"end": 1298,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1238,
											"end": 1298,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1238,
											"end": 1298,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1238,
											"end": 1298,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 1238,
											"end": 1298,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1238,
											"end": 1298,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1238,
											"end": 1298,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1238,
											"end": 1298,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1238,
											"end": 1298,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 1238,
											"end": 1298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1238,
											"end": 1298,
											"name": "tag",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 1238,
											"end": 1298,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1238,
											"end": 1298,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1238,
											"end": 1298,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1238,
											"end": 1298,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1238,
											"end": 1298,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1238,
											"end": 1298,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1238,
											"end": 1298,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1238,
											"end": 1298,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1238,
											"end": 1298,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1238,
											"end": 1298,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1238,
											"end": 1298,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 1238,
											"end": 1298,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 1238,
											"end": 1298,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1238,
											"end": 1298,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1238,
											"end": 1298,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1238,
											"end": 1298,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 1238,
											"end": 1298,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1238,
											"end": 1298,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1238,
											"end": 1298,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1238,
											"end": 1298,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1238,
											"end": 1298,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 1238,
											"end": 1298,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1238,
											"end": 1298,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1238,
											"end": 1298,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1238,
											"end": 1298,
											"name": "tag",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 1238,
											"end": 1298,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1238,
											"end": 1298,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1238,
											"end": 1298,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1238,
											"end": 1298,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1238,
											"end": 1298,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1238,
											"end": 1298,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1238,
											"end": 1298,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1238,
											"end": 1298,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1238,
											"end": 1298,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1238,
											"end": 1298,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1238,
											"end": 1298,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1238,
											"end": 1298,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1238,
											"end": 1298,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1238,
											"end": 1298,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1238,
											"end": 1298,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1238,
											"end": 1298,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1238,
											"end": 1298,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1238,
											"end": 1298,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1238,
											"end": 1298,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1238,
											"end": 1298,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1238,
											"end": 1298,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1238,
											"end": 1298,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1238,
											"end": 1298,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1238,
											"end": 1298,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 1238,
											"end": 1298,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1238,
											"end": 1298,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1238,
											"end": 1298,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 1238,
											"end": 1298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1238,
											"end": 1298,
											"name": "tag",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 1238,
											"end": 1298,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1238,
											"end": 1298,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1333,
											"end": 1350,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1353,
											"end": 1366,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 1353,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 1353,
											"end": 1366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1353,
											"end": 1366,
											"name": "tag",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 1353,
											"end": 1366,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1333,
											"end": 1366,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1333,
											"end": 1366,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1398,
											"end": 1399,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1382,
											"end": 1394,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1382,
											"end": 1399,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1379,
											"end": 1599,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "233"
										},
										{
											"begin": 1379,
											"end": 1599,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1428,
											"end": 1461,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 1448,
											"end": 1460,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1433,
											"end": 1460,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "235"
										},
										{
											"begin": 1433,
											"end": 1460,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1433,
											"end": 1460,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1433,
											"end": 1460,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 1433,
											"end": 1460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1433,
											"end": 1460,
											"name": "tag",
											"source": 5,
											"value": "235"
										},
										{
											"begin": 1433,
											"end": 1460,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1428,
											"end": 1432,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "236"
										},
										{
											"begin": 1428,
											"end": 1461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1428,
											"end": 1461,
											"name": "tag",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 1428,
											"end": 1461,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1416,
											"end": 1461,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1416,
											"end": 1461,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1379,
											"end": 1599,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 1379,
											"end": 1599,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1379,
											"end": 1599,
											"name": "tag",
											"source": 5,
											"value": "233"
										},
										{
											"begin": 1379,
											"end": 1599,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1506,
											"end": 1587,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 1540,
											"end": 1548,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 1540,
											"end": 1548,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1510,
											"end": 1522,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1510,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 1510,
											"end": 1537,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1510,
											"end": 1537,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1510,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 1510,
											"end": 1537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1510,
											"end": 1537,
											"name": "tag",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 1510,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1510,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "240"
										},
										{
											"begin": 1510,
											"end": 1548,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1510,
											"end": 1548,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1510,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 1510,
											"end": 1548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1510,
											"end": 1548,
											"name": "tag",
											"source": 5,
											"value": "240"
										},
										{
											"begin": 1510,
											"end": 1548,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1578,
											"end": 1586,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 1578,
											"end": 1586,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1565,
											"end": 1577,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1550,
											"end": 1562,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1550,
											"end": 1577,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 1550,
											"end": 1577,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1550,
											"end": 1577,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1550,
											"end": 1577,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 1550,
											"end": 1577,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1550,
											"end": 1577,
											"name": "tag",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 1550,
											"end": 1577,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1550,
											"end": 1586,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 1550,
											"end": 1586,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1550,
											"end": 1586,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1550,
											"end": 1586,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 1550,
											"end": 1586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1550,
											"end": 1586,
											"name": "tag",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 1550,
											"end": 1586,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1506,
											"end": 1509,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 1506,
											"end": 1587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1506,
											"end": 1587,
											"name": "tag",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 1506,
											"end": 1587,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1494,
											"end": 1587,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1494,
											"end": 1587,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1379,
											"end": 1599,
											"name": "tag",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 1379,
											"end": 1599,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1639,
											"end": 1640,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1627,
											"end": 1636,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1627,
											"end": 1640,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1674,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 1619,
											"end": 1674,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1674,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1619,
											"end": 1674,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1674,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1619,
											"end": 1674,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1674,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1674,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1619,
											"end": 1674,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1674,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 1619,
											"end": 1674,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1674,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 1619,
											"end": 1674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1674,
											"name": "tag",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 1619,
											"end": 1674,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1674,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1619,
											"end": 1674,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1674,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1674,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1674,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1674,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1674,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1674,
											"name": "tag",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 1619,
											"end": 1674,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1776,
											"end": 1782,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 1776,
											"end": 1782,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1776,
											"end": 1782,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1776,
											"end": 1782,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1776,
											"end": 1782,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1776,
											"end": 1782,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1776,
											"end": 1782,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 1776,
											"end": 1782,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1776,
											"end": 1782,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1776,
											"end": 1782,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1776,
											"end": 1782,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1776,
											"end": 1792,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1776,
											"end": 1792,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1776,
											"end": 1792,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 1801,
											"end": 1805,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 1776,
											"end": 1807,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1776,
											"end": 1807,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1776,
											"end": 1807,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1776,
											"end": 1807,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1776,
											"end": 1807,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1776,
											"end": 1807,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1776,
											"end": 1807,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1776,
											"end": 1807,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1776,
											"end": 1807,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1776,
											"end": 1807,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1776,
											"end": 1807,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1776,
											"end": 1807,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "246"
										},
										{
											"begin": 1776,
											"end": 1807,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1776,
											"end": 1807,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1776,
											"end": 1807,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 1776,
											"end": 1807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1776,
											"end": 1807,
											"name": "tag",
											"source": 5,
											"value": "246"
										},
										{
											"begin": 1776,
											"end": 1807,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1776,
											"end": 1807,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1776,
											"end": 1807,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1776,
											"end": 1807,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1776,
											"end": 1807,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1776,
											"end": 1807,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1776,
											"end": 1807,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1776,
											"end": 1807,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1776,
											"end": 1807,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1776,
											"end": 1807,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 1776,
											"end": 1807,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 1776,
											"end": 1807,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1776,
											"end": 1807,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1776,
											"end": 1807,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1776,
											"end": 1807,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 1776,
											"end": 1807,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1776,
											"end": 1807,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1776,
											"end": 1807,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1776,
											"end": 1807,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1776,
											"end": 1807,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 1776,
											"end": 1807,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1776,
											"end": 1807,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1776,
											"end": 1807,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1776,
											"end": 1807,
											"name": "tag",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 1776,
											"end": 1807,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1776,
											"end": 1807,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1776,
											"end": 1807,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1776,
											"end": 1807,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1776,
											"end": 1807,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1776,
											"end": 1807,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1776,
											"end": 1807,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1776,
											"end": 1807,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1776,
											"end": 1807,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1776,
											"end": 1807,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1776,
											"end": 1807,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1776,
											"end": 1807,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1776,
											"end": 1807,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1776,
											"end": 1807,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1776,
											"end": 1807,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1776,
											"end": 1807,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1776,
											"end": 1807,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1776,
											"end": 1807,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1776,
											"end": 1807,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1776,
											"end": 1807,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1776,
											"end": 1807,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1776,
											"end": 1807,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1776,
											"end": 1807,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1776,
											"end": 1807,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "249"
										},
										{
											"begin": 1776,
											"end": 1807,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1776,
											"end": 1807,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1776,
											"end": 1807,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 1776,
											"end": 1807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1776,
											"end": 1807,
											"name": "tag",
											"source": 5,
											"value": "249"
										},
										{
											"begin": 1776,
											"end": 1807,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1765,
											"end": 1773,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 1765,
											"end": 1807,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1765,
											"end": 1807,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1765,
											"end": 1807,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1765,
											"end": 1807,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1835,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 1829,
											"end": 1835,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1829,
											"end": 1835,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1835,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1835,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1835,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1829,
											"end": 1835,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1835,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1835,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1835,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1829,
											"end": 1835,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1845,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1829,
											"end": 1845,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1845,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 1854,
											"end": 1858,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1860,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1829,
											"end": 1860,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1860,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1860,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1829,
											"end": 1860,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1860,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1829,
											"end": 1860,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1860,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1860,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1860,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1829,
											"end": 1860,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "250"
										},
										{
											"begin": 1829,
											"end": 1860,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1860,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 1829,
											"end": 1860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1860,
											"name": "tag",
											"source": 5,
											"value": "250"
										},
										{
											"begin": 1829,
											"end": 1860,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1860,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1829,
											"end": 1860,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1829,
											"end": 1860,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1860,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1860,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1860,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1860,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1860,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1860,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1860,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1860,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1860,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1860,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "252"
										},
										{
											"begin": 1829,
											"end": 1860,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1860,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1860,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1829,
											"end": 1860,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1860,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1860,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1860,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1829,
											"end": 1860,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1860,
											"name": "tag",
											"source": 5,
											"value": "252"
										},
										{
											"begin": 1829,
											"end": 1860,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1860,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1860,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1860,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1860,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1860,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1829,
											"end": 1860,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1860,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1860,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1829,
											"end": 1860,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1860,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1829,
											"end": 1860,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1860,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1860,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1860,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1860,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1860,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1860,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1829,
											"end": 1860,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1860,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1860,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1860,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1860,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "253"
										},
										{
											"begin": 1829,
											"end": 1860,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1860,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 1829,
											"end": 1860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1860,
											"name": "tag",
											"source": 5,
											"value": "253"
										},
										{
											"begin": 1829,
											"end": 1860,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 1826,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 1818,
											"end": 1860,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 1860,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 1860,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 1860,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1885,
											"end": 1913,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "254"
										},
										{
											"begin": 1891,
											"end": 1901,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1903,
											"end": 1912,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1885,
											"end": 1890,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 1885,
											"end": 1913,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1885,
											"end": 1913,
											"name": "tag",
											"source": 5,
											"value": "254"
										},
										{
											"begin": 1885,
											"end": 1913,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1936,
											"end": 1946,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1931,
											"end": 1975,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1931,
											"end": 1975,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1931,
											"end": 1975,
											"name": "PUSH",
											"source": 5,
											"value": "4C209B5FC8AD50758F13E2E1088BA56A560DFF690A1C6FEF26394F4C03821C4F"
										},
										{
											"begin": 1948,
											"end": 1960,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1962,
											"end": 1974,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1931,
											"end": 1975,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1931,
											"end": 1975,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1931,
											"end": 1975,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 1931,
											"end": 1975,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1931,
											"end": 1975,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1931,
											"end": 1975,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1931,
											"end": 1975,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 1931,
											"end": 1975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1931,
											"end": 1975,
											"name": "tag",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 1931,
											"end": 1975,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1931,
											"end": 1975,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1931,
											"end": 1975,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1931,
											"end": 1975,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1931,
											"end": 1975,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1931,
											"end": 1975,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1931,
											"end": 1975,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1931,
											"end": 1975,
											"name": "LOG2",
											"source": 5
										},
										{
											"begin": 1113,
											"end": 1983,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1022,
											"end": 1983,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1022,
											"end": 1983,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1022,
											"end": 1983,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1022,
											"end": 1983,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1022,
											"end": 1983,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3679,
											"end": 3683,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3695,
											"end": 3708,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 3711,
											"end": 3721,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 3711,
											"end": 3723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "tag",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3695,
											"end": 3723,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3695,
											"end": 3723,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 3743,
											"end": 3748,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3750,
											"end": 3752,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3754,
											"end": 3759,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3733,
											"end": 3742,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 3733,
											"end": 3760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "tag",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3777,
											"end": 3781,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 552,
											"end": 572,
											"name": "tag",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 552,
											"end": 572,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 552,
											"end": 572,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 552,
											"end": 572,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 552,
											"end": 572,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 552,
											"end": 572,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 552,
											"end": 572,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 552,
											"end": 572,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 552,
											"end": 572,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 552,
											"end": 572,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 552,
											"end": 572,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 552,
											"end": 572,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 552,
											"end": 572,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 552,
											"end": 572,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 552,
											"end": 572,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3926,
											"end": 3933,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3963,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3964,
											"end": 3969,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3971,
											"end": 3978,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 9082,
											"end": 9087,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9089,
											"end": 9096,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9098,
											"end": 9103,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9105,
											"end": 9109,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 9073,
											"end": 9081,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 9073,
											"end": 9110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "tag",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8989,
											"end": 9117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10762,
											"end": 10786,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 10799,
											"end": 10804,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10806,
											"end": 10813,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10789,
											"end": 10798,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 10789,
											"end": 10814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "tag",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10762,
											"end": 10814,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10762,
											"end": 10814,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10848,
											"end": 10865,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10828,
											"end": 10844,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10828,
											"end": 10865,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10904,
											"end": 10909,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10885,
											"end": 10901,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10885,
											"end": 10909,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "268"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10963,
											"end": 10970,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10972,
											"end": 10988,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10990,
											"end": 10995,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 1,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "270"
										},
										{
											"begin": 10936,
											"end": 10996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "tag",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "tag",
											"source": 1,
											"value": "268"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 11061,
											"end": 11066,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11068,
											"end": 11075,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11096,
											"end": 11101,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11077,
											"end": 11093,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11077,
											"end": 11101,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11103,
											"end": 11108,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11052,
											"end": 11060,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 11052,
											"end": 11109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "tag",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "tag",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10752,
											"end": 11140,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10663,
											"end": 11140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "tag",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5755,
											"end": 5756,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5739,
											"end": 5743,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5807,
											"end": 5808,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 1,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 5780,
											"end": 5810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "tag",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "tag",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5848,
											"end": 5849,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5834,
											"end": 5836,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5902,
											"end": 5903,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 1,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 5873,
											"end": 5905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "tag",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "tag",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 5933,
											"end": 5937,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5939,
											"end": 5941,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5943,
											"end": 5948,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5925,
											"end": 5932,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 5925,
											"end": 5949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "tag",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5656,
											"end": 5956,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "tag",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8336,
											"end": 8337,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8317,
											"end": 8324,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "280"
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8388,
											"end": 8389,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 1,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "281"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 8361,
											"end": 8391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "tag",
											"source": 1,
											"value": "281"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "tag",
											"source": 1,
											"value": "280"
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8411,
											"end": 8446,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "282"
										},
										{
											"begin": 8419,
											"end": 8426,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8436,
											"end": 8437,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8440,
											"end": 8445,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8411,
											"end": 8418,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 8411,
											"end": 8446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8411,
											"end": 8446,
											"name": "tag",
											"source": 1,
											"value": "282"
										},
										{
											"begin": 8411,
											"end": 8446,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8247,
											"end": 8453,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4720,
											"end": 5024,
											"name": "tag",
											"source": 5,
											"value": "236"
										},
										{
											"begin": 4720,
											"end": 5024,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4766,
											"end": 4772,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4793,
											"end": 4794,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 4789,
											"end": 4790,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4789,
											"end": 4794,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 4785,
											"end": 5017,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4785,
											"end": 5017,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "284"
										},
										{
											"begin": 4785,
											"end": 5017,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4815,
											"end": 4816,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4811,
											"end": 4816,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4811,
											"end": 4816,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4831,
											"end": 4837,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4848,
											"end": 4849,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 4844,
											"end": 4845,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 4840,
											"end": 4841,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4840,
											"end": 4845,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "285"
										},
										{
											"begin": 4840,
											"end": 4845,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4840,
											"end": 4845,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4840,
											"end": 4845,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 4840,
											"end": 4845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4840,
											"end": 4845,
											"name": "tag",
											"source": 5,
											"value": "285"
										},
										{
											"begin": 4840,
											"end": 4845,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4840,
											"end": 4849,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "286"
										},
										{
											"begin": 4840,
											"end": 4849,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4840,
											"end": 4849,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4840,
											"end": 4849,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 4840,
											"end": 4849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4840,
											"end": 4849,
											"name": "tag",
											"source": 5,
											"value": "286"
										},
										{
											"begin": 4840,
											"end": 4849,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4831,
											"end": 4849,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4831,
											"end": 4849,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4864,
											"end": 4956,
											"name": "tag",
											"source": 5,
											"value": "287"
										},
										{
											"begin": 4864,
											"end": 4956,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4875,
											"end": 4876,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4871,
											"end": 4872,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4871,
											"end": 4876,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 4864,
											"end": 4956,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4864,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "288"
										},
										{
											"begin": 4864,
											"end": 4956,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4901,
											"end": 4902,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4897,
											"end": 4902,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4897,
											"end": 4902,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4939,
											"end": 4940,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 4934,
											"end": 4935,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4930,
											"end": 4931,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4926,
											"end": 4927,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4926,
											"end": 4931,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "289"
										},
										{
											"begin": 4926,
											"end": 4931,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4926,
											"end": 4931,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4926,
											"end": 4931,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 4926,
											"end": 4931,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4926,
											"end": 4931,
											"name": "tag",
											"source": 5,
											"value": "289"
										},
										{
											"begin": 4926,
											"end": 4931,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4926,
											"end": 4935,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "290"
										},
										{
											"begin": 4926,
											"end": 4935,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4926,
											"end": 4935,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4926,
											"end": 4935,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 4926,
											"end": 4935,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4926,
											"end": 4935,
											"name": "tag",
											"source": 5,
											"value": "290"
										},
										{
											"begin": 4926,
											"end": 4935,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4925,
											"end": 4940,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "291"
										},
										{
											"begin": 4925,
											"end": 4940,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4925,
											"end": 4940,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4925,
											"end": 4940,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 4925,
											"end": 4940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4925,
											"end": 4940,
											"name": "tag",
											"source": 5,
											"value": "291"
										},
										{
											"begin": 4925,
											"end": 4940,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4921,
											"end": 4940,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4921,
											"end": 4940,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4864,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "287"
										},
										{
											"begin": 4864,
											"end": 4956,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4864,
											"end": 4956,
											"name": "tag",
											"source": 5,
											"value": "288"
										},
										{
											"begin": 4864,
											"end": 4956,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4796,
											"end": 4967,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4785,
											"end": 5017,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "292"
										},
										{
											"begin": 4785,
											"end": 5017,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4785,
											"end": 5017,
											"name": "tag",
											"source": 5,
											"value": "284"
										},
										{
											"begin": 4785,
											"end": 5017,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4982,
											"end": 4983,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4977,
											"end": 4978,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4977,
											"end": 4983,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 4973,
											"end": 5017,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "293"
										},
										{
											"begin": 4973,
											"end": 5017,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5004,
											"end": 5005,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 5000,
											"end": 5005,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5000,
											"end": 5005,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4973,
											"end": 5017,
											"name": "tag",
											"source": 5,
											"value": "293"
										},
										{
											"begin": 4973,
											"end": 5017,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4785,
											"end": 5017,
											"name": "tag",
											"source": 5,
											"value": "292"
										},
										{
											"begin": 4785,
											"end": 5017,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4720,
											"end": 5024,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4720,
											"end": 5024,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4720,
											"end": 5024,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4720,
											"end": 5024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5032,
											"end": 5130,
											"name": "tag",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 5032,
											"end": 5130,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5085,
											"end": 5091,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5112,
											"end": 5113,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5108,
											"end": 5109,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5108,
											"end": 5113,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 5108,
											"end": 5121,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "295"
										},
										{
											"begin": 5108,
											"end": 5121,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5120,
											"end": 5121,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5108,
											"end": 5121,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "296"
										},
										{
											"begin": 5108,
											"end": 5121,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5108,
											"end": 5121,
											"name": "tag",
											"source": 5,
											"value": "295"
										},
										{
											"begin": 5108,
											"end": 5121,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5116,
											"end": 5117,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5108,
											"end": 5121,
											"name": "tag",
											"source": 5,
											"value": "296"
										},
										{
											"begin": 5108,
											"end": 5121,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5104,
											"end": 5121,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5104,
											"end": 5121,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5032,
											"end": 5130,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5032,
											"end": 5130,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5032,
											"end": 5130,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5032,
											"end": 5130,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5032,
											"end": 5130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "tag",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7810,
											"end": 7811,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7791,
											"end": 7798,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7864,
											"end": 7865,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 1,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 7835,
											"end": 7867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "tag",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "tag",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 7903,
											"end": 7904,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7907,
											"end": 7914,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7916,
											"end": 7921,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7887,
											"end": 7894,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 7887,
											"end": 7922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "tag",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7721,
											"end": 7929,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "tag",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10078,
											"end": 10079,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10061,
											"end": 10066,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10132,
											"end": 10133,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 1,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 10103,
											"end": 10135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "tag",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "tag",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10178,
											"end": 10179,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10159,
											"end": 10166,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10231,
											"end": 10232,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 1,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 10203,
											"end": 10234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "tag",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "tag",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10284,
											"end": 10289,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10265,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10266,
											"end": 10271,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10273,
											"end": 10280,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10303,
											"end": 10312,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10349,
											"end": 10356,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10342,
											"end": 10347,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10358,
											"end": 10363,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 10333,
											"end": 10364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "tag",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "tag",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9949,
											"end": 10381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "tag",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6376,
											"end": 6377,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6360,
											"end": 6364,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6512,
											"end": 6517,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 6496,
											"end": 6517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "tag",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6548,
											"end": 6567,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6579,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6580,
											"end": 6584,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6548,
											"end": 6585,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6548,
											"end": 6585,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6617,
											"end": 6622,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6603,
											"end": 6614,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6603,
											"end": 6622,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "312"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6674,
											"end": 6678,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6680,
											"end": 6691,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6693,
											"end": 6698,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 1,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "313"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "270"
										},
										{
											"begin": 6649,
											"end": 6699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "tag",
											"source": 1,
											"value": "313"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "tag",
											"source": 1,
											"value": "312"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6871,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6852,
											"end": 6863,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6843,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6848,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6534,
											"end": 6896,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6924,
											"end": 6925,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6910,
											"end": 6912,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "314"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7089,
											"end": 7094,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 1,
											"value": "314"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7301,
											"end": 7306,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7293,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7294,
											"end": 7296,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7361,
											"end": 7363,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7355,
											"end": 7359,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7365,
											"end": 7370,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "316"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 7346,
											"end": 7371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "tag",
											"source": 1,
											"value": "316"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6271,
											"end": 7378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 6,
											"value": "320"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 6,
											"value": "321"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "368"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "320"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 6,
											"value": "368"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "369"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 6,
											"value": "369"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 6,
											"value": "322"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "371"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "321"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 6,
											"value": "371"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 690,
											"end": 1309,
											"name": "tag",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 690,
											"end": 1309,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 767,
											"end": 773,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 783,
											"end": 789,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 832,
											"end": 834,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 820,
											"end": 829,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 811,
											"end": 818,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 807,
											"end": 830,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 803,
											"end": 835,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 800,
											"end": 919,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 800,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "373"
										},
										{
											"begin": 800,
											"end": 919,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 838,
											"end": 917,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "374"
										},
										{
											"begin": 838,
											"end": 917,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 838,
											"end": 917,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 838,
											"end": 917,
											"name": "tag",
											"source": 6,
											"value": "374"
										},
										{
											"begin": 838,
											"end": 917,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 800,
											"end": 919,
											"name": "tag",
											"source": 6,
											"value": "373"
										},
										{
											"begin": 800,
											"end": 919,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 958,
											"end": 959,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 983,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "375"
										},
										{
											"begin": 1028,
											"end": 1035,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1019,
											"end": 1025,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1008,
											"end": 1017,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 1004,
											"end": 1026,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 983,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "322"
										},
										{
											"begin": 983,
											"end": 1036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 983,
											"end": 1036,
											"name": "tag",
											"source": 6,
											"value": "375"
										},
										{
											"begin": 983,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 973,
											"end": 1036,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 973,
											"end": 1036,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 929,
											"end": 1046,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1085,
											"end": 1087,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1111,
											"end": 1164,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "376"
										},
										{
											"begin": 1156,
											"end": 1163,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1147,
											"end": 1153,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1136,
											"end": 1145,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 1132,
											"end": 1154,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1111,
											"end": 1164,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "322"
										},
										{
											"begin": 1111,
											"end": 1164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1111,
											"end": 1164,
											"name": "tag",
											"source": 6,
											"value": "376"
										},
										{
											"begin": 1111,
											"end": 1164,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1101,
											"end": 1164,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1101,
											"end": 1164,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1056,
											"end": 1174,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1213,
											"end": 1215,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1239,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "377"
										},
										{
											"begin": 1284,
											"end": 1291,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1275,
											"end": 1281,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1264,
											"end": 1273,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 1260,
											"end": 1282,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1239,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "322"
										},
										{
											"begin": 1239,
											"end": 1292,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1239,
											"end": 1292,
											"name": "tag",
											"source": 6,
											"value": "377"
										},
										{
											"begin": 1239,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1229,
											"end": 1292,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1229,
											"end": 1292,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1302,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 690,
											"end": 1309,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 690,
											"end": 1309,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 690,
											"end": 1309,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 690,
											"end": 1309,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 690,
											"end": 1309,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 690,
											"end": 1309,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1315,
											"end": 1433,
											"name": "tag",
											"source": 6,
											"value": "323"
										},
										{
											"begin": 1315,
											"end": 1433,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1402,
											"end": 1426,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "379"
										},
										{
											"begin": 1420,
											"end": 1425,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1402,
											"end": 1426,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "320"
										},
										{
											"begin": 1402,
											"end": 1426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1402,
											"end": 1426,
											"name": "tag",
											"source": 6,
											"value": "379"
										},
										{
											"begin": 1402,
											"end": 1426,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1397,
											"end": 1400,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1390,
											"end": 1427,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1315,
											"end": 1433,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1315,
											"end": 1433,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1315,
											"end": 1433,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1439,
											"end": 1661,
											"name": "tag",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 1439,
											"end": 1661,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1532,
											"end": 1536,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1570,
											"end": 1572,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1559,
											"end": 1568,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1555,
											"end": 1573,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1573,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1573,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1583,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "381"
										},
										{
											"begin": 1651,
											"end": 1652,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1640,
											"end": 1649,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1636,
											"end": 1653,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1627,
											"end": 1633,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1583,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "323"
										},
										{
											"begin": 1583,
											"end": 1654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1583,
											"end": 1654,
											"name": "tag",
											"source": 6,
											"value": "381"
										},
										{
											"begin": 1583,
											"end": 1654,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1439,
											"end": 1661,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1439,
											"end": 1661,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1439,
											"end": 1661,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1439,
											"end": 1661,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1439,
											"end": 1661,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1667,
											"end": 1766,
											"name": "tag",
											"source": 6,
											"value": "324"
										},
										{
											"begin": 1667,
											"end": 1766,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1719,
											"end": 1725,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1753,
											"end": 1758,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1747,
											"end": 1759,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1737,
											"end": 1759,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1737,
											"end": 1759,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1667,
											"end": 1766,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1667,
											"end": 1766,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1667,
											"end": 1766,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1667,
											"end": 1766,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1772,
											"end": 1941,
											"name": "tag",
											"source": 6,
											"value": "325"
										},
										{
											"begin": 1772,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1856,
											"end": 1867,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1890,
											"end": 1896,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1885,
											"end": 1888,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1878,
											"end": 1897,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1930,
											"end": 1934,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1925,
											"end": 1928,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1921,
											"end": 1935,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1906,
											"end": 1935,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1906,
											"end": 1935,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1772,
											"end": 1941,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1772,
											"end": 1941,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1772,
											"end": 1941,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1772,
											"end": 1941,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1772,
											"end": 1941,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1947,
											"end": 2086,
											"name": "tag",
											"source": 6,
											"value": "326"
										},
										{
											"begin": 1947,
											"end": 2086,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2036,
											"end": 2042,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2031,
											"end": 2034,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2026,
											"end": 2029,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 2043,
											"name": "MCOPY",
											"source": 6
										},
										{
											"begin": 2077,
											"end": 2078,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2068,
											"end": 2074,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2063,
											"end": 2066,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2059,
											"end": 2075,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2052,
											"end": 2079,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1947,
											"end": 2086,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1947,
											"end": 2086,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1947,
											"end": 2086,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1947,
											"end": 2086,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2092,
											"end": 2194,
											"name": "tag",
											"source": 6,
											"value": "327"
										},
										{
											"begin": 2092,
											"end": 2194,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2133,
											"end": 2139,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2184,
											"end": 2186,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2180,
											"end": 2187,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2175,
											"end": 2177,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2168,
											"end": 2173,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2164,
											"end": 2178,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2160,
											"end": 2188,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2150,
											"end": 2188,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2150,
											"end": 2188,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2092,
											"end": 2194,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2092,
											"end": 2194,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2092,
											"end": 2194,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2092,
											"end": 2194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2200,
											"end": 2577,
											"name": "tag",
											"source": 6,
											"value": "328"
										},
										{
											"begin": 2200,
											"end": 2577,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2288,
											"end": 2291,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2316,
											"end": 2355,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "387"
										},
										{
											"begin": 2349,
											"end": 2354,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2316,
											"end": 2355,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "324"
										},
										{
											"begin": 2316,
											"end": 2355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2316,
											"end": 2355,
											"name": "tag",
											"source": 6,
											"value": "387"
										},
										{
											"begin": 2316,
											"end": 2355,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2371,
											"end": 2442,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "388"
										},
										{
											"begin": 2435,
											"end": 2441,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2430,
											"end": 2433,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2371,
											"end": 2442,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "325"
										},
										{
											"begin": 2371,
											"end": 2442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2371,
											"end": 2442,
											"name": "tag",
											"source": 6,
											"value": "388"
										},
										{
											"begin": 2371,
											"end": 2442,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2364,
											"end": 2442,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2364,
											"end": 2442,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2451,
											"end": 2516,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "389"
										},
										{
											"begin": 2509,
											"end": 2515,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2504,
											"end": 2507,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2497,
											"end": 2501,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2490,
											"end": 2495,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2486,
											"end": 2502,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2451,
											"end": 2516,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "326"
										},
										{
											"begin": 2451,
											"end": 2516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2451,
											"end": 2516,
											"name": "tag",
											"source": 6,
											"value": "389"
										},
										{
											"begin": 2451,
											"end": 2516,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2541,
											"end": 2570,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "390"
										},
										{
											"begin": 2563,
											"end": 2569,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2541,
											"end": 2570,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "327"
										},
										{
											"begin": 2541,
											"end": 2570,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2541,
											"end": 2570,
											"name": "tag",
											"source": 6,
											"value": "390"
										},
										{
											"begin": 2541,
											"end": 2570,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2536,
											"end": 2539,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2532,
											"end": 2571,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2525,
											"end": 2571,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2525,
											"end": 2571,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2292,
											"end": 2577,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2200,
											"end": 2577,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2200,
											"end": 2577,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2200,
											"end": 2577,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2200,
											"end": 2577,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2200,
											"end": 2577,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2583,
											"end": 2896,
											"name": "tag",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 2583,
											"end": 2896,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2696,
											"end": 2700,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2734,
											"end": 2736,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2723,
											"end": 2732,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2737,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2711,
											"end": 2737,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2711,
											"end": 2737,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2783,
											"end": 2792,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2777,
											"end": 2781,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2793,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2769,
											"end": 2770,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2758,
											"end": 2767,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2754,
											"end": 2771,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2747,
											"end": 2794,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2811,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "392"
										},
										{
											"begin": 2884,
											"end": 2888,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2875,
											"end": 2881,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2811,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "328"
										},
										{
											"begin": 2811,
											"end": 2889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2811,
											"end": 2889,
											"name": "tag",
											"source": 6,
											"value": "392"
										},
										{
											"begin": 2811,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2803,
											"end": 2889,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2803,
											"end": 2889,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2583,
											"end": 2896,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2583,
											"end": 2896,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2583,
											"end": 2896,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2583,
											"end": 2896,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2583,
											"end": 2896,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2902,
											"end": 3028,
											"name": "tag",
											"source": 6,
											"value": "329"
										},
										{
											"begin": 2902,
											"end": 3028,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2939,
											"end": 2946,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2979,
											"end": 3021,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2972,
											"end": 2977,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2968,
											"end": 3022,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2957,
											"end": 3022,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2957,
											"end": 3022,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2902,
											"end": 3028,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2902,
											"end": 3028,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2902,
											"end": 3028,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2902,
											"end": 3028,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3034,
											"end": 3130,
											"name": "tag",
											"source": 6,
											"value": "330"
										},
										{
											"begin": 3034,
											"end": 3130,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3071,
											"end": 3078,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3100,
											"end": 3124,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "395"
										},
										{
											"begin": 3118,
											"end": 3123,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3100,
											"end": 3124,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "329"
										},
										{
											"begin": 3100,
											"end": 3124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3100,
											"end": 3124,
											"name": "tag",
											"source": 6,
											"value": "395"
										},
										{
											"begin": 3100,
											"end": 3124,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3089,
											"end": 3124,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3089,
											"end": 3124,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3034,
											"end": 3130,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3034,
											"end": 3130,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3034,
											"end": 3130,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3034,
											"end": 3130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3136,
											"end": 3258,
											"name": "tag",
											"source": 6,
											"value": "331"
										},
										{
											"begin": 3136,
											"end": 3258,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3209,
											"end": 3233,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "397"
										},
										{
											"begin": 3227,
											"end": 3232,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3209,
											"end": 3233,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "330"
										},
										{
											"begin": 3209,
											"end": 3233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3209,
											"end": 3233,
											"name": "tag",
											"source": 6,
											"value": "397"
										},
										{
											"begin": 3209,
											"end": 3233,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3202,
											"end": 3207,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3199,
											"end": 3234,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3189,
											"end": 3252,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "398"
										},
										{
											"begin": 3189,
											"end": 3252,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3248,
											"end": 3249,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3245,
											"end": 3246,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3238,
											"end": 3250,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3189,
											"end": 3252,
											"name": "tag",
											"source": 6,
											"value": "398"
										},
										{
											"begin": 3189,
											"end": 3252,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3136,
											"end": 3258,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3136,
											"end": 3258,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3403,
											"name": "tag",
											"source": 6,
											"value": "332"
										},
										{
											"begin": 3264,
											"end": 3403,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3310,
											"end": 3315,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3348,
											"end": 3354,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3335,
											"end": 3355,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 3326,
											"end": 3355,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3326,
											"end": 3355,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3364,
											"end": 3397,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "400"
										},
										{
											"begin": 3391,
											"end": 3396,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3364,
											"end": 3397,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "331"
										},
										{
											"begin": 3364,
											"end": 3397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3364,
											"end": 3397,
											"name": "tag",
											"source": 6,
											"value": "400"
										},
										{
											"begin": 3364,
											"end": 3397,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3403,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3403,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3403,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3403,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3403,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3409,
											"end": 3883,
											"name": "tag",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 3409,
											"end": 3883,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3477,
											"end": 3483,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3485,
											"end": 3491,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3534,
											"end": 3536,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3522,
											"end": 3531,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3513,
											"end": 3520,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3509,
											"end": 3532,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3505,
											"end": 3537,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 3502,
											"end": 3621,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3502,
											"end": 3621,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "402"
										},
										{
											"begin": 3502,
											"end": 3621,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3540,
											"end": 3619,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "403"
										},
										{
											"begin": 3540,
											"end": 3619,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 3540,
											"end": 3619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3540,
											"end": 3619,
											"name": "tag",
											"source": 6,
											"value": "403"
										},
										{
											"begin": 3540,
											"end": 3619,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3502,
											"end": 3621,
											"name": "tag",
											"source": 6,
											"value": "402"
										},
										{
											"begin": 3502,
											"end": 3621,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3660,
											"end": 3661,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3685,
											"end": 3738,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "404"
										},
										{
											"begin": 3730,
											"end": 3737,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3721,
											"end": 3727,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3710,
											"end": 3719,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3706,
											"end": 3728,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3685,
											"end": 3738,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "332"
										},
										{
											"begin": 3685,
											"end": 3738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3685,
											"end": 3738,
											"name": "tag",
											"source": 6,
											"value": "404"
										},
										{
											"begin": 3685,
											"end": 3738,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3675,
											"end": 3738,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3675,
											"end": 3738,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3631,
											"end": 3748,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3787,
											"end": 3789,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3813,
											"end": 3866,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "405"
										},
										{
											"begin": 3858,
											"end": 3865,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3849,
											"end": 3855,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3838,
											"end": 3847,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3834,
											"end": 3856,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3813,
											"end": 3866,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "322"
										},
										{
											"begin": 3813,
											"end": 3866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3813,
											"end": 3866,
											"name": "tag",
											"source": 6,
											"value": "405"
										},
										{
											"begin": 3813,
											"end": 3866,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3803,
											"end": 3866,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3803,
											"end": 3866,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3758,
											"end": 3876,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3409,
											"end": 3883,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3409,
											"end": 3883,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3409,
											"end": 3883,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3409,
											"end": 3883,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3409,
											"end": 3883,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3409,
											"end": 3883,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3889,
											"end": 3979,
											"name": "tag",
											"source": 6,
											"value": "333"
										},
										{
											"begin": 3889,
											"end": 3979,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3923,
											"end": 3930,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3966,
											"end": 3971,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3959,
											"end": 3972,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3952,
											"end": 3973,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3941,
											"end": 3973,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3941,
											"end": 3973,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3889,
											"end": 3979,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3889,
											"end": 3979,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3889,
											"end": 3979,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3889,
											"end": 3979,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3985,
											"end": 4094,
											"name": "tag",
											"source": 6,
											"value": "334"
										},
										{
											"begin": 3985,
											"end": 4094,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4066,
											"end": 4087,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "408"
										},
										{
											"begin": 4081,
											"end": 4086,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4066,
											"end": 4087,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "333"
										},
										{
											"begin": 4066,
											"end": 4087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4066,
											"end": 4087,
											"name": "tag",
											"source": 6,
											"value": "408"
										},
										{
											"begin": 4066,
											"end": 4087,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4061,
											"end": 4064,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4054,
											"end": 4088,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3985,
											"end": 4094,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3985,
											"end": 4094,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3985,
											"end": 4094,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4100,
											"end": 4310,
											"name": "tag",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 4100,
											"end": 4310,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4187,
											"end": 4191,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4225,
											"end": 4227,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4214,
											"end": 4223,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4210,
											"end": 4228,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4202,
											"end": 4228,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4202,
											"end": 4228,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4238,
											"end": 4303,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "410"
										},
										{
											"begin": 4300,
											"end": 4301,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4289,
											"end": 4298,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4285,
											"end": 4302,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4276,
											"end": 4282,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4238,
											"end": 4303,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "334"
										},
										{
											"begin": 4238,
											"end": 4303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4238,
											"end": 4303,
											"name": "tag",
											"source": 6,
											"value": "410"
										},
										{
											"begin": 4238,
											"end": 4303,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4100,
											"end": 4310,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4100,
											"end": 4310,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4100,
											"end": 4310,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4100,
											"end": 4310,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4100,
											"end": 4310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4376,
											"name": "tag",
											"source": 6,
											"value": "335"
										},
										{
											"begin": 4316,
											"end": 4376,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4344,
											"end": 4347,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4365,
											"end": 4370,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4358,
											"end": 4370,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4358,
											"end": 4370,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4376,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4376,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4376,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4376,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4382,
											"end": 4524,
											"name": "tag",
											"source": 6,
											"value": "336"
										},
										{
											"begin": 4382,
											"end": 4524,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4432,
											"end": 4441,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4465,
											"end": 4518,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "413"
										},
										{
											"begin": 4483,
											"end": 4517,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "414"
										},
										{
											"begin": 4492,
											"end": 4516,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "415"
										},
										{
											"begin": 4510,
											"end": 4515,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4516,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "329"
										},
										{
											"begin": 4492,
											"end": 4516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4516,
											"name": "tag",
											"source": 6,
											"value": "415"
										},
										{
											"begin": 4492,
											"end": 4516,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4483,
											"end": 4517,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "335"
										},
										{
											"begin": 4483,
											"end": 4517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4483,
											"end": 4517,
											"name": "tag",
											"source": 6,
											"value": "414"
										},
										{
											"begin": 4483,
											"end": 4517,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4465,
											"end": 4518,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "329"
										},
										{
											"begin": 4465,
											"end": 4518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4465,
											"end": 4518,
											"name": "tag",
											"source": 6,
											"value": "413"
										},
										{
											"begin": 4465,
											"end": 4518,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4452,
											"end": 4518,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4452,
											"end": 4518,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4382,
											"end": 4524,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4382,
											"end": 4524,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4382,
											"end": 4524,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4382,
											"end": 4524,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4530,
											"end": 4656,
											"name": "tag",
											"source": 6,
											"value": "337"
										},
										{
											"begin": 4530,
											"end": 4656,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4580,
											"end": 4589,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4613,
											"end": 4650,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "417"
										},
										{
											"begin": 4644,
											"end": 4649,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4613,
											"end": 4650,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "336"
										},
										{
											"begin": 4613,
											"end": 4650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4613,
											"end": 4650,
											"name": "tag",
											"source": 6,
											"value": "417"
										},
										{
											"begin": 4613,
											"end": 4650,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4600,
											"end": 4650,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4600,
											"end": 4650,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4530,
											"end": 4656,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4530,
											"end": 4656,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4530,
											"end": 4656,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4530,
											"end": 4656,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4662,
											"end": 4802,
											"name": "tag",
											"source": 6,
											"value": "338"
										},
										{
											"begin": 4662,
											"end": 4802,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4726,
											"end": 4735,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4759,
											"end": 4796,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "419"
										},
										{
											"begin": 4790,
											"end": 4795,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4759,
											"end": 4796,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "337"
										},
										{
											"begin": 4759,
											"end": 4796,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4759,
											"end": 4796,
											"name": "tag",
											"source": 6,
											"value": "419"
										},
										{
											"begin": 4759,
											"end": 4796,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4746,
											"end": 4796,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4746,
											"end": 4796,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4662,
											"end": 4802,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4662,
											"end": 4802,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4662,
											"end": 4802,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4662,
											"end": 4802,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4808,
											"end": 4967,
											"name": "tag",
											"source": 6,
											"value": "339"
										},
										{
											"begin": 4808,
											"end": 4967,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4909,
											"end": 4960,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "421"
										},
										{
											"begin": 4954,
											"end": 4959,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4909,
											"end": 4960,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "338"
										},
										{
											"begin": 4909,
											"end": 4960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4909,
											"end": 4960,
											"name": "tag",
											"source": 6,
											"value": "421"
										},
										{
											"begin": 4909,
											"end": 4960,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4904,
											"end": 4907,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4897,
											"end": 4961,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4808,
											"end": 4967,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4808,
											"end": 4967,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4808,
											"end": 4967,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4973,
											"end": 5223,
											"name": "tag",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 4973,
											"end": 5223,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5080,
											"end": 5084,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5118,
											"end": 5120,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5107,
											"end": 5116,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5103,
											"end": 5121,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5095,
											"end": 5121,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5095,
											"end": 5121,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5131,
											"end": 5216,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "423"
										},
										{
											"begin": 5213,
											"end": 5214,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5202,
											"end": 5211,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5198,
											"end": 5215,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5189,
											"end": 5195,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5131,
											"end": 5216,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "339"
										},
										{
											"begin": 5131,
											"end": 5216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5131,
											"end": 5216,
											"name": "tag",
											"source": 6,
											"value": "423"
										},
										{
											"begin": 5131,
											"end": 5216,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4973,
											"end": 5223,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4973,
											"end": 5223,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4973,
											"end": 5223,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4973,
											"end": 5223,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4973,
											"end": 5223,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5229,
											"end": 5848,
											"name": "tag",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 5229,
											"end": 5848,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5306,
											"end": 5312,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5314,
											"end": 5320,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5322,
											"end": 5328,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5371,
											"end": 5373,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 5359,
											"end": 5368,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5350,
											"end": 5357,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5346,
											"end": 5369,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5342,
											"end": 5374,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 5339,
											"end": 5458,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5339,
											"end": 5458,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "425"
										},
										{
											"begin": 5339,
											"end": 5458,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5377,
											"end": 5456,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "426"
										},
										{
											"begin": 5377,
											"end": 5456,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 5377,
											"end": 5456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5377,
											"end": 5456,
											"name": "tag",
											"source": 6,
											"value": "426"
										},
										{
											"begin": 5377,
											"end": 5456,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5339,
											"end": 5458,
											"name": "tag",
											"source": 6,
											"value": "425"
										},
										{
											"begin": 5339,
											"end": 5458,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5497,
											"end": 5498,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5522,
											"end": 5575,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "427"
										},
										{
											"begin": 5567,
											"end": 5574,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5558,
											"end": 5564,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5547,
											"end": 5556,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 5543,
											"end": 5565,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5522,
											"end": 5575,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "332"
										},
										{
											"begin": 5522,
											"end": 5575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5522,
											"end": 5575,
											"name": "tag",
											"source": 6,
											"value": "427"
										},
										{
											"begin": 5522,
											"end": 5575,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5512,
											"end": 5575,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 5512,
											"end": 5575,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5468,
											"end": 5585,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5624,
											"end": 5626,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5650,
											"end": 5703,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "428"
										},
										{
											"begin": 5695,
											"end": 5702,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5686,
											"end": 5692,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5675,
											"end": 5684,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 5671,
											"end": 5693,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5650,
											"end": 5703,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "332"
										},
										{
											"begin": 5650,
											"end": 5703,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5650,
											"end": 5703,
											"name": "tag",
											"source": 6,
											"value": "428"
										},
										{
											"begin": 5650,
											"end": 5703,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5640,
											"end": 5703,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5640,
											"end": 5703,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5595,
											"end": 5713,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5752,
											"end": 5754,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5778,
											"end": 5831,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "429"
										},
										{
											"begin": 5823,
											"end": 5830,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5814,
											"end": 5820,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5803,
											"end": 5812,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 5799,
											"end": 5821,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5778,
											"end": 5831,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "322"
										},
										{
											"begin": 5778,
											"end": 5831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5778,
											"end": 5831,
											"name": "tag",
											"source": 6,
											"value": "429"
										},
										{
											"begin": 5778,
											"end": 5831,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5768,
											"end": 5831,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5768,
											"end": 5831,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5723,
											"end": 5841,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5229,
											"end": 5848,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5229,
											"end": 5848,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5229,
											"end": 5848,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5229,
											"end": 5848,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5229,
											"end": 5848,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5229,
											"end": 5848,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5854,
											"end": 5940,
											"name": "tag",
											"source": 6,
											"value": "340"
										},
										{
											"begin": 5854,
											"end": 5940,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5889,
											"end": 5896,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5929,
											"end": 5933,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 5922,
											"end": 5927,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5918,
											"end": 5934,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5907,
											"end": 5934,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5907,
											"end": 5934,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5854,
											"end": 5940,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5854,
											"end": 5940,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5854,
											"end": 5940,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5854,
											"end": 5940,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5946,
											"end": 6058,
											"name": "tag",
											"source": 6,
											"value": "341"
										},
										{
											"begin": 5946,
											"end": 6058,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6029,
											"end": 6051,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "432"
										},
										{
											"begin": 6045,
											"end": 6050,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6029,
											"end": 6051,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "340"
										},
										{
											"begin": 6029,
											"end": 6051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6029,
											"end": 6051,
											"name": "tag",
											"source": 6,
											"value": "432"
										},
										{
											"begin": 6029,
											"end": 6051,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6024,
											"end": 6027,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6017,
											"end": 6052,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5946,
											"end": 6058,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5946,
											"end": 6058,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5946,
											"end": 6058,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6064,
											"end": 6278,
											"name": "tag",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 6064,
											"end": 6278,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6153,
											"end": 6157,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6191,
											"end": 6193,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6180,
											"end": 6189,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6176,
											"end": 6194,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6168,
											"end": 6194,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6168,
											"end": 6194,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6204,
											"end": 6271,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "434"
										},
										{
											"begin": 6268,
											"end": 6269,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6257,
											"end": 6266,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6253,
											"end": 6270,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6244,
											"end": 6250,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6204,
											"end": 6271,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "341"
										},
										{
											"begin": 6204,
											"end": 6271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6204,
											"end": 6271,
											"name": "tag",
											"source": 6,
											"value": "434"
										},
										{
											"begin": 6204,
											"end": 6271,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6064,
											"end": 6278,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6064,
											"end": 6278,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6064,
											"end": 6278,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6064,
											"end": 6278,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6064,
											"end": 6278,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6284,
											"end": 6394,
											"name": "tag",
											"source": 6,
											"value": "342"
										},
										{
											"begin": 6284,
											"end": 6394,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6335,
											"end": 6342,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6364,
											"end": 6388,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "436"
										},
										{
											"begin": 6382,
											"end": 6387,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6364,
											"end": 6388,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "330"
										},
										{
											"begin": 6364,
											"end": 6388,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6364,
											"end": 6388,
											"name": "tag",
											"source": 6,
											"value": "436"
										},
										{
											"begin": 6364,
											"end": 6388,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6353,
											"end": 6388,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6353,
											"end": 6388,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6284,
											"end": 6394,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6284,
											"end": 6394,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6284,
											"end": 6394,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6284,
											"end": 6394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6400,
											"end": 6550,
											"name": "tag",
											"source": 6,
											"value": "343"
										},
										{
											"begin": 6400,
											"end": 6550,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6487,
											"end": 6525,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "438"
										},
										{
											"begin": 6519,
											"end": 6524,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6487,
											"end": 6525,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "342"
										},
										{
											"begin": 6487,
											"end": 6525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6487,
											"end": 6525,
											"name": "tag",
											"source": 6,
											"value": "438"
										},
										{
											"begin": 6487,
											"end": 6525,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6480,
											"end": 6485,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6477,
											"end": 6526,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 6467,
											"end": 6544,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "439"
										},
										{
											"begin": 6467,
											"end": 6544,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6540,
											"end": 6541,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6537,
											"end": 6538,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6530,
											"end": 6542,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6467,
											"end": 6544,
											"name": "tag",
											"source": 6,
											"value": "439"
										},
										{
											"begin": 6467,
											"end": 6544,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6400,
											"end": 6550,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6400,
											"end": 6550,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6556,
											"end": 6723,
											"name": "tag",
											"source": 6,
											"value": "344"
										},
										{
											"begin": 6556,
											"end": 6723,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6616,
											"end": 6621,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6654,
											"end": 6660,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6641,
											"end": 6661,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 6632,
											"end": 6661,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6632,
											"end": 6661,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6670,
											"end": 6717,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "441"
										},
										{
											"begin": 6711,
											"end": 6716,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6670,
											"end": 6717,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "343"
										},
										{
											"begin": 6670,
											"end": 6717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6670,
											"end": 6717,
											"name": "tag",
											"source": 6,
											"value": "441"
										},
										{
											"begin": 6670,
											"end": 6717,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6556,
											"end": 6723,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6556,
											"end": 6723,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6556,
											"end": 6723,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6556,
											"end": 6723,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6556,
											"end": 6723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6729,
											"end": 7376,
											"name": "tag",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 6729,
											"end": 7376,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6820,
											"end": 6826,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6828,
											"end": 6834,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6836,
											"end": 6842,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6885,
											"end": 6887,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 6873,
											"end": 6882,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6864,
											"end": 6871,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6860,
											"end": 6883,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6856,
											"end": 6888,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 6853,
											"end": 6972,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6853,
											"end": 6972,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "443"
										},
										{
											"begin": 6853,
											"end": 6972,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6891,
											"end": 6970,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "444"
										},
										{
											"begin": 6891,
											"end": 6970,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 6891,
											"end": 6970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6891,
											"end": 6970,
											"name": "tag",
											"source": 6,
											"value": "444"
										},
										{
											"begin": 6891,
											"end": 6970,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6853,
											"end": 6972,
											"name": "tag",
											"source": 6,
											"value": "443"
										},
										{
											"begin": 6853,
											"end": 6972,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7011,
											"end": 7012,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7036,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "445"
										},
										{
											"begin": 7081,
											"end": 7088,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 7072,
											"end": 7078,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7061,
											"end": 7070,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 7057,
											"end": 7079,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7036,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "322"
										},
										{
											"begin": 7036,
											"end": 7089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7036,
											"end": 7089,
											"name": "tag",
											"source": 6,
											"value": "445"
										},
										{
											"begin": 7036,
											"end": 7089,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7026,
											"end": 7089,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 7026,
											"end": 7089,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6982,
											"end": 7099,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7138,
											"end": 7140,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7164,
											"end": 7231,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "446"
										},
										{
											"begin": 7223,
											"end": 7230,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 7214,
											"end": 7220,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7203,
											"end": 7212,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 7199,
											"end": 7221,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7164,
											"end": 7231,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "344"
										},
										{
											"begin": 7164,
											"end": 7231,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7164,
											"end": 7231,
											"name": "tag",
											"source": 6,
											"value": "446"
										},
										{
											"begin": 7164,
											"end": 7231,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7154,
											"end": 7231,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7154,
											"end": 7231,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7109,
											"end": 7241,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7280,
											"end": 7282,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7306,
											"end": 7359,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "447"
										},
										{
											"begin": 7351,
											"end": 7358,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 7342,
											"end": 7348,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7331,
											"end": 7340,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 7327,
											"end": 7349,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7306,
											"end": 7359,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "322"
										},
										{
											"begin": 7306,
											"end": 7359,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7306,
											"end": 7359,
											"name": "tag",
											"source": 6,
											"value": "447"
										},
										{
											"begin": 7306,
											"end": 7359,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7296,
											"end": 7359,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7296,
											"end": 7359,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7251,
											"end": 7369,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6729,
											"end": 7376,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6729,
											"end": 7376,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6729,
											"end": 7376,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6729,
											"end": 7376,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6729,
											"end": 7376,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6729,
											"end": 7376,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7382,
											"end": 7742,
											"name": "tag",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 7382,
											"end": 7742,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7517,
											"end": 7521,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7555,
											"end": 7557,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7544,
											"end": 7553,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7540,
											"end": 7558,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7532,
											"end": 7558,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7532,
											"end": 7558,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7568,
											"end": 7639,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "449"
										},
										{
											"begin": 7636,
											"end": 7637,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7625,
											"end": 7634,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7621,
											"end": 7638,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7612,
											"end": 7618,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7568,
											"end": 7639,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "323"
										},
										{
											"begin": 7568,
											"end": 7639,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7568,
											"end": 7639,
											"name": "tag",
											"source": 6,
											"value": "449"
										},
										{
											"begin": 7568,
											"end": 7639,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7649,
											"end": 7735,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "450"
										},
										{
											"begin": 7731,
											"end": 7733,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7720,
											"end": 7729,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7716,
											"end": 7734,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7707,
											"end": 7713,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7649,
											"end": 7735,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "339"
										},
										{
											"begin": 7649,
											"end": 7735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7649,
											"end": 7735,
											"name": "tag",
											"source": 6,
											"value": "450"
										},
										{
											"begin": 7649,
											"end": 7735,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7382,
											"end": 7742,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 7382,
											"end": 7742,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7382,
											"end": 7742,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7382,
											"end": 7742,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7382,
											"end": 7742,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7382,
											"end": 7742,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7748,
											"end": 8077,
											"name": "tag",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 7748,
											"end": 8077,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7807,
											"end": 7813,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7856,
											"end": 7858,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7844,
											"end": 7853,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7835,
											"end": 7842,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7831,
											"end": 7854,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7827,
											"end": 7859,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 7824,
											"end": 7943,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7824,
											"end": 7943,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "452"
										},
										{
											"begin": 7824,
											"end": 7943,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7862,
											"end": 7941,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "453"
										},
										{
											"begin": 7862,
											"end": 7941,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 7862,
											"end": 7941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7862,
											"end": 7941,
											"name": "tag",
											"source": 6,
											"value": "453"
										},
										{
											"begin": 7862,
											"end": 7941,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7824,
											"end": 7943,
											"name": "tag",
											"source": 6,
											"value": "452"
										},
										{
											"begin": 7824,
											"end": 7943,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7982,
											"end": 7983,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8007,
											"end": 8060,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "454"
										},
										{
											"begin": 8052,
											"end": 8059,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8043,
											"end": 8049,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8032,
											"end": 8041,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 8028,
											"end": 8050,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8007,
											"end": 8060,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "332"
										},
										{
											"begin": 8007,
											"end": 8060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8007,
											"end": 8060,
											"name": "tag",
											"source": 6,
											"value": "454"
										},
										{
											"begin": 8007,
											"end": 8060,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7997,
											"end": 8060,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7997,
											"end": 8060,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7953,
											"end": 8070,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7748,
											"end": 8077,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7748,
											"end": 8077,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7748,
											"end": 8077,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7748,
											"end": 8077,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7748,
											"end": 8077,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8083,
											"end": 8412,
											"name": "tag",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 8083,
											"end": 8412,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8142,
											"end": 8148,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8191,
											"end": 8193,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8179,
											"end": 8188,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8170,
											"end": 8177,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8166,
											"end": 8189,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8162,
											"end": 8194,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 8159,
											"end": 8278,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8159,
											"end": 8278,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "456"
										},
										{
											"begin": 8159,
											"end": 8278,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8197,
											"end": 8276,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "457"
										},
										{
											"begin": 8197,
											"end": 8276,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 8197,
											"end": 8276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8197,
											"end": 8276,
											"name": "tag",
											"source": 6,
											"value": "457"
										},
										{
											"begin": 8197,
											"end": 8276,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8159,
											"end": 8278,
											"name": "tag",
											"source": 6,
											"value": "456"
										},
										{
											"begin": 8159,
											"end": 8278,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8317,
											"end": 8318,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8342,
											"end": 8395,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "458"
										},
										{
											"begin": 8387,
											"end": 8394,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8378,
											"end": 8384,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8367,
											"end": 8376,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 8363,
											"end": 8385,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8342,
											"end": 8395,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "322"
										},
										{
											"begin": 8342,
											"end": 8395,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8342,
											"end": 8395,
											"name": "tag",
											"source": 6,
											"value": "458"
										},
										{
											"begin": 8342,
											"end": 8395,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8332,
											"end": 8395,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8332,
											"end": 8395,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8288,
											"end": 8405,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8083,
											"end": 8412,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8083,
											"end": 8412,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8083,
											"end": 8412,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8083,
											"end": 8412,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8083,
											"end": 8412,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8418,
											"end": 8750,
											"name": "tag",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 8418,
											"end": 8750,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8539,
											"end": 8543,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8577,
											"end": 8579,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8566,
											"end": 8575,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8562,
											"end": 8580,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8554,
											"end": 8580,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8554,
											"end": 8580,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8590,
											"end": 8661,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "460"
										},
										{
											"begin": 8658,
											"end": 8659,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8647,
											"end": 8656,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8643,
											"end": 8660,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8634,
											"end": 8640,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 8590,
											"end": 8661,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "323"
										},
										{
											"begin": 8590,
											"end": 8661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8590,
											"end": 8661,
											"name": "tag",
											"source": 6,
											"value": "460"
										},
										{
											"begin": 8590,
											"end": 8661,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8671,
											"end": 8743,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "461"
										},
										{
											"begin": 8739,
											"end": 8741,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8728,
											"end": 8737,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8724,
											"end": 8742,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8715,
											"end": 8721,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8671,
											"end": 8743,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "323"
										},
										{
											"begin": 8671,
											"end": 8743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8671,
											"end": 8743,
											"name": "tag",
											"source": 6,
											"value": "461"
										},
										{
											"begin": 8671,
											"end": 8743,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8418,
											"end": 8750,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 8418,
											"end": 8750,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8418,
											"end": 8750,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8418,
											"end": 8750,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8418,
											"end": 8750,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8418,
											"end": 8750,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8756,
											"end": 9230,
											"name": "tag",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 8756,
											"end": 9230,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8824,
											"end": 8830,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8832,
											"end": 8838,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8881,
											"end": 8883,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8869,
											"end": 8878,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8860,
											"end": 8867,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 8856,
											"end": 8879,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8852,
											"end": 8884,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 8849,
											"end": 8968,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8849,
											"end": 8968,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "463"
										},
										{
											"begin": 8849,
											"end": 8968,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8887,
											"end": 8966,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "464"
										},
										{
											"begin": 8887,
											"end": 8966,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 8887,
											"end": 8966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8887,
											"end": 8966,
											"name": "tag",
											"source": 6,
											"value": "464"
										},
										{
											"begin": 8887,
											"end": 8966,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8849,
											"end": 8968,
											"name": "tag",
											"source": 6,
											"value": "463"
										},
										{
											"begin": 8849,
											"end": 8968,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9007,
											"end": 9008,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9032,
											"end": 9085,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "465"
										},
										{
											"begin": 9077,
											"end": 9084,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 9068,
											"end": 9074,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9057,
											"end": 9066,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 9053,
											"end": 9075,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9032,
											"end": 9085,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "322"
										},
										{
											"begin": 9032,
											"end": 9085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9032,
											"end": 9085,
											"name": "tag",
											"source": 6,
											"value": "465"
										},
										{
											"begin": 9032,
											"end": 9085,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9022,
											"end": 9085,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9022,
											"end": 9085,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8978,
											"end": 9095,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9134,
											"end": 9136,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9160,
											"end": 9213,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "466"
										},
										{
											"begin": 9205,
											"end": 9212,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 9196,
											"end": 9202,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9185,
											"end": 9194,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 9181,
											"end": 9203,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9160,
											"end": 9213,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "322"
										},
										{
											"begin": 9160,
											"end": 9213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9160,
											"end": 9213,
											"name": "tag",
											"source": 6,
											"value": "466"
										},
										{
											"begin": 9160,
											"end": 9213,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9150,
											"end": 9213,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9150,
											"end": 9213,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9105,
											"end": 9223,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8756,
											"end": 9230,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8756,
											"end": 9230,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8756,
											"end": 9230,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8756,
											"end": 9230,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8756,
											"end": 9230,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8756,
											"end": 9230,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9236,
											"end": 9710,
											"name": "tag",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 9236,
											"end": 9710,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9304,
											"end": 9310,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9312,
											"end": 9318,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9361,
											"end": 9363,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9349,
											"end": 9358,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9340,
											"end": 9347,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 9336,
											"end": 9359,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9332,
											"end": 9364,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 9329,
											"end": 9448,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9329,
											"end": 9448,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "468"
										},
										{
											"begin": 9329,
											"end": 9448,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9367,
											"end": 9446,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "469"
										},
										{
											"begin": 9367,
											"end": 9446,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 9367,
											"end": 9446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9367,
											"end": 9446,
											"name": "tag",
											"source": 6,
											"value": "469"
										},
										{
											"begin": 9367,
											"end": 9446,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9329,
											"end": 9448,
											"name": "tag",
											"source": 6,
											"value": "468"
										},
										{
											"begin": 9329,
											"end": 9448,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9487,
											"end": 9488,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9512,
											"end": 9565,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "470"
										},
										{
											"begin": 9557,
											"end": 9564,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 9548,
											"end": 9554,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9537,
											"end": 9546,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 9533,
											"end": 9555,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9512,
											"end": 9565,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "332"
										},
										{
											"begin": 9512,
											"end": 9565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9512,
											"end": 9565,
											"name": "tag",
											"source": 6,
											"value": "470"
										},
										{
											"begin": 9512,
											"end": 9565,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9502,
											"end": 9565,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9502,
											"end": 9565,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9458,
											"end": 9575,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9614,
											"end": 9616,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9640,
											"end": 9693,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "471"
										},
										{
											"begin": 9685,
											"end": 9692,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 9676,
											"end": 9682,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9665,
											"end": 9674,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 9661,
											"end": 9683,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9640,
											"end": 9693,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "332"
										},
										{
											"begin": 9640,
											"end": 9693,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9640,
											"end": 9693,
											"name": "tag",
											"source": 6,
											"value": "471"
										},
										{
											"begin": 9640,
											"end": 9693,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9630,
											"end": 9693,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9630,
											"end": 9693,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9585,
											"end": 9703,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9236,
											"end": 9710,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9236,
											"end": 9710,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9236,
											"end": 9710,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9236,
											"end": 9710,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9236,
											"end": 9710,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9236,
											"end": 9710,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9716,
											"end": 9885,
											"name": "tag",
											"source": 6,
											"value": "345"
										},
										{
											"begin": 9716,
											"end": 9885,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9856,
											"end": 9877,
											"name": "PUSH",
											"source": 6,
											"value": "494E53554646494349454E545F414D4F554E5400000000000000000000000000"
										},
										{
											"begin": 9852,
											"end": 9853,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9844,
											"end": 9850,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9840,
											"end": 9854,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9833,
											"end": 9878,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9716,
											"end": 9885,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9716,
											"end": 9885,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9891,
											"end": 10257,
											"name": "tag",
											"source": 6,
											"value": "346"
										},
										{
											"begin": 9891,
											"end": 10257,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10033,
											"end": 10036,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10054,
											"end": 10121,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "474"
										},
										{
											"begin": 10118,
											"end": 10120,
											"name": "PUSH",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 10113,
											"end": 10116,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10054,
											"end": 10121,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "325"
										},
										{
											"begin": 10054,
											"end": 10121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10054,
											"end": 10121,
											"name": "tag",
											"source": 6,
											"value": "474"
										},
										{
											"begin": 10054,
											"end": 10121,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10047,
											"end": 10121,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10047,
											"end": 10121,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10130,
											"end": 10223,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "475"
										},
										{
											"begin": 10219,
											"end": 10222,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10130,
											"end": 10223,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "345"
										},
										{
											"begin": 10130,
											"end": 10223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10130,
											"end": 10223,
											"name": "tag",
											"source": 6,
											"value": "475"
										},
										{
											"begin": 10130,
											"end": 10223,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10248,
											"end": 10250,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10243,
											"end": 10246,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10239,
											"end": 10251,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10232,
											"end": 10251,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10232,
											"end": 10251,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9891,
											"end": 10257,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9891,
											"end": 10257,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9891,
											"end": 10257,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9891,
											"end": 10257,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10263,
											"end": 10682,
											"name": "tag",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 10263,
											"end": 10682,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10429,
											"end": 10433,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10467,
											"end": 10469,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10456,
											"end": 10465,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10452,
											"end": 10470,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10444,
											"end": 10470,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10444,
											"end": 10470,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10516,
											"end": 10525,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10510,
											"end": 10514,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10506,
											"end": 10526,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10502,
											"end": 10503,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10491,
											"end": 10500,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10487,
											"end": 10504,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10480,
											"end": 10527,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10544,
											"end": 10675,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "477"
										},
										{
											"begin": 10670,
											"end": 10674,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10544,
											"end": 10675,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "346"
										},
										{
											"begin": 10544,
											"end": 10675,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10544,
											"end": 10675,
											"name": "tag",
											"source": 6,
											"value": "477"
										},
										{
											"begin": 10544,
											"end": 10675,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10536,
											"end": 10675,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10536,
											"end": 10675,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10263,
											"end": 10682,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10263,
											"end": 10682,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10263,
											"end": 10682,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10263,
											"end": 10682,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10688,
											"end": 10860,
											"name": "tag",
											"source": 6,
											"value": "347"
										},
										{
											"begin": 10688,
											"end": 10860,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10828,
											"end": 10852,
											"name": "PUSH",
											"source": 6,
											"value": "494E53554646494349454E545F4C495155494449545900000000000000000000"
										},
										{
											"begin": 10824,
											"end": 10825,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10816,
											"end": 10822,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10812,
											"end": 10826,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10805,
											"end": 10853,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10688,
											"end": 10860,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10688,
											"end": 10860,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10866,
											"end": 11232,
											"name": "tag",
											"source": 6,
											"value": "348"
										},
										{
											"begin": 10866,
											"end": 11232,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11008,
											"end": 11011,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11029,
											"end": 11096,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "480"
										},
										{
											"begin": 11093,
											"end": 11095,
											"name": "PUSH",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 11088,
											"end": 11091,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11029,
											"end": 11096,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "325"
										},
										{
											"begin": 11029,
											"end": 11096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11029,
											"end": 11096,
											"name": "tag",
											"source": 6,
											"value": "480"
										},
										{
											"begin": 11029,
											"end": 11096,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11022,
											"end": 11096,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11022,
											"end": 11096,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11105,
											"end": 11198,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "481"
										},
										{
											"begin": 11194,
											"end": 11197,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11105,
											"end": 11198,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "347"
										},
										{
											"begin": 11105,
											"end": 11198,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11105,
											"end": 11198,
											"name": "tag",
											"source": 6,
											"value": "481"
										},
										{
											"begin": 11105,
											"end": 11198,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11223,
											"end": 11225,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11218,
											"end": 11221,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11214,
											"end": 11226,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11207,
											"end": 11226,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11207,
											"end": 11226,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10866,
											"end": 11232,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10866,
											"end": 11232,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10866,
											"end": 11232,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10866,
											"end": 11232,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11238,
											"end": 11657,
											"name": "tag",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 11238,
											"end": 11657,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11404,
											"end": 11408,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11442,
											"end": 11444,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11431,
											"end": 11440,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11427,
											"end": 11445,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11419,
											"end": 11445,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11419,
											"end": 11445,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11491,
											"end": 11500,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11485,
											"end": 11489,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11481,
											"end": 11501,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 11477,
											"end": 11478,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11466,
											"end": 11475,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11462,
											"end": 11479,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11455,
											"end": 11502,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11519,
											"end": 11650,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "483"
										},
										{
											"begin": 11645,
											"end": 11649,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11519,
											"end": 11650,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "348"
										},
										{
											"begin": 11519,
											"end": 11650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11519,
											"end": 11650,
											"name": "tag",
											"source": 6,
											"value": "483"
										},
										{
											"begin": 11519,
											"end": 11650,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11511,
											"end": 11650,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11511,
											"end": 11650,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11238,
											"end": 11657,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11238,
											"end": 11657,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11238,
											"end": 11657,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11238,
											"end": 11657,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11663,
											"end": 11843,
											"name": "tag",
											"source": 6,
											"value": "349"
										},
										{
											"begin": 11663,
											"end": 11843,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11711,
											"end": 11788,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11708,
											"end": 11709,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11701,
											"end": 11789,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11808,
											"end": 11812,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 11805,
											"end": 11806,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 11798,
											"end": 11813,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11832,
											"end": 11836,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 11829,
											"end": 11830,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11822,
											"end": 11837,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 11849,
											"end": 12040,
											"name": "tag",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 11849,
											"end": 12040,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11889,
											"end": 11892,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11908,
											"end": 11928,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "486"
										},
										{
											"begin": 11926,
											"end": 11927,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11908,
											"end": 11928,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "320"
										},
										{
											"begin": 11908,
											"end": 11928,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11908,
											"end": 11928,
											"name": "tag",
											"source": 6,
											"value": "486"
										},
										{
											"begin": 11908,
											"end": 11928,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11903,
											"end": 11928,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11903,
											"end": 11928,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11942,
											"end": 11962,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "487"
										},
										{
											"begin": 11960,
											"end": 11961,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11942,
											"end": 11962,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "320"
										},
										{
											"begin": 11942,
											"end": 11962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11942,
											"end": 11962,
											"name": "tag",
											"source": 6,
											"value": "487"
										},
										{
											"begin": 11942,
											"end": 11962,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11937,
											"end": 11962,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 11937,
											"end": 11962,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11985,
											"end": 11986,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11982,
											"end": 11983,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11978,
											"end": 11987,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11971,
											"end": 11987,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11971,
											"end": 11987,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12006,
											"end": 12009,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 12003,
											"end": 12004,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12000,
											"end": 12010,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 11997,
											"end": 12033,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 11997,
											"end": 12033,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "488"
										},
										{
											"begin": 11997,
											"end": 12033,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 12013,
											"end": 12031,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "489"
										},
										{
											"begin": 12013,
											"end": 12031,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "349"
										},
										{
											"begin": 12013,
											"end": 12031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12013,
											"end": 12031,
											"name": "tag",
											"source": 6,
											"value": "489"
										},
										{
											"begin": 12013,
											"end": 12031,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11997,
											"end": 12033,
											"name": "tag",
											"source": 6,
											"value": "488"
										},
										{
											"begin": 11997,
											"end": 12033,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11849,
											"end": 12040,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 11849,
											"end": 12040,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11849,
											"end": 12040,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11849,
											"end": 12040,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11849,
											"end": 12040,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12046,
											"end": 12456,
											"name": "tag",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 12046,
											"end": 12456,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12086,
											"end": 12093,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12109,
											"end": 12129,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "491"
										},
										{
											"begin": 12127,
											"end": 12128,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12109,
											"end": 12129,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "320"
										},
										{
											"begin": 12109,
											"end": 12129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12109,
											"end": 12129,
											"name": "tag",
											"source": 6,
											"value": "491"
										},
										{
											"begin": 12109,
											"end": 12129,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12104,
											"end": 12129,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12104,
											"end": 12129,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12143,
											"end": 12163,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "492"
										},
										{
											"begin": 12161,
											"end": 12162,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12143,
											"end": 12163,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "320"
										},
										{
											"begin": 12143,
											"end": 12163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12143,
											"end": 12163,
											"name": "tag",
											"source": 6,
											"value": "492"
										},
										{
											"begin": 12143,
											"end": 12163,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12138,
											"end": 12163,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 12138,
											"end": 12163,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12198,
											"end": 12199,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12195,
											"end": 12196,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12191,
											"end": 12200,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 12220,
											"end": 12250,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "493"
										},
										{
											"begin": 12238,
											"end": 12249,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12220,
											"end": 12250,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "320"
										},
										{
											"begin": 12220,
											"end": 12250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12220,
											"end": 12250,
											"name": "tag",
											"source": 6,
											"value": "493"
										},
										{
											"begin": 12220,
											"end": 12250,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12209,
											"end": 12250,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12209,
											"end": 12250,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12399,
											"end": 12400,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12390,
											"end": 12397,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12386,
											"end": 12401,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 12383,
											"end": 12384,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 12380,
											"end": 12402,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 12360,
											"end": 12361,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12353,
											"end": 12362,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 12333,
											"end": 12416,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 12310,
											"end": 12449,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "494"
										},
										{
											"begin": 12310,
											"end": 12449,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 12429,
											"end": 12447,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "495"
										},
										{
											"begin": 12429,
											"end": 12447,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "349"
										},
										{
											"begin": 12429,
											"end": 12447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12429,
											"end": 12447,
											"name": "tag",
											"source": 6,
											"value": "495"
										},
										{
											"begin": 12429,
											"end": 12447,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12310,
											"end": 12449,
											"name": "tag",
											"source": 6,
											"value": "494"
										},
										{
											"begin": 12310,
											"end": 12449,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12094,
											"end": 12456,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12046,
											"end": 12456,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 12046,
											"end": 12456,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12046,
											"end": 12456,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12046,
											"end": 12456,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12046,
											"end": 12456,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12462,
											"end": 12642,
											"name": "tag",
											"source": 6,
											"value": "350"
										},
										{
											"begin": 12462,
											"end": 12642,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12510,
											"end": 12587,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12507,
											"end": 12508,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12500,
											"end": 12588,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12607,
											"end": 12611,
											"name": "PUSH",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 12604,
											"end": 12605,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 12597,
											"end": 12612,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12631,
											"end": 12635,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 12628,
											"end": 12629,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12621,
											"end": 12636,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 12648,
											"end": 12833,
											"name": "tag",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 12648,
											"end": 12833,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12688,
											"end": 12689,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12705,
											"end": 12725,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "498"
										},
										{
											"begin": 12723,
											"end": 12724,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12705,
											"end": 12725,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "320"
										},
										{
											"begin": 12705,
											"end": 12725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12705,
											"end": 12725,
											"name": "tag",
											"source": 6,
											"value": "498"
										},
										{
											"begin": 12705,
											"end": 12725,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12700,
											"end": 12725,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12700,
											"end": 12725,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12739,
											"end": 12759,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "499"
										},
										{
											"begin": 12757,
											"end": 12758,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12739,
											"end": 12759,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "320"
										},
										{
											"begin": 12739,
											"end": 12759,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12739,
											"end": 12759,
											"name": "tag",
											"source": 6,
											"value": "499"
										},
										{
											"begin": 12739,
											"end": 12759,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12734,
											"end": 12759,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 12734,
											"end": 12759,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12778,
											"end": 12779,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12768,
											"end": 12803,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "500"
										},
										{
											"begin": 12768,
											"end": 12803,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12801,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "501"
										},
										{
											"begin": 12783,
											"end": 12801,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "350"
										},
										{
											"begin": 12783,
											"end": 12801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12801,
											"name": "tag",
											"source": 6,
											"value": "501"
										},
										{
											"begin": 12783,
											"end": 12801,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12768,
											"end": 12803,
											"name": "tag",
											"source": 6,
											"value": "500"
										},
										{
											"begin": 12768,
											"end": 12803,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12825,
											"end": 12826,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12822,
											"end": 12823,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12818,
											"end": 12827,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 12813,
											"end": 12827,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12813,
											"end": 12827,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12648,
											"end": 12833,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 12648,
											"end": 12833,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12648,
											"end": 12833,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12648,
											"end": 12833,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12648,
											"end": 12833,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12839,
											"end": 13019,
											"name": "tag",
											"source": 6,
											"value": "351"
										},
										{
											"begin": 12839,
											"end": 13019,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12887,
											"end": 12964,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12884,
											"end": 12885,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12877,
											"end": 12965,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12984,
											"end": 12988,
											"name": "PUSH",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 12981,
											"end": 12982,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 12974,
											"end": 12989,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13008,
											"end": 13012,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 13005,
											"end": 13006,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12998,
											"end": 13013,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 13025,
											"end": 13345,
											"name": "tag",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 13025,
											"end": 13345,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13069,
											"end": 13075,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13106,
											"end": 13107,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 13100,
											"end": 13104,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13096,
											"end": 13108,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 13086,
											"end": 13108,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13086,
											"end": 13108,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13153,
											"end": 13154,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 13147,
											"end": 13151,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13143,
											"end": 13155,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 13174,
											"end": 13192,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 13164,
											"end": 13245,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "504"
										},
										{
											"begin": 13164,
											"end": 13245,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 13230,
											"end": 13234,
											"name": "PUSH",
											"source": 6,
											"value": "7F"
										},
										{
											"begin": 13222,
											"end": 13228,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13218,
											"end": 13235,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 13208,
											"end": 13235,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13208,
											"end": 13235,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13164,
											"end": 13245,
											"name": "tag",
											"source": 6,
											"value": "504"
										},
										{
											"begin": 13164,
											"end": 13245,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13292,
											"end": 13294,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 13284,
											"end": 13290,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13281,
											"end": 13295,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 13261,
											"end": 13279,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13258,
											"end": 13296,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 13255,
											"end": 13339,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "505"
										},
										{
											"begin": 13255,
											"end": 13339,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 13311,
											"end": 13329,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "506"
										},
										{
											"begin": 13311,
											"end": 13329,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "351"
										},
										{
											"begin": 13311,
											"end": 13329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13311,
											"end": 13329,
											"name": "tag",
											"source": 6,
											"value": "506"
										},
										{
											"begin": 13311,
											"end": 13329,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13255,
											"end": 13339,
											"name": "tag",
											"source": 6,
											"value": "505"
										},
										{
											"begin": 13255,
											"end": 13339,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13076,
											"end": 13345,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13025,
											"end": 13345,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13025,
											"end": 13345,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13025,
											"end": 13345,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13025,
											"end": 13345,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13351,
											"end": 13527,
											"name": "tag",
											"source": 6,
											"value": "352"
										},
										{
											"begin": 13351,
											"end": 13527,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13491,
											"end": 13519,
											"name": "PUSH",
											"source": 6,
											"value": "494E53554646494349454E545F4F55545055545F414D4F554E54000000000000"
										},
										{
											"begin": 13487,
											"end": 13488,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13479,
											"end": 13485,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13475,
											"end": 13489,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13468,
											"end": 13520,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13351,
											"end": 13527,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13351,
											"end": 13527,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13533,
											"end": 13899,
											"name": "tag",
											"source": 6,
											"value": "353"
										},
										{
											"begin": 13533,
											"end": 13899,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13675,
											"end": 13678,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13696,
											"end": 13763,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "509"
										},
										{
											"begin": 13760,
											"end": 13762,
											"name": "PUSH",
											"source": 6,
											"value": "1A"
										},
										{
											"begin": 13755,
											"end": 13758,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13696,
											"end": 13763,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "325"
										},
										{
											"begin": 13696,
											"end": 13763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13696,
											"end": 13763,
											"name": "tag",
											"source": 6,
											"value": "509"
										},
										{
											"begin": 13696,
											"end": 13763,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13689,
											"end": 13763,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13689,
											"end": 13763,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13772,
											"end": 13865,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "510"
										},
										{
											"begin": 13861,
											"end": 13864,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13772,
											"end": 13865,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "352"
										},
										{
											"begin": 13772,
											"end": 13865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13772,
											"end": 13865,
											"name": "tag",
											"source": 6,
											"value": "510"
										},
										{
											"begin": 13772,
											"end": 13865,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13890,
											"end": 13892,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 13885,
											"end": 13888,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13881,
											"end": 13893,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13874,
											"end": 13893,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13874,
											"end": 13893,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13533,
											"end": 13899,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13533,
											"end": 13899,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13533,
											"end": 13899,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13533,
											"end": 13899,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13905,
											"end": 14324,
											"name": "tag",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 13905,
											"end": 14324,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14071,
											"end": 14075,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14109,
											"end": 14111,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 14098,
											"end": 14107,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14094,
											"end": 14112,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14086,
											"end": 14112,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14086,
											"end": 14112,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14158,
											"end": 14167,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14152,
											"end": 14156,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14148,
											"end": 14168,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 14144,
											"end": 14145,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14133,
											"end": 14142,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 14129,
											"end": 14146,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14122,
											"end": 14169,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 14186,
											"end": 14317,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "512"
										},
										{
											"begin": 14312,
											"end": 14316,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14186,
											"end": 14317,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "353"
										},
										{
											"begin": 14186,
											"end": 14317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14186,
											"end": 14317,
											"name": "tag",
											"source": 6,
											"value": "512"
										},
										{
											"begin": 14186,
											"end": 14317,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14178,
											"end": 14317,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14178,
											"end": 14317,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13905,
											"end": 14324,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13905,
											"end": 14324,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13905,
											"end": 14324,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13905,
											"end": 14324,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14330,
											"end": 14493,
											"name": "tag",
											"source": 6,
											"value": "354"
										},
										{
											"begin": 14330,
											"end": 14493,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14470,
											"end": 14485,
											"name": "PUSH",
											"source": 6,
											"value": "494E56414C49445F544F4B454E00000000000000000000000000000000000000"
										},
										{
											"begin": 14466,
											"end": 14467,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14458,
											"end": 14464,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14454,
											"end": 14468,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14447,
											"end": 14486,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 14330,
											"end": 14493,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14330,
											"end": 14493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14499,
											"end": 14865,
											"name": "tag",
											"source": 6,
											"value": "355"
										},
										{
											"begin": 14499,
											"end": 14865,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14641,
											"end": 14644,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14662,
											"end": 14729,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "515"
										},
										{
											"begin": 14726,
											"end": 14728,
											"name": "PUSH",
											"source": 6,
											"value": "D"
										},
										{
											"begin": 14721,
											"end": 14724,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 14662,
											"end": 14729,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "325"
										},
										{
											"begin": 14662,
											"end": 14729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14662,
											"end": 14729,
											"name": "tag",
											"source": 6,
											"value": "515"
										},
										{
											"begin": 14662,
											"end": 14729,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14655,
											"end": 14729,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 14655,
											"end": 14729,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14738,
											"end": 14831,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "516"
										},
										{
											"begin": 14827,
											"end": 14830,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14738,
											"end": 14831,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "354"
										},
										{
											"begin": 14738,
											"end": 14831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14738,
											"end": 14831,
											"name": "tag",
											"source": 6,
											"value": "516"
										},
										{
											"begin": 14738,
											"end": 14831,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14856,
											"end": 14858,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 14851,
											"end": 14854,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14847,
											"end": 14859,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14840,
											"end": 14859,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14840,
											"end": 14859,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14499,
											"end": 14865,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 14499,
											"end": 14865,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14499,
											"end": 14865,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14499,
											"end": 14865,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14871,
											"end": 15290,
											"name": "tag",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 14871,
											"end": 15290,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15037,
											"end": 15041,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15075,
											"end": 15077,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 15064,
											"end": 15073,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 15060,
											"end": 15078,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 15052,
											"end": 15078,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15052,
											"end": 15078,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15124,
											"end": 15133,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 15118,
											"end": 15122,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 15114,
											"end": 15134,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 15110,
											"end": 15111,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15099,
											"end": 15108,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 15095,
											"end": 15112,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 15088,
											"end": 15135,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 15152,
											"end": 15283,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "518"
										},
										{
											"begin": 15278,
											"end": 15282,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 15152,
											"end": 15283,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "355"
										},
										{
											"begin": 15152,
											"end": 15283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15152,
											"end": 15283,
											"name": "tag",
											"source": 6,
											"value": "518"
										},
										{
											"begin": 15152,
											"end": 15283,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15144,
											"end": 15283,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15144,
											"end": 15283,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14871,
											"end": 15290,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 14871,
											"end": 15290,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14871,
											"end": 15290,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14871,
											"end": 15290,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15296,
											"end": 15414,
											"name": "tag",
											"source": 6,
											"value": "356"
										},
										{
											"begin": 15296,
											"end": 15414,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15383,
											"end": 15407,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "520"
										},
										{
											"begin": 15401,
											"end": 15406,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 15383,
											"end": 15407,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "330"
										},
										{
											"begin": 15383,
											"end": 15407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15383,
											"end": 15407,
											"name": "tag",
											"source": 6,
											"value": "520"
										},
										{
											"begin": 15383,
											"end": 15407,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15378,
											"end": 15381,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 15371,
											"end": 15408,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 15296,
											"end": 15414,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15296,
											"end": 15414,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15296,
											"end": 15414,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15420,
											"end": 15862,
											"name": "tag",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 15420,
											"end": 15862,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15569,
											"end": 15573,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15607,
											"end": 15609,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 15596,
											"end": 15605,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 15592,
											"end": 15610,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 15584,
											"end": 15610,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15584,
											"end": 15610,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15620,
											"end": 15691,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "522"
										},
										{
											"begin": 15688,
											"end": 15689,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15677,
											"end": 15686,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 15673,
											"end": 15690,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 15664,
											"end": 15670,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 15620,
											"end": 15691,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "356"
										},
										{
											"begin": 15620,
											"end": 15691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15620,
											"end": 15691,
											"name": "tag",
											"source": 6,
											"value": "522"
										},
										{
											"begin": 15620,
											"end": 15691,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15701,
											"end": 15773,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "523"
										},
										{
											"begin": 15769,
											"end": 15771,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 15758,
											"end": 15767,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 15754,
											"end": 15772,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 15745,
											"end": 15751,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 15701,
											"end": 15773,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "356"
										},
										{
											"begin": 15701,
											"end": 15773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15701,
											"end": 15773,
											"name": "tag",
											"source": 6,
											"value": "523"
										},
										{
											"begin": 15701,
											"end": 15773,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15783,
											"end": 15855,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "524"
										},
										{
											"begin": 15851,
											"end": 15853,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 15840,
											"end": 15849,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 15836,
											"end": 15854,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 15827,
											"end": 15833,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 15783,
											"end": 15855,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "323"
										},
										{
											"begin": 15783,
											"end": 15855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15783,
											"end": 15855,
											"name": "tag",
											"source": 6,
											"value": "524"
										},
										{
											"begin": 15783,
											"end": 15855,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15420,
											"end": 15862,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 15420,
											"end": 15862,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 15420,
											"end": 15862,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15420,
											"end": 15862,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15420,
											"end": 15862,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15420,
											"end": 15862,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15420,
											"end": 15862,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15868,
											"end": 15984,
											"name": "tag",
											"source": 6,
											"value": "357"
										},
										{
											"begin": 15868,
											"end": 15984,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15938,
											"end": 15959,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "526"
										},
										{
											"begin": 15953,
											"end": 15958,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 15938,
											"end": 15959,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "333"
										},
										{
											"begin": 15938,
											"end": 15959,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15938,
											"end": 15959,
											"name": "tag",
											"source": 6,
											"value": "526"
										},
										{
											"begin": 15938,
											"end": 15959,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15931,
											"end": 15936,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 15928,
											"end": 15960,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 15918,
											"end": 15978,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "527"
										},
										{
											"begin": 15918,
											"end": 15978,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 15974,
											"end": 15975,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15971,
											"end": 15972,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 15964,
											"end": 15976,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 15918,
											"end": 15978,
											"name": "tag",
											"source": 6,
											"value": "527"
										},
										{
											"begin": 15918,
											"end": 15978,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15868,
											"end": 15984,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15868,
											"end": 15984,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15990,
											"end": 16127,
											"name": "tag",
											"source": 6,
											"value": "358"
										},
										{
											"begin": 15990,
											"end": 16127,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16044,
											"end": 16049,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 16075,
											"end": 16081,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 16069,
											"end": 16082,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 16060,
											"end": 16082,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 16060,
											"end": 16082,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16091,
											"end": 16121,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "529"
										},
										{
											"begin": 16115,
											"end": 16120,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 16091,
											"end": 16121,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "357"
										},
										{
											"begin": 16091,
											"end": 16121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 16091,
											"end": 16121,
											"name": "tag",
											"source": 6,
											"value": "529"
										},
										{
											"begin": 16091,
											"end": 16121,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15990,
											"end": 16127,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 15990,
											"end": 16127,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 15990,
											"end": 16127,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15990,
											"end": 16127,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15990,
											"end": 16127,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 16133,
											"end": 16478,
											"name": "tag",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 16133,
											"end": 16478,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16200,
											"end": 16206,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 16249,
											"end": 16251,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 16237,
											"end": 16246,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 16228,
											"end": 16235,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 16224,
											"end": 16247,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 16220,
											"end": 16252,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 16217,
											"end": 16336,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 16217,
											"end": 16336,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "531"
										},
										{
											"begin": 16217,
											"end": 16336,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 16255,
											"end": 16334,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "532"
										},
										{
											"begin": 16255,
											"end": 16334,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 16255,
											"end": 16334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 16255,
											"end": 16334,
											"name": "tag",
											"source": 6,
											"value": "532"
										},
										{
											"begin": 16255,
											"end": 16334,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16217,
											"end": 16336,
											"name": "tag",
											"source": 6,
											"value": "531"
										},
										{
											"begin": 16217,
											"end": 16336,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16375,
											"end": 16376,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 16400,
											"end": 16461,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "533"
										},
										{
											"begin": 16453,
											"end": 16460,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 16444,
											"end": 16450,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 16433,
											"end": 16442,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 16429,
											"end": 16451,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 16400,
											"end": 16461,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "358"
										},
										{
											"begin": 16400,
											"end": 16461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 16400,
											"end": 16461,
											"name": "tag",
											"source": 6,
											"value": "533"
										},
										{
											"begin": 16400,
											"end": 16461,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16390,
											"end": 16461,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 16390,
											"end": 16461,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16346,
											"end": 16471,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16133,
											"end": 16478,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 16133,
											"end": 16478,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 16133,
											"end": 16478,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16133,
											"end": 16478,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16133,
											"end": 16478,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 16484,
											"end": 16816,
											"name": "tag",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 16484,
											"end": 16816,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16605,
											"end": 16609,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 16643,
											"end": 16645,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 16632,
											"end": 16641,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 16628,
											"end": 16646,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 16620,
											"end": 16646,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 16620,
											"end": 16646,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16656,
											"end": 16727,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "535"
										},
										{
											"begin": 16724,
											"end": 16725,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 16713,
											"end": 16722,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 16709,
											"end": 16726,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 16700,
											"end": 16706,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 16656,
											"end": 16727,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "356"
										},
										{
											"begin": 16656,
											"end": 16727,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 16656,
											"end": 16727,
											"name": "tag",
											"source": 6,
											"value": "535"
										},
										{
											"begin": 16656,
											"end": 16727,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16737,
											"end": 16809,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "536"
										},
										{
											"begin": 16805,
											"end": 16807,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 16794,
											"end": 16803,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 16790,
											"end": 16808,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 16781,
											"end": 16787,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 16737,
											"end": 16809,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "323"
										},
										{
											"begin": 16737,
											"end": 16809,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 16737,
											"end": 16809,
											"name": "tag",
											"source": 6,
											"value": "536"
										},
										{
											"begin": 16737,
											"end": 16809,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16484,
											"end": 16816,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 16484,
											"end": 16816,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 16484,
											"end": 16816,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16484,
											"end": 16816,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16484,
											"end": 16816,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16484,
											"end": 16816,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 16822,
											"end": 17044,
											"name": "tag",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 16822,
											"end": 17044,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16915,
											"end": 16919,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 16953,
											"end": 16955,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 16942,
											"end": 16951,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 16938,
											"end": 16956,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 16930,
											"end": 16956,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 16930,
											"end": 16956,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16966,
											"end": 17037,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "538"
										},
										{
											"begin": 17034,
											"end": 17035,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 17023,
											"end": 17032,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 17019,
											"end": 17036,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 17010,
											"end": 17016,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 16966,
											"end": 17037,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "356"
										},
										{
											"begin": 16966,
											"end": 17037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 16966,
											"end": 17037,
											"name": "tag",
											"source": 6,
											"value": "538"
										},
										{
											"begin": 16966,
											"end": 17037,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16822,
											"end": 17044,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 16822,
											"end": 17044,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 16822,
											"end": 17044,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16822,
											"end": 17044,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16822,
											"end": 17044,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 17050,
											"end": 17193,
											"name": "tag",
											"source": 6,
											"value": "359"
										},
										{
											"begin": 17050,
											"end": 17193,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17107,
											"end": 17112,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 17138,
											"end": 17144,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 17132,
											"end": 17145,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 17123,
											"end": 17145,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 17123,
											"end": 17145,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17154,
											"end": 17187,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "540"
										},
										{
											"begin": 17181,
											"end": 17186,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 17154,
											"end": 17187,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "321"
										},
										{
											"begin": 17154,
											"end": 17187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 17154,
											"end": 17187,
											"name": "tag",
											"source": 6,
											"value": "540"
										},
										{
											"begin": 17154,
											"end": 17187,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17050,
											"end": 17193,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 17050,
											"end": 17193,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 17050,
											"end": 17193,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17050,
											"end": 17193,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17050,
											"end": 17193,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 17199,
											"end": 17550,
											"name": "tag",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 17199,
											"end": 17550,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17269,
											"end": 17275,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 17318,
											"end": 17320,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 17306,
											"end": 17315,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 17297,
											"end": 17304,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 17293,
											"end": 17316,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 17289,
											"end": 17321,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 17286,
											"end": 17405,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 17286,
											"end": 17405,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "542"
										},
										{
											"begin": 17286,
											"end": 17405,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 17324,
											"end": 17403,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "543"
										},
										{
											"begin": 17324,
											"end": 17403,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 17324,
											"end": 17403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 17324,
											"end": 17403,
											"name": "tag",
											"source": 6,
											"value": "543"
										},
										{
											"begin": 17324,
											"end": 17403,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17286,
											"end": 17405,
											"name": "tag",
											"source": 6,
											"value": "542"
										},
										{
											"begin": 17286,
											"end": 17405,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17444,
											"end": 17445,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 17469,
											"end": 17533,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "544"
										},
										{
											"begin": 17525,
											"end": 17532,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 17516,
											"end": 17522,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 17505,
											"end": 17514,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 17501,
											"end": 17523,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 17469,
											"end": 17533,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "359"
										},
										{
											"begin": 17469,
											"end": 17533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 17469,
											"end": 17533,
											"name": "tag",
											"source": 6,
											"value": "544"
										},
										{
											"begin": 17469,
											"end": 17533,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17459,
											"end": 17533,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 17459,
											"end": 17533,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17415,
											"end": 17543,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17199,
											"end": 17550,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 17199,
											"end": 17550,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 17199,
											"end": 17550,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17199,
											"end": 17550,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17199,
											"end": 17550,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 17556,
											"end": 18109,
											"name": "tag",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 17556,
											"end": 18109,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17733,
											"end": 17737,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 17771,
											"end": 17774,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 17760,
											"end": 17769,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 17756,
											"end": 17775,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 17748,
											"end": 17775,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 17748,
											"end": 17775,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17785,
											"end": 17856,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "546"
										},
										{
											"begin": 17853,
											"end": 17854,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 17842,
											"end": 17851,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 17838,
											"end": 17855,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 17829,
											"end": 17835,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 17785,
											"end": 17856,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "323"
										},
										{
											"begin": 17785,
											"end": 17856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 17785,
											"end": 17856,
											"name": "tag",
											"source": 6,
											"value": "546"
										},
										{
											"begin": 17785,
											"end": 17856,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17866,
											"end": 17938,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "547"
										},
										{
											"begin": 17934,
											"end": 17936,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 17923,
											"end": 17932,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 17919,
											"end": 17937,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 17910,
											"end": 17916,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 17866,
											"end": 17938,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "356"
										},
										{
											"begin": 17866,
											"end": 17938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 17866,
											"end": 17938,
											"name": "tag",
											"source": 6,
											"value": "547"
										},
										{
											"begin": 17866,
											"end": 17938,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17948,
											"end": 18020,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "548"
										},
										{
											"begin": 18016,
											"end": 18018,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 18005,
											"end": 18014,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 18001,
											"end": 18019,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 17992,
											"end": 17998,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 17948,
											"end": 18020,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "323"
										},
										{
											"begin": 17948,
											"end": 18020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 17948,
											"end": 18020,
											"name": "tag",
											"source": 6,
											"value": "548"
										},
										{
											"begin": 17948,
											"end": 18020,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 18030,
											"end": 18102,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "549"
										},
										{
											"begin": 18098,
											"end": 18100,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 18087,
											"end": 18096,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 18083,
											"end": 18101,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 18074,
											"end": 18080,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 18030,
											"end": 18102,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "356"
										},
										{
											"begin": 18030,
											"end": 18102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 18030,
											"end": 18102,
											"name": "tag",
											"source": 6,
											"value": "549"
										},
										{
											"begin": 18030,
											"end": 18102,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17556,
											"end": 18109,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 17556,
											"end": 18109,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 17556,
											"end": 18109,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17556,
											"end": 18109,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17556,
											"end": 18109,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17556,
											"end": 18109,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17556,
											"end": 18109,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17556,
											"end": 18109,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 18115,
											"end": 18294,
											"name": "tag",
											"source": 6,
											"value": "360"
										},
										{
											"begin": 18115,
											"end": 18294,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 18255,
											"end": 18286,
											"name": "PUSH",
											"source": 6,
											"value": "494E53554646494349454E545F4C49515549444954595F4D494E544544000000"
										},
										{
											"begin": 18251,
											"end": 18252,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 18243,
											"end": 18249,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 18239,
											"end": 18253,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 18232,
											"end": 18287,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 18115,
											"end": 18294,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 18115,
											"end": 18294,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 18300,
											"end": 18666,
											"name": "tag",
											"source": 6,
											"value": "361"
										},
										{
											"begin": 18300,
											"end": 18666,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 18442,
											"end": 18445,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 18463,
											"end": 18530,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "552"
										},
										{
											"begin": 18527,
											"end": 18529,
											"name": "PUSH",
											"source": 6,
											"value": "1D"
										},
										{
											"begin": 18522,
											"end": 18525,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 18463,
											"end": 18530,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "325"
										},
										{
											"begin": 18463,
											"end": 18530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 18463,
											"end": 18530,
											"name": "tag",
											"source": 6,
											"value": "552"
										},
										{
											"begin": 18463,
											"end": 18530,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 18456,
											"end": 18530,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 18456,
											"end": 18530,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 18539,
											"end": 18632,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "553"
										},
										{
											"begin": 18628,
											"end": 18631,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 18539,
											"end": 18632,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "360"
										},
										{
											"begin": 18539,
											"end": 18632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 18539,
											"end": 18632,
											"name": "tag",
											"source": 6,
											"value": "553"
										},
										{
											"begin": 18539,
											"end": 18632,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 18657,
											"end": 18659,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 18652,
											"end": 18655,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 18648,
											"end": 18660,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 18641,
											"end": 18660,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 18641,
											"end": 18660,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 18300,
											"end": 18666,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 18300,
											"end": 18666,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 18300,
											"end": 18666,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 18300,
											"end": 18666,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 18672,
											"end": 19091,
											"name": "tag",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 18672,
											"end": 19091,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 18838,
											"end": 18842,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 18876,
											"end": 18878,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 18865,
											"end": 18874,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 18861,
											"end": 18879,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 18853,
											"end": 18879,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 18853,
											"end": 18879,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 18925,
											"end": 18934,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 18919,
											"end": 18923,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 18915,
											"end": 18935,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 18911,
											"end": 18912,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 18900,
											"end": 18909,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 18896,
											"end": 18913,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 18889,
											"end": 18936,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 18953,
											"end": 19084,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "555"
										},
										{
											"begin": 19079,
											"end": 19083,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 18953,
											"end": 19084,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "361"
										},
										{
											"begin": 18953,
											"end": 19084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 18953,
											"end": 19084,
											"name": "tag",
											"source": 6,
											"value": "555"
										},
										{
											"begin": 18953,
											"end": 19084,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 18945,
											"end": 19084,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 18945,
											"end": 19084,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 18672,
											"end": 19091,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 18672,
											"end": 19091,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 18672,
											"end": 19091,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 18672,
											"end": 19091,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 19097,
											"end": 19539,
											"name": "tag",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 19097,
											"end": 19539,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 19246,
											"end": 19250,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 19284,
											"end": 19286,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 19273,
											"end": 19282,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 19269,
											"end": 19287,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 19261,
											"end": 19287,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 19261,
											"end": 19287,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 19297,
											"end": 19368,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "557"
										},
										{
											"begin": 19365,
											"end": 19366,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 19354,
											"end": 19363,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 19350,
											"end": 19367,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 19341,
											"end": 19347,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 19297,
											"end": 19368,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "356"
										},
										{
											"begin": 19297,
											"end": 19368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 19297,
											"end": 19368,
											"name": "tag",
											"source": 6,
											"value": "557"
										},
										{
											"begin": 19297,
											"end": 19368,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 19378,
											"end": 19450,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "558"
										},
										{
											"begin": 19446,
											"end": 19448,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 19435,
											"end": 19444,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 19431,
											"end": 19449,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 19422,
											"end": 19428,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 19378,
											"end": 19450,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "323"
										},
										{
											"begin": 19378,
											"end": 19450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 19378,
											"end": 19450,
											"name": "tag",
											"source": 6,
											"value": "558"
										},
										{
											"begin": 19378,
											"end": 19450,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 19460,
											"end": 19532,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "559"
										},
										{
											"begin": 19528,
											"end": 19530,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 19517,
											"end": 19526,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 19513,
											"end": 19531,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 19504,
											"end": 19510,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 19460,
											"end": 19532,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "323"
										},
										{
											"begin": 19460,
											"end": 19532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 19460,
											"end": 19532,
											"name": "tag",
											"source": 6,
											"value": "559"
										},
										{
											"begin": 19460,
											"end": 19532,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 19097,
											"end": 19539,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 19097,
											"end": 19539,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 19097,
											"end": 19539,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 19097,
											"end": 19539,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 19097,
											"end": 19539,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 19097,
											"end": 19539,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 19097,
											"end": 19539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/t3_waa.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"addLiquidity(uint256,uint256)": "9cd441da",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"getAmountOut(uint256,uint256,uint256)": "054d50d4",
							"name()": "06fdde03",
							"removeLiquidity(uint256)": "9c8f9f23",
							"reserve0()": "443cb4bc",
							"reserve1()": "5a76f25e",
							"swap(uint256,address,uint256)": "43264349",
							"symbol()": "95d89b41",
							"token0()": "0dfe1681",
							"token1()": "d21220a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_token0\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"_token1\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0Input\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Input\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reserve0\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reserve1\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenOutMin\",\"type\":\"uint256\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenOut\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/t3_waa.sol\":\"SimpleSwap\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/t3_waa.sol\":{\"keccak256\":\"0x0e2b2665110b68397a05287a2c3eac077d51b5e2e894fa89148d2c668d41069c\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://fd408a047a787a8844066ad3e48e7f29895c01a18b85923b361797103724dd31\",\"dweb:/ipfs/QmfDLfL6ZqqMJwXiMxn7Q1nST5F8HGkoAFiPkrsp8njaxf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 159,
								"contract": "contracts/t3_waa.sol:SimpleSwap",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 165,
								"contract": "contracts/t3_waa.sol:SimpleSwap",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 167,
								"contract": "contracts/t3_waa.sol:SimpleSwap",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 169,
								"contract": "contracts/t3_waa.sol:SimpleSwap",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "contracts/t3_waa.sol:SimpleSwap",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 793,
								"contract": "contracts/t3_waa.sol:SimpleSwap",
								"label": "token0",
								"offset": 0,
								"slot": "5",
								"type": "t_contract(IERC20)729"
							},
							{
								"astId": 796,
								"contract": "contracts/t3_waa.sol:SimpleSwap",
								"label": "token1",
								"offset": 0,
								"slot": "6",
								"type": "t_contract(IERC20)729"
							},
							{
								"astId": 798,
								"contract": "contracts/t3_waa.sol:SimpleSwap",
								"label": "reserve0",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 800,
								"contract": "contracts/t3_waa.sol:SimpleSwap",
								"label": "reserve1",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)729": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							136
						],
						"IERC20Errors": [
							41
						],
						"IERC721Errors": [
							89
						]
					},
					"id": 137,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:0",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 41,
							"linearizedBaseContracts": [
								41
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 11,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "652:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "668:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "685:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:0"
									},
									"src": "621:80:0"
								},
								{
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 16,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "889:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:0"
									},
									"src": "864:41:0"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 21,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1102:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:0"
									},
									"src": "1075:45:0"
								},
								{
									"documentation": {
										"id": 22,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 30,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1509:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1526:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1545:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:0"
									},
									"src": "1476:85:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 35,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1773:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:0"
									},
									"src": "1746:45:0"
								},
								{
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 40,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2023:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:0"
									},
									"src": "1997:43:0"
								}
							],
							"scope": 137,
							"src": "278:1764:0",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 42,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:0",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 89,
							"linearizedBaseContracts": [
								89
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 47,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "2465:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:0"
									},
									"src": "2440:40:0"
								},
								{
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 52,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2652:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:0"
									},
									"src": "2623:46:0"
								},
								{
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 61,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "2996:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3012:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3029:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:0"
									},
									"src": "2969:75:0"
								},
								{
									"documentation": {
										"id": 62,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 66,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "3233:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:0"
									},
									"src": "3207:42:0"
								},
								{
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 71,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "3447:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:0"
									},
									"src": "3419:46:0"
								},
								{
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 78,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3756:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3774:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:0"
									},
									"src": "3723:68:0"
								},
								{
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 83,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "4004:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:0"
									},
									"src": "3976:46:0"
								},
								{
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 88,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "4258:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:0"
									},
									"src": "4230:46:0"
								}
							],
							"scope": 137,
							"src": "2186:2092:0",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 90,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:0",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 136,
							"linearizedBaseContracts": [
								136
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 101,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4854:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4870:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4887:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4903:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:0"
									},
									"src": "4821:99:0"
								},
								{
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 106,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "5110:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:0"
									},
									"src": "5083:43:0"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 111,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "5325:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:0"
									},
									"src": "5296:47:0"
								},
								{
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 118,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5645:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5663:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:0"
									},
									"src": "5610:68:0"
								},
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 123,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "5892:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:0"
									},
									"src": "5863:47:0"
								},
								{
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 128,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "6147:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:0"
									},
									"src": "6118:47:0"
								},
								{
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 135,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6488:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6507:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:0"
									},
									"src": "6456:73:0"
								}
							],
							"scope": 137,
							"src": "4424:2107:0",
							"usedErrors": [
								101,
								106,
								111,
								118,
								123,
								128,
								135
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							785
						],
						"ERC20": [
							651
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 652,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 138,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 140,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 730,
							"src": "131:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 139,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "139:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 142,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 756,
							"src": "168:63:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 141,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 755,
										"src": "176:14:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 144,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 786,
							"src": "232:48:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 143,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 785,
										"src": "240:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 146,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 137,
							"src": "281:65:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 145,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 41,
										"src": "289:12:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 148,
										"name": "Context",
										"nameLocations": [
											"1428:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 785,
										"src": "1428:7:1"
									},
									"id": 149,
									"nodeType": "InheritanceSpecifier",
									"src": "1428:7:1"
								},
								{
									"baseName": {
										"id": 150,
										"name": "IERC20",
										"nameLocations": [
											"1437:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "1437:6:1"
									},
									"id": 151,
									"nodeType": "InheritanceSpecifier",
									"src": "1437:6:1"
								},
								{
									"baseName": {
										"id": 152,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1445:14:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 755,
										"src": "1445:14:1"
									},
									"id": 153,
									"nodeType": "InheritanceSpecifier",
									"src": "1445:14:1"
								},
								{
									"baseName": {
										"id": 154,
										"name": "IERC20Errors",
										"nameLocations": [
											"1461:12:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 41,
										"src": "1461:12:1"
									},
									"id": 155,
									"nodeType": "InheritanceSpecifier",
									"src": "1461:12:1"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 147,
								"nodeType": "StructuredDocumentation",
								"src": "348:1052:1",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 651,
							"linearizedBaseContracts": [
								651,
								41,
								755,
								729,
								785
							],
							"name": "ERC20",
							"nameLocation": "1419:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 159,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1524:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1480:53:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 158,
										"keyName": "account",
										"keyNameLocation": "1496:7:1",
										"keyType": {
											"id": 156,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1488:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1480:35:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 157,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1507:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 165,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1612:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1540:83:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 164,
										"keyName": "account",
										"keyNameLocation": "1556:7:1",
										"keyType": {
											"id": 160,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1548:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1540:63:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 163,
											"keyName": "spender",
											"keyNameLocation": "1583:7:1",
											"keyType": {
												"id": 161,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1575:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1567:35:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 162,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1594:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 167,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1646:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1630:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 166,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1630:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 169,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1680:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1665:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 168,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1665:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 171,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1706:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1691:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 170,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1691:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 187,
										"nodeType": "Block",
										"src": "1952:57:1",
										"statements": [
											{
												"expression": {
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 179,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 169,
														"src": "1962:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 180,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "1970:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1962:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 182,
												"nodeType": "ExpressionStatement",
												"src": "1962:13:1"
											},
											{
												"expression": {
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 183,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "1985:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 184,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 176,
														"src": "1995:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1985:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "1985:17:1"
											}
										]
									},
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "1720:171:1",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 188,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1922:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1908:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 173,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1908:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1943:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1929:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 175,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1929:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1907:44:1"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1952:0:1"
									},
									"scope": 651,
									"src": "1896:113:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										742
									],
									"body": {
										"id": 196,
										"nodeType": "Block",
										"src": "2134:29:1",
										"statements": [
											{
												"expression": {
													"id": 194,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 169,
													"src": "2151:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 193,
												"id": 195,
												"nodeType": "Return",
												"src": "2144:12:1"
											}
										]
									},
									"documentation": {
										"id": 189,
										"nodeType": "StructuredDocumentation",
										"src": "2015:54:1",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2083:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2087:2:1"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "2119:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 191,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2119:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2118:15:1"
									},
									"scope": 651,
									"src": "2074:89:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										748
									],
									"body": {
										"id": 205,
										"nodeType": "Block",
										"src": "2338:31:1",
										"statements": [
											{
												"expression": {
													"id": 203,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 171,
													"src": "2355:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 202,
												"id": 204,
												"nodeType": "Return",
												"src": "2348:14:1"
											}
										]
									},
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "2169:102:1",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2285:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2291:2:1"
									},
									"returnParameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "2323:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 200,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2323:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:15:1"
									},
									"scope": 651,
									"src": "2276:93:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										754
									],
									"body": {
										"id": 214,
										"nodeType": "Block",
										"src": "3058:26:1",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3075:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 211,
												"id": 213,
												"nodeType": "Return",
												"src": "3068:9:1"
											}
										]
									},
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "2375:622:1",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3011:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3019:2:1"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "3051:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 209,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3051:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3050:7:1"
									},
									"scope": 651,
									"src": "3002:82:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										678
									],
									"body": {
										"id": 223,
										"nodeType": "Block",
										"src": "3205:36:1",
										"statements": [
											{
												"expression": {
													"id": 221,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 167,
													"src": "3222:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 220,
												"id": 222,
												"nodeType": "Return",
												"src": "3215:19:1"
											}
										]
									},
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "3090:49:1",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 224,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3153:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3164:2:1"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "3196:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3196:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3195:9:1"
									},
									"scope": 651,
									"src": "3144:97:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										686
									],
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "3373:42:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 232,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 159,
														"src": "3390:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 234,
													"indexExpression": {
														"id": 233,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 227,
														"src": "3400:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3390:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 231,
												"id": 235,
												"nodeType": "Return",
												"src": "3383:25:1"
											}
										]
									},
									"documentation": {
										"id": 225,
										"nodeType": "StructuredDocumentation",
										"src": "3247:47:1",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3308:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3326:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3318:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3318:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:17:1"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3364:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3364:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3363:9:1"
									},
									"scope": 651,
									"src": "3299:116:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										696
									],
									"body": {
										"id": 260,
										"nodeType": "Block",
										"src": "3685:103:1",
										"statements": [
											{
												"assignments": [
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3703:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 260,
														"src": "3695:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 247,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3695:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 251,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 249,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "3711:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3711:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3695:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 253,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "3743:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 254,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "3750:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 255,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "3754:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 252,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "3733:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3733:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 257,
												"nodeType": "ExpressionStatement",
												"src": "3733:27:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3777:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 246,
												"id": 259,
												"nodeType": "Return",
												"src": "3770:11:1"
											}
										]
									},
									"documentation": {
										"id": 238,
										"nodeType": "StructuredDocumentation",
										"src": "3421:184:1",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3619:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3636:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3628:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3628:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3648:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3640:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3640:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3627:27:1"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3679:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 244,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3679:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3678:6:1"
									},
									"scope": 651,
									"src": "3610:178:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										706
									],
									"body": {
										"id": 277,
										"nodeType": "Block",
										"src": "3935:51:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 271,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "3952:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 273,
														"indexExpression": {
															"id": 272,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "3964:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3952:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 275,
													"indexExpression": {
														"id": 274,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "3971:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3952:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 270,
												"id": 276,
												"nodeType": "Return",
												"src": "3945:34:1"
											}
										]
									},
									"documentation": {
										"id": 262,
										"nodeType": "StructuredDocumentation",
										"src": "3794:47:1",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3855:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3873:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3865:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3865:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3888:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3880:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3880:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3864:32:1"
									},
									"returnParameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3926:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3926:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3925:9:1"
									},
									"scope": 651,
									"src": "3846:140:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										716
									],
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "4372:107:1",
										"statements": [
											{
												"assignments": [
													289
												],
												"declarations": [
													{
														"constant": false,
														"id": 289,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4390:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4382:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 288,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4382:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 292,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 290,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "4398:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4398:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4382:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 294,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 289,
															"src": "4429:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 295,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "4436:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 296,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "4445:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 293,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 542,
														"src": "4420:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4420:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 298,
												"nodeType": "ExpressionStatement",
												"src": "4420:31:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4468:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 287,
												"id": 300,
												"nodeType": "Return",
												"src": "4461:11:1"
											}
										]
									},
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "3992:296:1",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4302:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4318:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4310:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4310:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4335:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4327:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4327:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4309:32:1"
									},
									"returnParameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4366:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 285,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4366:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4365:6:1"
									},
									"scope": 651,
									"src": "4293:186:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										728
									],
									"body": {
										"id": 333,
										"nodeType": "Block",
										"src": "5132:151:1",
										"statements": [
											{
												"assignments": [
													315
												],
												"declarations": [
													{
														"constant": false,
														"id": 315,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5150:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 333,
														"src": "5142:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 314,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5142:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 318,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 316,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "5160:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5160:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5142:30:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 320,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "5198:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 321,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "5204:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 322,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "5213:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 319,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 650,
														"src": "5182:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5182:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 324,
												"nodeType": "ExpressionStatement",
												"src": "5182:37:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 326,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "5239:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 327,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 307,
															"src": "5245:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 328,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "5249:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 325,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "5229:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5229:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "5229:26:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5272:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 313,
												"id": 332,
												"nodeType": "Return",
												"src": "5265:11:1"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "4485:549:1",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5048:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5069:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "5061:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5083:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "5075:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5095:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "5087:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5087:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:41:1"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "5126:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 311,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5126:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5125:6:1"
									},
									"scope": 651,
									"src": "5039:244:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 380,
										"nodeType": "Block",
										"src": "5725:231:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 344,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 337,
														"src": "5739:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 347,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5755:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 346,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5747:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 345,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5747:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 348,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5747:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5739:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 358,
												"nodeType": "IfStatement",
												"src": "5735:86:1",
												"trueBody": {
													"id": 357,
													"nodeType": "Block",
													"src": "5759:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 353,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5807:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 352,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5799:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 351,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5799:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 354,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5799:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 350,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "5780:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 355,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5780:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 356,
															"nodeType": "RevertStatement",
															"src": "5773:37:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 359,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 339,
														"src": "5834:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 362,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5848:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5840:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 360,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5840:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 363,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5840:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5834:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 373,
												"nodeType": "IfStatement",
												"src": "5830:86:1",
												"trueBody": {
													"id": 372,
													"nodeType": "Block",
													"src": "5852:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 368,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5902:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 367,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5894:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 366,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5894:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 369,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5894:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 365,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "5873:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 370,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5873:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 371,
															"nodeType": "RevertStatement",
															"src": "5866:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 375,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 337,
															"src": "5933:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 376,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "5939:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 377,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "5943:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 374,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "5925:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5925:24:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 379,
												"nodeType": "ExpressionStatement",
												"src": "5925:24:1"
											}
										]
									},
									"documentation": {
										"id": 335,
										"nodeType": "StructuredDocumentation",
										"src": "5289:362:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5665:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5683:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5675:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5675:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5697:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5689:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5689:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5709:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5701:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5674:41:1"
									},
									"returnParameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5725:0:1"
									},
									"scope": 651,
									"src": "5656:300:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 457,
										"nodeType": "Block",
										"src": "6346:1032:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 391,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 384,
														"src": "6360:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6376:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 393,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6368:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 392,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6368:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 395,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6368:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6360:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 428,
													"nodeType": "Block",
													"src": "6534:362:1",
													"statements": [
														{
															"assignments": [
																403
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 403,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6556:11:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 428,
																	"src": "6548:19:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 402,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6548:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 407,
															"initialValue": {
																"baseExpression": {
																	"id": 404,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 159,
																	"src": "6570:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 406,
																"indexExpression": {
																	"id": 405,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 384,
																	"src": "6580:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6570:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6548:37:1"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 408,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 403,
																	"src": "6603:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 409,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6617:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6603:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 418,
															"nodeType": "IfStatement",
															"src": "6599:115:1",
															"trueBody": {
																"id": 417,
																"nodeType": "Block",
																"src": "6624:90:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 412,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 384,
																					"src": "6674:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 413,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 403,
																					"src": "6680:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 414,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 388,
																					"src": "6693:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 411,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 11,
																				"src": "6649:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 415,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6649:50:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 416,
																		"nodeType": "RevertStatement",
																		"src": "6642:57:1"
																	}
																]
															}
														},
														{
															"id": 427,
															"nodeType": "UncheckedBlock",
															"src": "6727:159:1",
															"statements": [
																{
																	"expression": {
																		"id": 425,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 419,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6834:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 421,
																			"indexExpression": {
																				"id": 420,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 384,
																				"src": "6844:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6834:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 424,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 422,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 403,
																				"src": "6852:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 423,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 388,
																				"src": "6866:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6852:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6834:37:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 426,
																	"nodeType": "ExpressionStatement",
																	"src": "6834:37:1"
																}
															]
														}
													]
												},
												"id": 429,
												"nodeType": "IfStatement",
												"src": "6356:540:1",
												"trueBody": {
													"id": 401,
													"nodeType": "Block",
													"src": "6380:148:1",
													"statements": [
														{
															"expression": {
																"id": 399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 397,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 167,
																	"src": "6496:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 398,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6512:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6496:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 400,
															"nodeType": "ExpressionStatement",
															"src": "6496:21:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 430,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "6910:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 433,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6924:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6916:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 431,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6916:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6916:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6910:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 449,
													"nodeType": "Block",
													"src": "7125:206:1",
													"statements": [
														{
															"id": 448,
															"nodeType": "UncheckedBlock",
															"src": "7139:182:1",
															"statements": [
																{
																	"expression": {
																		"id": 446,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 442,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "7284:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 444,
																			"indexExpression": {
																				"id": 443,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 386,
																				"src": "7294:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7284:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 445,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "7301:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7284:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 447,
																	"nodeType": "ExpressionStatement",
																	"src": "7284:22:1"
																}
															]
														}
													]
												},
												"id": 450,
												"nodeType": "IfStatement",
												"src": "6906:425:1",
												"trueBody": {
													"id": 441,
													"nodeType": "Block",
													"src": "6928:191:1",
													"statements": [
														{
															"id": 440,
															"nodeType": "UncheckedBlock",
															"src": "6942:167:1",
															"statements": [
																{
																	"expression": {
																		"id": 438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 436,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 167,
																			"src": "7073:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 437,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "7089:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7073:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 439,
																	"nodeType": "ExpressionStatement",
																	"src": "7073:21:1"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 452,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "7355:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 453,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 386,
															"src": "7361:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 454,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "7365:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 451,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 663,
														"src": "7346:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7346:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 456,
												"nodeType": "EmitStatement",
												"src": "7341:30:1"
											}
										]
									},
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "5962:304:1",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6280:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6296:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6288:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6288:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6310:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6302:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6302:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6322:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6314:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6314:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6287:41:1"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6346:0:1"
									},
									"scope": 651,
									"src": "6271:1107:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 490,
										"nodeType": "Block",
										"src": "7777:152:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 466,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "7791:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 469,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7810:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 468,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7802:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 467,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7802:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 470,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7802:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7791:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 480,
												"nodeType": "IfStatement",
												"src": "7787:91:1",
												"trueBody": {
													"id": 479,
													"nodeType": "Block",
													"src": "7814:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 475,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7864:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 474,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7856:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 473,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7856:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 476,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7856:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 472,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "7835:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 477,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7835:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 478,
															"nodeType": "RevertStatement",
															"src": "7828:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7903:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 483,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7895:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 482,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7895:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7895:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 486,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "7907:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 487,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "7916:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 481,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "7887:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7887:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 489,
												"nodeType": "ExpressionStatement",
												"src": "7887:35:1"
											}
										]
									},
									"documentation": {
										"id": 459,
										"nodeType": "StructuredDocumentation",
										"src": "7384:332:1",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7730:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7744:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7736:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7736:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7761:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7753:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7753:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7735:32:1"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7777:0:1"
									},
									"scope": 651,
									"src": "7721:208:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 523,
										"nodeType": "Block",
										"src": "8303:150:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 499,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 494,
														"src": "8317:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 502,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8336:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8328:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 500,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8328:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 503,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8328:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8317:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 513,
												"nodeType": "IfStatement",
												"src": "8313:89:1",
												"trueBody": {
													"id": 512,
													"nodeType": "Block",
													"src": "8340:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 508,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8388:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 507,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8380:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 506,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8380:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 509,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8380:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 505,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "8361:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8361:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 511,
															"nodeType": "RevertStatement",
															"src": "8354:37:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 515,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "8419:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 518,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8436:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 517,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8428:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 516,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8428:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8428:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 520,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "8440:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 514,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "8411:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8411:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 522,
												"nodeType": "ExpressionStatement",
												"src": "8411:35:1"
											}
										]
									},
									"documentation": {
										"id": 492,
										"nodeType": "StructuredDocumentation",
										"src": "7935:307:1",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8256:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8270:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "8262:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8287:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "8279:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8279:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8261:32:1"
									},
									"returnParameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8303:0:1"
									},
									"scope": 651,
									"src": "8247:206:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 541,
										"nodeType": "Block",
										"src": "9063:54:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 535,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "9082:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 536,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "9089:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 537,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "9098:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9105:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 534,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 602,
														"src": "9073:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9073:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 540,
												"nodeType": "ExpressionStatement",
												"src": "9073:37:1"
											}
										]
									},
									"documentation": {
										"id": 525,
										"nodeType": "StructuredDocumentation",
										"src": "8459:525:1",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 542,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8998:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9015:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "9007:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9007:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9030:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "9022:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9022:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9047:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "9039:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9039:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9006:47:1"
									},
									"returnParameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9063:0:1"
									},
									"scope": 651,
									"src": "8989:128:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 601,
										"nodeType": "Block",
										"src": "10047:334:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 554,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 545,
														"src": "10061:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 557,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10078:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 556,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10070:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 555,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10070:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 558,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10070:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10061:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 568,
												"nodeType": "IfStatement",
												"src": "10057:89:1",
												"trueBody": {
													"id": 567,
													"nodeType": "Block",
													"src": "10082:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 563,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10132:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 562,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10124:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 561,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10124:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 564,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10124:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 560,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "10103:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10103:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 566,
															"nodeType": "RevertStatement",
															"src": "10096:39:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 569,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 547,
														"src": "10159:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 572,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10178:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10170:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 570,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10170:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 573,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10170:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10159:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 583,
												"nodeType": "IfStatement",
												"src": "10155:90:1",
												"trueBody": {
													"id": 582,
													"nodeType": "Block",
													"src": "10182:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 578,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10231:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 577,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10223:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 576,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10223:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10223:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 575,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "10203:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10203:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 581,
															"nodeType": "RevertStatement",
															"src": "10196:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 584,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 165,
																"src": "10254:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 587,
															"indexExpression": {
																"id": 585,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 545,
																"src": "10266:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10254:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 588,
														"indexExpression": {
															"id": 586,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "10273:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10254:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 589,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 549,
														"src": "10284:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10254:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 591,
												"nodeType": "ExpressionStatement",
												"src": "10254:35:1"
											},
											{
												"condition": {
													"id": 592,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 551,
													"src": "10303:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 600,
												"nodeType": "IfStatement",
												"src": "10299:76:1",
												"trueBody": {
													"id": 599,
													"nodeType": "Block",
													"src": "10314:61:1",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 594,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 545,
																		"src": "10342:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 595,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 547,
																		"src": "10349:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 596,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 549,
																		"src": "10358:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 593,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 672,
																	"src": "10333:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10333:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 598,
															"nodeType": "EmitStatement",
															"src": "10328:36:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 543,
										"nodeType": "StructuredDocumentation",
										"src": "9123:821:1",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9958:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9975:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9967:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9967:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9990:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9982:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10007:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9999:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9999:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "10019:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "10014:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 550,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10014:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9966:63:1"
									},
									"returnParameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10047:0:1"
									},
									"scope": 651,
									"src": "9949:432:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 649,
										"nodeType": "Block",
										"src": "10752:388:1",
										"statements": [
											{
												"assignments": [
													613
												],
												"declarations": [
													{
														"constant": false,
														"id": 613,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10770:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 649,
														"src": "10762:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 612,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10762:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 618,
												"initialValue": {
													"arguments": [
														{
															"id": 615,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "10799:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 616,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "10806:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 614,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 278,
														"src": "10789:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10789:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10762:52:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 619,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "10828:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10853:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 621,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10853:7:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 620,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10848:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 623,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10848:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 624,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10862:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10848:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10828:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 648,
												"nodeType": "IfStatement",
												"src": "10824:310:1",
												"trueBody": {
													"id": 647,
													"nodeType": "Block",
													"src": "10867:267:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 628,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 626,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 613,
																	"src": "10885:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 627,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 609,
																	"src": "10904:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10885:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 636,
															"nodeType": "IfStatement",
															"src": "10881:130:1",
															"trueBody": {
																"id": 635,
																"nodeType": "Block",
																"src": "10911:100:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 630,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 607,
																					"src": "10963:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 631,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "10972:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 632,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "10990:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 629,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 30,
																				"src": "10936:26:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 633,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10936:60:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 634,
																		"nodeType": "RevertStatement",
																		"src": "10929:67:1"
																	}
																]
															}
														},
														{
															"id": 646,
															"nodeType": "UncheckedBlock",
															"src": "11024:100:1",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 638,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 605,
																				"src": "11061:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 639,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 607,
																				"src": "11068:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 642,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 640,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "11077:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 641,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "11096:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11077:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 643,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11103:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 637,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				542,
																				602
																			],
																			"referencedDeclaration": 602,
																			"src": "11052:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 644,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11052:57:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 645,
																	"nodeType": "ExpressionStatement",
																	"src": "11052:57:1"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 603,
										"nodeType": "StructuredDocumentation",
										"src": "10387:271:1",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 650,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10672:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10696:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10688:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10688:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10711:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10703:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10703:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10728:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10720:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10720:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10687:47:1"
									},
									"returnParameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10752:0:1"
									},
									"scope": 651,
									"src": "10663:477:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 652,
							"src": "1401:9741:1",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "105:11038:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						]
					},
					"id": 730,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 653,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 654,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 729,
							"linearizedBaseContracts": [
								729
							],
							"name": "IERC20",
							"nameLocation": "213:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 655,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 663,
									"name": "Transfer",
									"nameLocation": "395:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "404:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "426:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 661,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "446:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:2"
									},
									"src": "389:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 664,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 672,
									"name": "Approval",
									"nameLocation": "626:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 666,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "635:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 665,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 668,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "658:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 670,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "683:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:2"
									},
									"src": "620:78:2"
								},
								{
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:2",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 678,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:2"
									},
									"returnParameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "820:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:2"
									},
									"scope": 729,
									"src": "774:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 679,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:2",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 686,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "930:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:2"
									},
									"returnParameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "970:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:2"
									},
									"scope": 729,
									"src": "911:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 687,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 696,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1221:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1233:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:2"
									},
									"returnParameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1266:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 693,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:2"
									},
									"scope": 729,
									"src": "1203:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 697,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 706,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1566:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1581:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:2"
									},
									"returnParameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1621:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:2"
									},
									"scope": 729,
									"src": "1547:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 707,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 716,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2325:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2342:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:2"
									},
									"returnParameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2375:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 713,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:2"
									},
									"scope": 729,
									"src": "2308:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 717,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 728,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2711:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2725:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2737:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:2"
									},
									"returnParameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2770:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 725,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:2"
									},
									"scope": 729,
									"src": "2689:87:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 730,
							"src": "203:2575:2",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "106:2673:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 756,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 731,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 733,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 756,
							"sourceUnit": 730,
							"src": "151:37:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 732,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "159:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 735,
										"name": "IERC20",
										"nameLocations": [
											"305:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "305:6:3"
									},
									"id": 736,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:3"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 734,
								"nodeType": "StructuredDocumentation",
								"src": "190:86:3",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 755,
							"linearizedBaseContracts": [
								755,
								729
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 737,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 742,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:3"
									},
									"returnParameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "416:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 739,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:3"
									},
									"scope": 755,
									"src": "377:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 743,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:3",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 748,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:3"
									},
									"returnParameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "539:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 745,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:3"
									},
									"scope": 755,
									"src": "498:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 749,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:3",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 754,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:3"
									},
									"returnParameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "673:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 751,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:3"
									},
									"scope": 755,
									"src": "630:50:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 756,
							"src": "277:405:3",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "125:558:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							785
						]
					},
					"id": 786,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 757,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 758,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 785,
							"linearizedBaseContracts": [
								785
							],
							"name": "Context",
							"nameLocation": "642:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 766,
										"nodeType": "Block",
										"src": "718:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 763,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 762,
												"id": 765,
												"nodeType": "Return",
												"src": "728:17:4"
											}
										]
									},
									"id": 767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:4"
									},
									"returnParameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "709:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:4"
									},
									"scope": 785,
									"src": "656:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 775,
										"nodeType": "Block",
										"src": "825:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 772,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:4",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 771,
												"id": 774,
												"nodeType": "Return",
												"src": "835:15:4"
											}
										]
									},
									"id": 776,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:4"
									},
									"returnParameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "809:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 769,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:4"
									},
									"scope": 785,
									"src": "758:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 783,
										"nodeType": "Block",
										"src": "935:25:4",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 781,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 780,
												"id": 782,
												"nodeType": "Return",
												"src": "945:8:4"
											}
										]
									},
									"id": 784,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:4"
									},
									"returnParameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "926:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:4"
									},
									"scope": 785,
									"src": "863:97:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 786,
							"src": "624:338:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:4"
				},
				"id": 4
			},
			"contracts/t3_waa.sol": {
				"ast": {
					"absolutePath": "contracts/t3_waa.sol",
					"exportedSymbols": {
						"Context": [
							785
						],
						"ERC20": [
							651
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						],
						"SimpleSwap": [
							1337
						]
					},
					"id": 1338,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 787,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "39:31:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 788,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1338,
							"sourceUnit": 652,
							"src": "74:55:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 789,
										"name": "ERC20",
										"nameLocations": [
											"455:5:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 651,
										"src": "455:5:5"
									},
									"id": 790,
									"nodeType": "InheritanceSpecifier",
									"src": "455:5:5"
								}
							],
							"canonicalName": "SimpleSwap",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1337,
							"linearizedBaseContracts": [
								1337,
								651,
								41,
								755,
								729,
								785
							],
							"name": "SimpleSwap",
							"nameLocation": "441:10:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "0dfe1681",
									"id": 793,
									"mutability": "mutable",
									"name": "token0",
									"nameLocation": "539:6:5",
									"nodeType": "VariableDeclaration",
									"scope": 1337,
									"src": "525:20:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$729",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 792,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 791,
											"name": "IERC20",
											"nameLocations": [
												"525:6:5"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 729,
											"src": "525:6:5"
										},
										"referencedDeclaration": 729,
										"src": "525:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$729",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d21220a7",
									"id": 796,
									"mutability": "mutable",
									"name": "token1",
									"nameLocation": "566:6:5",
									"nodeType": "VariableDeclaration",
									"scope": 1337,
									"src": "552:20:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$729",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 795,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 794,
											"name": "IERC20",
											"nameLocations": [
												"552:6:5"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 729,
											"src": "552:6:5"
										},
										"referencedDeclaration": 729,
										"src": "552:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$729",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "443cb4bc",
									"id": 798,
									"mutability": "mutable",
									"name": "reserve0",
									"nameLocation": "623:8:5",
									"nodeType": "VariableDeclaration",
									"scope": 1337,
									"src": "611:20:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 797,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "611:4:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5a76f25e",
									"id": 800,
									"mutability": "mutable",
									"name": "reserve1",
									"nameLocation": "650:8:5",
									"nodeType": "VariableDeclaration",
									"scope": 1337,
									"src": "638:20:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 799,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "638:4:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 821,
										"nodeType": "Block",
										"src": "736:62:5",
										"statements": [
											{
												"expression": {
													"id": 815,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 813,
														"name": "token0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 793,
														"src": "747:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$729",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 814,
														"name": "_token0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 803,
														"src": "756:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$729",
															"typeString": "contract IERC20"
														}
													},
													"src": "747:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$729",
														"typeString": "contract IERC20"
													}
												},
												"id": 816,
												"nodeType": "ExpressionStatement",
												"src": "747:16:5"
											},
											{
												"expression": {
													"id": 819,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 817,
														"name": "token1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 796,
														"src": "774:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$729",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 818,
														"name": "_token1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 806,
														"src": "783:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$729",
															"typeString": "contract IERC20"
														}
													},
													"src": "774:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$729",
														"typeString": "contract IERC20"
													}
												},
												"id": 820,
												"nodeType": "ExpressionStatement",
												"src": "774:16:5"
											}
										]
									},
									"id": 822,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "53696d706c6553776170",
													"id": 809,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "717:12:5",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_a0f41d54f2f2b7966a90e9cd39ab4f298f5040988f380cfafec39a85446da985",
														"typeString": "literal_string \"SimpleSwap\""
													},
													"value": "SimpleSwap"
												},
												{
													"hexValue": "5353",
													"id": 810,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "731:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_8535e3db6464e317fd034d686701432ec45f68985b6a58376f7d984274c3141b",
														"typeString": "literal_string \"SS\""
													},
													"value": "SS"
												}
											],
											"id": 811,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 808,
												"name": "ERC20",
												"nameLocations": [
													"711:5:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 651,
												"src": "711:5:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "711:25:5"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 807,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 803,
												"mutability": "mutable",
												"name": "_token0",
												"nameLocation": "686:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 822,
												"src": "679:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$729",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 802,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 801,
														"name": "IERC20",
														"nameLocations": [
															"679:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 729,
														"src": "679:6:5"
													},
													"referencedDeclaration": 729,
													"src": "679:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$729",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 806,
												"mutability": "mutable",
												"name": "_token1",
												"nameLocation": "702:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 822,
												"src": "695:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$729",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 805,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 804,
														"name": "IERC20",
														"nameLocations": [
															"695:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 729,
														"src": "695:6:5"
													},
													"referencedDeclaration": 729,
													"src": "695:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$729",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "678:32:5"
									},
									"returnParameters": {
										"id": 812,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "736:0:5"
									},
									"scope": 1337,
									"src": "667:131:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f",
									"id": 830,
									"name": "Mint",
									"nameLocation": "812:4:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 829,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "833:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 830,
												"src": "817:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 823,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "817:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 826,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "846:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 830,
												"src": "841:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 825,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "841:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 828,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "860:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 830,
												"src": "855:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 827,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "855:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:52:5"
									},
									"src": "806:63:5"
								},
								{
									"body": {
										"id": 937,
										"nodeType": "Block",
										"src": "1113:870:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 842,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1187:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 843,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1191:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1187:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 846,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1207:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SimpleSwap_$1337",
																		"typeString": "contract SimpleSwap"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SimpleSwap_$1337",
																		"typeString": "contract SimpleSwap"
																	}
																],
																"id": 845,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1199:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 844,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1199:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 847,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1199:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 848,
															"name": "amount0Input",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 832,
															"src": "1214:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 839,
															"name": "token0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 793,
															"src": "1167:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$729",
																"typeString": "contract IERC20"
															}
														},
														"id": 841,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1174:12:5",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 728,
														"src": "1167:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 849,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1167:60:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 850,
												"nodeType": "ExpressionStatement",
												"src": "1167:60:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 854,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1258:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 855,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1262:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1258:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 858,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1278:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SimpleSwap_$1337",
																		"typeString": "contract SimpleSwap"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SimpleSwap_$1337",
																		"typeString": "contract SimpleSwap"
																	}
																],
																"id": 857,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1270:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 856,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1270:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 859,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1270:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 860,
															"name": "amount1Input",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 834,
															"src": "1285:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 851,
															"name": "token1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 796,
															"src": "1238:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$729",
																"typeString": "contract IERC20"
															}
														},
														"id": 853,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1245:12:5",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 728,
														"src": "1238:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 861,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1238:60:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 862,
												"nodeType": "ExpressionStatement",
												"src": "1238:60:5"
											},
											{
												"assignments": [
													864
												],
												"declarations": [
													{
														"constant": false,
														"id": 864,
														"mutability": "mutable",
														"name": "_totalSupply",
														"nameLocation": "1338:12:5",
														"nodeType": "VariableDeclaration",
														"scope": 937,
														"src": "1333:17:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 863,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1333:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 867,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 865,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 224,
														"src": "1353:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 866,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1353:13:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1333:33:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 870,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 868,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 864,
														"src": "1382:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 869,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1398:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1382:17:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 895,
													"nodeType": "Block",
													"src": "1479:120:5",
													"statements": [
														{
															"expression": {
																"id": 893,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 880,
																	"name": "liquidity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 837,
																	"src": "1494:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 886,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 884,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 882,
																					"name": "amount0Input",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 832,
																					"src": "1510:12:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 883,
																					"name": "_totalSupply",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 864,
																					"src": "1525:12:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "1510:27:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"id": 885,
																				"name": "reserve0",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 798,
																				"src": "1540:8:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1510:38:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 891,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 889,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 887,
																					"name": "amount1Input",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 834,
																					"src": "1550:12:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 888,
																					"name": "_totalSupply",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 864,
																					"src": "1565:12:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "1550:27:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"id": 890,
																				"name": "reserve1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 800,
																				"src": "1578:8:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1550:36:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 881,
																		"name": "min",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1336,
																		"src": "1506:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 892,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1506:81:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1494:93:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 894,
															"nodeType": "ExpressionStatement",
															"src": "1494:93:5"
														}
													]
												},
												"id": 896,
												"nodeType": "IfStatement",
												"src": "1379:220:5",
												"trueBody": {
													"id": 879,
													"nodeType": "Block",
													"src": "1401:72:5",
													"statements": [
														{
															"expression": {
																"id": 877,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 871,
																	"name": "liquidity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 837,
																	"src": "1416:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 875,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 873,
																				"name": "amount0Input",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 832,
																				"src": "1433:12:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 874,
																				"name": "amount1Input",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 834,
																				"src": "1448:12:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1433:27:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 872,
																		"name": "sqrt",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1317,
																		"src": "1428:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 876,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1428:33:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1416:45:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 878,
															"nodeType": "ExpressionStatement",
															"src": "1416:45:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 900,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 898,
																"name": "liquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 837,
																"src": "1627:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 899,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1639:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1627:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "494e53554646494349454e545f4c49515549444954595f4d494e544544",
															"id": 901,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1642:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_56a253623294f4f4de6a9841388f033e113a22d6b37d1e786db69a7172923f8c",
																"typeString": "literal_string \"INSUFFICIENT_LIQUIDITY_MINTED\""
															},
															"value": "INSUFFICIENT_LIQUIDITY_MINTED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_56a253623294f4f4de6a9841388f033e113a22d6b37d1e786db69a7172923f8c",
																"typeString": "literal_string \"INSUFFICIENT_LIQUIDITY_MINTED\""
															}
														],
														"id": 897,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1619:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 902,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1619:55:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 903,
												"nodeType": "ExpressionStatement",
												"src": "1619:55:5"
											},
											{
												"expression": {
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 904,
														"name": "reserve0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "1765:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 909,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "1801:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_SimpleSwap_$1337",
																			"typeString": "contract SimpleSwap"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_SimpleSwap_$1337",
																			"typeString": "contract SimpleSwap"
																		}
																	],
																	"id": 908,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1793:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 907,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1793:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 910,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1793:13:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 905,
																"name": "token0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 793,
																"src": "1776:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$729",
																	"typeString": "contract IERC20"
																}
															},
															"id": 906,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1783:9:5",
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 686,
															"src": "1776:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 911,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1776:31:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1765:42:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 913,
												"nodeType": "ExpressionStatement",
												"src": "1765:42:5"
											},
											{
												"expression": {
													"id": 922,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 914,
														"name": "reserve1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 800,
														"src": "1818:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 919,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "1854:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_SimpleSwap_$1337",
																			"typeString": "contract SimpleSwap"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_SimpleSwap_$1337",
																			"typeString": "contract SimpleSwap"
																		}
																	],
																	"id": 918,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1846:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 917,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1846:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 920,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1846:13:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 915,
																"name": "token1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 796,
																"src": "1829:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$729",
																	"typeString": "contract IERC20"
																}
															},
															"id": 916,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1836:9:5",
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 686,
															"src": "1829:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 921,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1829:31:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1818:42:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 923,
												"nodeType": "ExpressionStatement",
												"src": "1818:42:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 925,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1891:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 926,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1895:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1891:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 927,
															"name": "liquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 837,
															"src": "1903:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 924,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 491,
														"src": "1885:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 928,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1885:28:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 929,
												"nodeType": "ExpressionStatement",
												"src": "1885:28:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 931,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1936:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 932,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1940:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1936:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 933,
															"name": "amount0Input",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 832,
															"src": "1948:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 934,
															"name": "amount1Input",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 834,
															"src": "1962:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 930,
														"name": "Mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 830,
														"src": "1931:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 935,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1931:44:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 936,
												"nodeType": "EmitStatement",
												"src": "1926:49:5"
											}
										]
									},
									"functionSelector": "9cd441da",
									"id": 938,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidity",
									"nameLocation": "1031:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 835,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "amount0Input",
												"nameLocation": "1049:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 938,
												"src": "1044:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1044:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 834,
												"mutability": "mutable",
												"name": "amount1Input",
												"nameLocation": "1068:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 938,
												"src": "1063:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 833,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1043:38:5"
									},
									"returnParameters": {
										"id": 838,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "1102:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 938,
												"src": "1097:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 836,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1097:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1096:16:5"
									},
									"scope": 1337,
									"src": "1022:961:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "49995e5dd6158cf69ad3e9777c46755a1a826a446c6416992167462dad033b2a",
									"id": 946,
									"name": "Burn",
									"nameLocation": "1997:4:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 945,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 940,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2018:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "2002:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 939,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2002:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 942,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "2031:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "2026:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 941,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2026:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 944,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "2045:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "2040:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 943,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2040:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2001:52:5"
									},
									"src": "1991:63:5"
								},
								{
									"body": {
										"id": 1056,
										"nodeType": "Block",
										"src": "2248:822:5",
										"statements": [
											{
												"assignments": [
													956
												],
												"declarations": [
													{
														"constant": false,
														"id": 956,
														"mutability": "mutable",
														"name": "_balance0",
														"nameLocation": "2313:9:5",
														"nodeType": "VariableDeclaration",
														"scope": 1056,
														"src": "2308:14:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 955,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2308:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 964,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 961,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2350:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SimpleSwap_$1337",
																		"typeString": "contract SimpleSwap"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SimpleSwap_$1337",
																		"typeString": "contract SimpleSwap"
																	}
																],
																"id": 960,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2342:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 959,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2342:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 962,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2342:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 957,
															"name": "token0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 793,
															"src": "2325:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$729",
																"typeString": "contract IERC20"
															}
														},
														"id": 958,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2332:9:5",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 686,
														"src": "2325:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 963,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2325:31:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2308:48:5"
											},
											{
												"assignments": [
													966
												],
												"declarations": [
													{
														"constant": false,
														"id": 966,
														"mutability": "mutable",
														"name": "_balance1",
														"nameLocation": "2372:9:5",
														"nodeType": "VariableDeclaration",
														"scope": 1056,
														"src": "2367:14:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 965,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2367:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 974,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 971,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2409:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SimpleSwap_$1337",
																		"typeString": "contract SimpleSwap"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SimpleSwap_$1337",
																		"typeString": "contract SimpleSwap"
																	}
																],
																"id": 970,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2401:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 969,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2401:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 972,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2401:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 967,
															"name": "token1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 796,
															"src": "2384:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$729",
																"typeString": "contract IERC20"
															}
														},
														"id": 968,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2391:9:5",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 686,
														"src": "2384:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 973,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2384:31:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2367:48:5"
											},
											{
												"assignments": [
													976
												],
												"declarations": [
													{
														"constant": false,
														"id": 976,
														"mutability": "mutable",
														"name": "_totalSupply",
														"nameLocation": "2455:12:5",
														"nodeType": "VariableDeclaration",
														"scope": 1056,
														"src": "2450:17:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 975,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2450:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 979,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 977,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 224,
														"src": "2470:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 978,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2470:13:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2450:33:5"
											},
											{
												"expression": {
													"id": 986,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 980,
														"name": "amount0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 951,
														"src": "2494:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 985,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 983,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 981,
																"name": "liquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 948,
																"src": "2504:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 982,
																"name": "_balance0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 956,
																"src": "2516:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2504:21:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 984,
															"name": "_totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 976,
															"src": "2528:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2504:36:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2494:46:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 987,
												"nodeType": "ExpressionStatement",
												"src": "2494:46:5"
											},
											{
												"expression": {
													"id": 994,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 988,
														"name": "amount1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 953,
														"src": "2551:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 993,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 991,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 989,
																"name": "liquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 948,
																"src": "2561:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 990,
																"name": "_balance1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 966,
																"src": "2573:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2561:21:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 992,
															"name": "_totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 976,
															"src": "2585:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2561:36:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2551:46:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 995,
												"nodeType": "ExpressionStatement",
												"src": "2551:46:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1003,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 999,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 997,
																	"name": "amount0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 951,
																	"src": "2618:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 998,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2628:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "2618:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1002,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1000,
																	"name": "amount1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 953,
																	"src": "2633:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1001,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2643:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "2633:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2618:26:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "494e53554646494349454e545f4c49515549444954595f4d494e544544",
															"id": 1004,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2646:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_56a253623294f4f4de6a9841388f033e113a22d6b37d1e786db69a7172923f8c",
																"typeString": "literal_string \"INSUFFICIENT_LIQUIDITY_MINTED\""
															},
															"value": "INSUFFICIENT_LIQUIDITY_MINTED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_56a253623294f4f4de6a9841388f033e113a22d6b37d1e786db69a7172923f8c",
																"typeString": "literal_string \"INSUFFICIENT_LIQUIDITY_MINTED\""
															}
														],
														"id": 996,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2610:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1005,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2610:68:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1006,
												"nodeType": "ExpressionStatement",
												"src": "2610:68:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1008,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2724:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1009,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2728:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2724:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1010,
															"name": "liquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 948,
															"src": "2736:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1007,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 524,
														"src": "2718:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1011,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2718:28:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1012,
												"nodeType": "ExpressionStatement",
												"src": "2718:28:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1016,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2804:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1017,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2808:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2804:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1018,
															"name": "amount0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 951,
															"src": "2816:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1013,
															"name": "token0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 793,
															"src": "2788:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$729",
																"typeString": "contract IERC20"
															}
														},
														"id": 1015,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2795:8:5",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 696,
														"src": "2788:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1019,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2788:36:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1020,
												"nodeType": "ExpressionStatement",
												"src": "2788:36:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1024,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2851:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1025,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2855:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2851:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1026,
															"name": "amount1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 953,
															"src": "2863:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1021,
															"name": "token1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 796,
															"src": "2835:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$729",
																"typeString": "contract IERC20"
															}
														},
														"id": 1023,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2842:8:5",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 696,
														"src": "2835:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1027,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2835:36:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1028,
												"nodeType": "ExpressionStatement",
												"src": "2835:36:5"
											},
											{
												"expression": {
													"id": 1037,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1029,
														"name": "reserve0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "2915:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1034,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "2951:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_SimpleSwap_$1337",
																			"typeString": "contract SimpleSwap"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_SimpleSwap_$1337",
																			"typeString": "contract SimpleSwap"
																		}
																	],
																	"id": 1033,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2943:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1032,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2943:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 1035,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2943:13:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 1030,
																"name": "token0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 793,
																"src": "2926:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$729",
																	"typeString": "contract IERC20"
																}
															},
															"id": 1031,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2933:9:5",
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 686,
															"src": "2926:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 1036,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2926:31:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2915:42:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1038,
												"nodeType": "ExpressionStatement",
												"src": "2915:42:5"
											},
											{
												"expression": {
													"id": 1047,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1039,
														"name": "reserve1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 800,
														"src": "2968:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1044,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "3004:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_SimpleSwap_$1337",
																			"typeString": "contract SimpleSwap"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_SimpleSwap_$1337",
																			"typeString": "contract SimpleSwap"
																		}
																	],
																	"id": 1043,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2996:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1042,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2996:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 1045,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2996:13:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 1040,
																"name": "token1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 796,
																"src": "2979:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$729",
																	"typeString": "contract IERC20"
																}
															},
															"id": 1041,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2986:9:5",
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 686,
															"src": "2979:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 1046,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2979:31:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2968:42:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1048,
												"nodeType": "ExpressionStatement",
												"src": "2968:42:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1050,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3033:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1051,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3037:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3033:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1052,
															"name": "amount0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 951,
															"src": "3045:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1053,
															"name": "amount1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 953,
															"src": "3054:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1049,
														"name": "Burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 946,
														"src": "3028:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1054,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3028:34:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1055,
												"nodeType": "EmitStatement",
												"src": "3023:39:5"
											}
										]
									},
									"functionSelector": "9c8f9f23",
									"id": 1057,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidity",
									"nameLocation": "2169:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 949,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 948,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "2190:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1057,
												"src": "2185:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 947,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2185:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2184:16:5"
									},
									"returnParameters": {
										"id": 954,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 951,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "2225:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1057,
												"src": "2220:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 950,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2220:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 953,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "2239:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1057,
												"src": "2234:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 952,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2234:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2219:28:5"
									},
									"scope": 1337,
									"src": "2160:910:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1097,
										"nodeType": "Block",
										"src": "3214:212:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1071,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1069,
																"name": "amountIn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1059,
																"src": "3233:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1070,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3244:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3233:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "494e53554646494349454e545f414d4f554e54",
															"id": 1072,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3247:21:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e8788a811b2f03c33c54d190798bfa174d3e97deda56c09c1df2080dcc8d5158",
																"typeString": "literal_string \"INSUFFICIENT_AMOUNT\""
															},
															"value": "INSUFFICIENT_AMOUNT"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e8788a811b2f03c33c54d190798bfa174d3e97deda56c09c1df2080dcc8d5158",
																"typeString": "literal_string \"INSUFFICIENT_AMOUNT\""
															}
														],
														"id": 1068,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3225:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1073,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3225:44:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1074,
												"nodeType": "ExpressionStatement",
												"src": "3225:44:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1082,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1078,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1076,
																	"name": "reserveIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1061,
																	"src": "3288:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1077,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3300:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "3288:13:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1081,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1079,
																	"name": "reserveOut",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1063,
																	"src": "3305:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1080,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3318:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "3305:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3288:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "494e53554646494349454e545f4c4951554944495459",
															"id": 1083,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3322:24:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e8d3230d72418d9aed77f45ee412f45396c3f3cd599a1a457d8130d57af1a83e",
																"typeString": "literal_string \"INSUFFICIENT_LIQUIDITY\""
															},
															"value": "INSUFFICIENT_LIQUIDITY"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e8d3230d72418d9aed77f45ee412f45396c3f3cd599a1a457d8130d57af1a83e",
																"typeString": "literal_string \"INSUFFICIENT_LIQUIDITY\""
															}
														],
														"id": 1075,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3280:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1084,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3280:67:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1085,
												"nodeType": "ExpressionStatement",
												"src": "3280:67:5"
											},
											{
												"expression": {
													"id": 1095,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1086,
														"name": "amountOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1066,
														"src": "3360:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1094,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1089,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1087,
																"name": "amountIn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1059,
																"src": "3372:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1088,
																"name": "reserveOut",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1063,
																"src": "3383:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3372:21:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1092,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1090,
																		"name": "reserveIn",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1061,
																		"src": "3397:9:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 1091,
																		"name": "amountIn",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1059,
																		"src": "3409:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3397:20:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1093,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3396:22:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3372:46:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3360:58:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1096,
												"nodeType": "ExpressionStatement",
												"src": "3360:58:5"
											}
										]
									},
									"functionSelector": "054d50d4",
									"id": 1098,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountOut",
									"nameLocation": "3116:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1064,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1059,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "3134:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1098,
												"src": "3129:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1058,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3129:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1061,
												"mutability": "mutable",
												"name": "reserveIn",
												"nameLocation": "3149:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1098,
												"src": "3144:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1060,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3144:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1063,
												"mutability": "mutable",
												"name": "reserveOut",
												"nameLocation": "3165:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1098,
												"src": "3160:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1062,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3160:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3128:48:5"
									},
									"returnParameters": {
										"id": 1067,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1066,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "3203:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1098,
												"src": "3198:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1065,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3198:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3197:16:5"
									},
									"scope": 1337,
									"src": "3107:319:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "24043855bfbfea0ccea141e5a73d7116bf0bfe083ea900a791f4b407ff03e525",
									"id": 1110,
									"name": "Swap",
									"nameLocation": "3440:4:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1100,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3461:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "3445:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1099,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3445:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1102,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "3474:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "3469:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1101,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3469:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1104,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenIn",
												"nameLocation": "3492:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "3484:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3484:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1106,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "3506:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "3501:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1105,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3501:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1108,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenOut",
												"nameLocation": "3525:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "3517:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1107,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3517:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3444:90:5"
									},
									"src": "3434:101:5"
								},
								{
									"body": {
										"id": 1262,
										"nodeType": "Block",
										"src": "3664:1048:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1128,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1126,
																"name": "amountIn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1112,
																"src": "3683:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1127,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3694:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3683:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "494e53554646494349454e545f4f55545055545f414d4f554e54",
															"id": 1129,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3697:28:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bbbb4868217c0daeb6721d77d471da8aa8a80672b4258dd2de9d7ccde9bf2146",
																"typeString": "literal_string \"INSUFFICIENT_OUTPUT_AMOUNT\""
															},
															"value": "INSUFFICIENT_OUTPUT_AMOUNT"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bbbb4868217c0daeb6721d77d471da8aa8a80672b4258dd2de9d7ccde9bf2146",
																"typeString": "literal_string \"INSUFFICIENT_OUTPUT_AMOUNT\""
															}
														],
														"id": 1125,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3675:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3675:51:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1131,
												"nodeType": "ExpressionStatement",
												"src": "3675:51:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1139,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_contract$_IERC20_$729",
																	"typeString": "contract IERC20"
																},
																"id": 1135,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1133,
																	"name": "tokenIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1115,
																	"src": "3745:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$729",
																		"typeString": "contract IERC20"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 1134,
																	"name": "token0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 793,
																	"src": "3756:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$729",
																		"typeString": "contract IERC20"
																	}
																},
																"src": "3745:17:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_contract$_IERC20_$729",
																	"typeString": "contract IERC20"
																},
																"id": 1138,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1136,
																	"name": "tokenIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1115,
																	"src": "3766:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$729",
																		"typeString": "contract IERC20"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 1137,
																	"name": "token1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 796,
																	"src": "3777:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$729",
																		"typeString": "contract IERC20"
																	}
																},
																"src": "3766:17:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3745:38:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "494e56414c49445f544f4b454e",
															"id": 1140,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3785:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_436b5627177a9781148596ddddd93f72d53dd82575a018216d5aaf2a8219ec9e",
																"typeString": "literal_string \"INVALID_TOKEN\""
															},
															"value": "INVALID_TOKEN"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_436b5627177a9781148596ddddd93f72d53dd82575a018216d5aaf2a8219ec9e",
																"typeString": "literal_string \"INVALID_TOKEN\""
															}
														],
														"id": 1132,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3737:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3737:64:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1142,
												"nodeType": "ExpressionStatement",
												"src": "3737:64:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_contract$_IERC20_$729",
														"typeString": "contract IERC20"
													},
													"id": 1145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1143,
														"name": "tokenIn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1115,
														"src": "3818:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$729",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1144,
														"name": "token0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 793,
														"src": "3829:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$729",
															"typeString": "contract IERC20"
														}
													},
													"src": "3818:17:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1225,
													"nodeType": "Block",
													"src": "4160:317:5",
													"statements": [
														{
															"expression": {
																"id": 1188,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1186,
																	"name": "tokenOut",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1123,
																	"src": "4175:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$729",
																		"typeString": "contract IERC20"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1187,
																	"name": "token0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 793,
																	"src": "4186:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$729",
																		"typeString": "contract IERC20"
																	}
																},
																"src": "4175:17:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$729",
																	"typeString": "contract IERC20"
																}
															},
															"id": 1189,
															"nodeType": "ExpressionStatement",
															"src": "4175:17:5"
														},
														{
															"expression": {
																"id": 1196,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1190,
																	"name": "amountOut",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1120,
																	"src": "4207:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1192,
																			"name": "amountIn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1112,
																			"src": "4232:8:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 1193,
																			"name": "reserve1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 800,
																			"src": "4242:8:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 1194,
																			"name": "reserve0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 798,
																			"src": "4252:8:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1191,
																		"name": "getAmountOut",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1098,
																		"src": "4219:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1195,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4219:42:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4207:54:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1197,
															"nodeType": "ExpressionStatement",
															"src": "4207:54:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1201,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1199,
																			"name": "amountOut",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1120,
																			"src": "4284:9:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"id": 1200,
																			"name": "tokenOutMin",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1117,
																			"src": "4296:11:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4284:23:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "494e53554646494349454e545f4f55545055545f414d4f554e54",
																		"id": 1202,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4309:28:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_bbbb4868217c0daeb6721d77d471da8aa8a80672b4258dd2de9d7ccde9bf2146",
																			"typeString": "literal_string \"INSUFFICIENT_OUTPUT_AMOUNT\""
																		},
																		"value": "INSUFFICIENT_OUTPUT_AMOUNT"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_bbbb4868217c0daeb6721d77d471da8aa8a80672b4258dd2de9d7ccde9bf2146",
																			"typeString": "literal_string \"INSUFFICIENT_OUTPUT_AMOUNT\""
																		}
																	],
																	"id": 1198,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "4276:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1203,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4276:62:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1204,
															"nodeType": "ExpressionStatement",
															"src": "4276:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1208,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "4374:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1209,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4378:6:5",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "4374:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 1212,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "4394:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_SimpleSwap_$1337",
																					"typeString": "contract SimpleSwap"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_SimpleSwap_$1337",
																					"typeString": "contract SimpleSwap"
																				}
																			],
																			"id": 1211,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4386:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1210,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4386:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1213,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4386:13:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1214,
																		"name": "amountIn",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1112,
																		"src": "4401:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1205,
																		"name": "tokenIn",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1115,
																		"src": "4353:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$729",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1207,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4361:12:5",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 728,
																	"src": "4353:20:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																"id": 1215,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4353:57:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1216,
															"nodeType": "ExpressionStatement",
															"src": "4353:57:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1220,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "4443:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1221,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4447:6:5",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "4443:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1222,
																		"name": "amountOut",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1120,
																		"src": "4455:9:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1217,
																		"name": "tokenOut",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1123,
																		"src": "4425:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$729",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1219,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4434:8:5",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 696,
																	"src": "4425:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 1223,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4425:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1224,
															"nodeType": "ExpressionStatement",
															"src": "4425:40:5"
														}
													]
												},
												"id": 1226,
												"nodeType": "IfStatement",
												"src": "3814:663:5",
												"trueBody": {
													"id": 1185,
													"nodeType": "Block",
													"src": "3837:317:5",
													"statements": [
														{
															"expression": {
																"id": 1148,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1146,
																	"name": "tokenOut",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1123,
																	"src": "3852:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$729",
																		"typeString": "contract IERC20"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1147,
																	"name": "token1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 796,
																	"src": "3863:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$729",
																		"typeString": "contract IERC20"
																	}
																},
																"src": "3852:17:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$729",
																	"typeString": "contract IERC20"
																}
															},
															"id": 1149,
															"nodeType": "ExpressionStatement",
															"src": "3852:17:5"
														},
														{
															"expression": {
																"id": 1156,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1150,
																	"name": "amountOut",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1120,
																	"src": "3884:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1152,
																			"name": "amountIn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1112,
																			"src": "3909:8:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 1153,
																			"name": "reserve0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 798,
																			"src": "3919:8:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 1154,
																			"name": "reserve1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 800,
																			"src": "3929:8:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1151,
																		"name": "getAmountOut",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1098,
																		"src": "3896:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1155,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3896:42:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3884:54:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1157,
															"nodeType": "ExpressionStatement",
															"src": "3884:54:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1161,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1159,
																			"name": "amountOut",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1120,
																			"src": "3961:9:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"id": 1160,
																			"name": "tokenOutMin",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1117,
																			"src": "3973:11:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3961:23:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "494e53554646494349454e545f4f55545055545f414d4f554e54",
																		"id": 1162,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3986:28:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_bbbb4868217c0daeb6721d77d471da8aa8a80672b4258dd2de9d7ccde9bf2146",
																			"typeString": "literal_string \"INSUFFICIENT_OUTPUT_AMOUNT\""
																		},
																		"value": "INSUFFICIENT_OUTPUT_AMOUNT"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_bbbb4868217c0daeb6721d77d471da8aa8a80672b4258dd2de9d7ccde9bf2146",
																			"typeString": "literal_string \"INSUFFICIENT_OUTPUT_AMOUNT\""
																		}
																	],
																	"id": 1158,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3953:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1163,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3953:62:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1164,
															"nodeType": "ExpressionStatement",
															"src": "3953:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1168,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "4051:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1169,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4055:6:5",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "4051:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 1172,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "4071:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_SimpleSwap_$1337",
																					"typeString": "contract SimpleSwap"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_SimpleSwap_$1337",
																					"typeString": "contract SimpleSwap"
																				}
																			],
																			"id": 1171,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4063:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1170,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4063:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1173,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4063:13:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1174,
																		"name": "amountIn",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1112,
																		"src": "4078:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1165,
																		"name": "tokenIn",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1115,
																		"src": "4030:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$729",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1167,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4038:12:5",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 728,
																	"src": "4030:20:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																"id": 1175,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4030:57:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1176,
															"nodeType": "ExpressionStatement",
															"src": "4030:57:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1180,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "4120:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1181,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4124:6:5",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "4120:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1182,
																		"name": "amountOut",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1120,
																		"src": "4132:9:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1177,
																		"name": "tokenOut",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1123,
																		"src": "4102:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$729",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1179,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4111:8:5",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 696,
																	"src": "4102:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 1183,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4102:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1184,
															"nodeType": "ExpressionStatement",
															"src": "4102:40:5"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1227,
														"name": "reserve0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "4517:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1232,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "4553:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_SimpleSwap_$1337",
																			"typeString": "contract SimpleSwap"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_SimpleSwap_$1337",
																			"typeString": "contract SimpleSwap"
																		}
																	],
																	"id": 1231,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4545:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1230,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4545:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 1233,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4545:13:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 1228,
																"name": "token0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 793,
																"src": "4528:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$729",
																	"typeString": "contract IERC20"
																}
															},
															"id": 1229,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4535:9:5",
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 686,
															"src": "4528:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 1234,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4528:31:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4517:42:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1236,
												"nodeType": "ExpressionStatement",
												"src": "4517:42:5"
											},
											{
												"expression": {
													"id": 1245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1237,
														"name": "reserve1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 800,
														"src": "4570:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1242,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "4606:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_SimpleSwap_$1337",
																			"typeString": "contract SimpleSwap"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_SimpleSwap_$1337",
																			"typeString": "contract SimpleSwap"
																		}
																	],
																	"id": 1241,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4598:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1240,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4598:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 1243,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4598:13:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 1238,
																"name": "token1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 796,
																"src": "4581:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$729",
																	"typeString": "contract IERC20"
																}
															},
															"id": 1239,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4588:9:5",
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 686,
															"src": "4581:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 1244,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4581:31:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4570:42:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1246,
												"nodeType": "ExpressionStatement",
												"src": "4570:42:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1248,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4635:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1249,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4639:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4635:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1250,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1112,
															"src": "4647:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"id": 1253,
																	"name": "tokenIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1115,
																	"src": "4665:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$729",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$729",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1252,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4657:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1251,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4657:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1254,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4657:16:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1255,
															"name": "amountOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1120,
															"src": "4675:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"id": 1258,
																	"name": "tokenOut",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1123,
																	"src": "4694:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$729",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$729",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1257,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4686:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1256,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4686:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1259,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4686:17:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1247,
														"name": "Swap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1110,
														"src": "4630:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address,uint256,address)"
														}
													},
													"id": 1260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4630:74:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1261,
												"nodeType": "EmitStatement",
												"src": "4625:79:5"
											}
										]
									},
									"functionSelector": "43264349",
									"id": 1263,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swap",
									"nameLocation": "3559:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1112,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "3569:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1263,
												"src": "3564:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1111,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3564:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1115,
												"mutability": "mutable",
												"name": "tokenIn",
												"nameLocation": "3586:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1263,
												"src": "3579:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$729",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1114,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1113,
														"name": "IERC20",
														"nameLocations": [
															"3579:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 729,
														"src": "3579:6:5"
													},
													"referencedDeclaration": 729,
													"src": "3579:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$729",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1117,
												"mutability": "mutable",
												"name": "tokenOutMin",
												"nameLocation": "3600:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 1263,
												"src": "3595:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1116,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3595:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3563:49:5"
									},
									"returnParameters": {
										"id": 1124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1120,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "3636:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1263,
												"src": "3631:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1119,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3631:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1123,
												"mutability": "mutable",
												"name": "tokenOut",
												"nameLocation": "3654:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1263,
												"src": "3647:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$729",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1122,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1121,
														"name": "IERC20",
														"nameLocations": [
															"3647:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 729,
														"src": "3647:6:5"
													},
													"referencedDeclaration": 729,
													"src": "3647:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$729",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3630:33:5"
									},
									"scope": 1337,
									"src": "3550:1162:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1316,
										"nodeType": "Block",
										"src": "4774:250:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1270,
														"name": "y",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1265,
														"src": "4789:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "33",
														"id": 1271,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4793:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"src": "4789:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1308,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1306,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1265,
															"src": "4977:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 1307,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4982:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4977:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1314,
													"nodeType": "IfStatement",
													"src": "4973:44:5",
													"trueBody": {
														"id": 1313,
														"nodeType": "Block",
														"src": "4985:32:5",
														"statements": [
															{
																"expression": {
																	"id": 1311,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 1309,
																		"name": "z",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1268,
																		"src": "5000:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"hexValue": "31",
																		"id": 1310,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5004:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "5000:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1312,
																"nodeType": "ExpressionStatement",
																"src": "5000:5:5"
															}
														]
													}
												},
												"id": 1315,
												"nodeType": "IfStatement",
												"src": "4785:232:5",
												"trueBody": {
													"id": 1305,
													"nodeType": "Block",
													"src": "4796:171:5",
													"statements": [
														{
															"expression": {
																"id": 1275,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1273,
																	"name": "z",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1268,
																	"src": "4811:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1274,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1265,
																	"src": "4815:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4811:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1276,
															"nodeType": "ExpressionStatement",
															"src": "4811:5:5"
														},
														{
															"assignments": [
																1278
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1278,
																	"mutability": "mutable",
																	"name": "x",
																	"nameLocation": "4836:1:5",
																	"nodeType": "VariableDeclaration",
																	"scope": 1305,
																	"src": "4831:6:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1277,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "4831:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1284,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1283,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1281,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1279,
																		"name": "y",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1265,
																		"src": "4840:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "32",
																		"id": 1280,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4844:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "4840:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1282,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4848:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "4840:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4831:18:5"
														},
														{
															"body": {
																"id": 1303,
																"nodeType": "Block",
																"src": "4878:78:5",
																"statements": [
																	{
																		"expression": {
																			"id": 1290,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1288,
																				"name": "z",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1268,
																				"src": "4897:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 1289,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1278,
																				"src": "4901:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4897:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1291,
																		"nodeType": "ExpressionStatement",
																		"src": "4897:5:5"
																	},
																	{
																		"expression": {
																			"id": 1301,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1292,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1278,
																				"src": "4921:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1300,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 1297,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1295,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1293,
																									"name": "y",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1265,
																									"src": "4926:1:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "/",
																								"rightExpression": {
																									"id": 1294,
																									"name": "x",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1278,
																									"src": "4930:1:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "4926:5:5",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "+",
																							"rightExpression": {
																								"id": 1296,
																								"name": "x",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1278,
																								"src": "4934:1:5",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "4926:9:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 1298,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "4925:11:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"hexValue": "32",
																					"id": 1299,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "4939:1:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_2_by_1",
																						"typeString": "int_const 2"
																					},
																					"value": "2"
																				},
																				"src": "4925:15:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4921:19:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1302,
																		"nodeType": "ExpressionStatement",
																		"src": "4921:19:5"
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1287,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1285,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1278,
																	"src": "4871:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1286,
																	"name": "z",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1268,
																	"src": "4875:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4871:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1304,
															"nodeType": "WhileStatement",
															"src": "4864:92:5"
														}
													]
												}
											}
										]
									},
									"id": 1317,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "4729:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1265,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "4739:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1317,
												"src": "4734:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1264,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4734:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4733:8:5"
									},
									"returnParameters": {
										"id": 1269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1268,
												"mutability": "mutable",
												"name": "z",
												"nameLocation": "4771:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1317,
												"src": "4766:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1267,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4766:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4765:8:5"
									},
									"scope": 1337,
									"src": "4720:304:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1335,
										"nodeType": "Block",
										"src": "5093:37:5",
										"statements": [
											{
												"expression": {
													"id": 1333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1326,
														"name": "z",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1324,
														"src": "5104:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1329,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1327,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1319,
																"src": "5108:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1328,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1321,
																"src": "5112:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5108:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"id": 1331,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1319,
															"src": "5120:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1332,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "5108:13:5",
														"trueExpression": {
															"id": 1330,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1321,
															"src": "5116:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5104:17:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1334,
												"nodeType": "ExpressionStatement",
												"src": "5104:17:5"
											}
										]
									},
									"id": 1336,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "5041:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1319,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "5050:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1336,
												"src": "5045:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1318,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5045:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1321,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "5058:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1336,
												"src": "5053:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1320,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5053:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5044:16:5"
									},
									"returnParameters": {
										"id": 1325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1324,
												"mutability": "mutable",
												"name": "z",
												"nameLocation": "5090:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1336,
												"src": "5085:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1323,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5085:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5084:8:5"
									},
									"scope": 1337,
									"src": "5032:98:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1338,
							"src": "432:4822:5",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": [
								663,
								672,
								830,
								946,
								1110
							]
						}
					],
					"src": "39:5446:5"
				},
				"id": 5
			}
		}
	}
}